{
  "b-autocomplete/value": {
    "description": "Binding value",
    "type": "string|number"
  },
  "b-autocomplete/data": {
    "description": "Options / suggestions",
    "type": "array<string>|array<number>, array<object>"
  },
  "b-autocomplete/field": {
    "description": "Property of the object (if data is array of objects) to use as display text, and to keep track of selected option",
    "type": "string"
  },
  "b-autocomplete/custom-formatter": {
    "description": "Function to format an option to a string for display in the input as alternative to field prop)",
    "type": "function"
  },
  "b-autocomplete/clear-on-select": {
    "description": "Clear input text on select",
    "type": "boolean"
  },
  "b-autocomplete/open-on-focus": {
    "description": "Open dropdown list on focus",
    "type": "boolean"
  },
  "b-autocomplete/keep-first": {
    "description": "The first option will always be pre-selected (easier to just hit enter or tab)",
    "type": "boolean"
  },
  "b-autocomplete/size": {
    "description": "Vertical size of input, optional",
    "type": "string"
  },
  "b-autocomplete/expanded": {
    "description": "Makes input full width when inside a grouped or addon field",
    "type": "boolean"
  },
  "b-autocomplete/loading": {
    "description": "Add the loading state to the input",
    "type": "boolean"
  },
  "b-autocomplete/icon": {
    "description": "Icon name to be added",
    "type": "string"
  },
  "b-autocomplete/icon-pack": {
    "description": "Icon pack to use",
    "type": "string"
  },
  "b-autocomplete/clearable": {
    "description": "Add a button to clear the inputed text",
    "type": "boolean"
  },
  "b-autocomplete/icon-right": {
    "description": "Icon name to be added on the right side",
    "type": "string"
  },
  "b-autocomplete/maxlength": {
    "description": "Same as native maxlength, plus character counter",
    "type": "string|number"
  },
  "b-autocomplete/check-infinite-scroll": {
    "description": "Makes the component check if list reached scroll end and emit infinite-scroll event.",
    "type": "boolean"
  },
  "b-autocomplete/max-height": {
    "description": "Max height of dropdown content",
    "type": "string|number"
  },
  "b-autocomplete/dropdown-position": {
    "description": "Position of dropdown",
    "type": "string"
  },
  "b-autocomplete/append-to-body": {
    "description": "Append autocomplete content to body",
    "type": "boolean"
  },
  "b-autocomplete/Any native attribute": {
    "description": "—",
    "type": "—"
  },
  "b-button/type": {
    "description": "Type (color) of the control, optional",
    "type": "string"
  },
  "b-button/size": {
    "description": "Vertical size of button, optional",
    "type": "string"
  },
  "b-button/label": {
    "description": "Button label, optional when default slot",
    "type": "string"
  },
  "b-button/loading": {
    "description": "Add the loading state to the button",
    "type": "boolean"
  },
  "b-button/rounded": {
    "description": "Rounded style",
    "type": "boolean"
  },
  "b-button/outlined": {
    "description": "Outlined style",
    "type": "boolean"
  },
  "b-button/expanded": {
    "description": "Button will be expanded (full-width)",
    "type": "boolean"
  },
  "b-button/icon-left": {
    "description": "Icon name to show on the left",
    "type": "string"
  },
  "b-button/icon-right": {
    "description": "Icon name to show on the right",
    "type": "string"
  },
  "b-button/icon-pack": {
    "description": "Icon pack to use",
    "type": "string"
  },
  "b-button/native-type": {
    "description": "Button type, like native",
    "type": "string"
  },
  "b-button/tag": {
    "description": "Button tag name",
    "type": "string"
  },
  "b-button/Any native attribute": {
    "description": "—",
    "type": "—"
  },
  "b-carousel/value": {
    "description": "Binding value",
    "type": "number"
  },
  "b-carousel/animated": {
    "description": "Transition effect",
    "type": "string"
  },
  "b-carousel/interval": {
    "description": "Interval of the autoplay, in milliseconds",
    "type": "number"
  },
  "b-carousel/has-drag": {
    "description": "Toggle touch dragging, when touch not detected. auto switch mouse dragging",
    "type": "boolean"
  },
  "b-carousel/autoplay": {
    "description": "Whether automatically loop the slides",
    "type": "boolean"
  },
  "b-carousel/pause-hover": {
    "description": "Pause carousel when autoplay and mouse enter",
    "type": "boolean"
  },
  "b-carousel/pause-info": {
    "description": "Show infomation pause when autoplay and pause-hover",
    "type": "boolean"
  },
  "b-carousel/pause-info-type": {
    "description": "Type (color) of the pause-info, optional",
    "type": "string"
  },
  "b-carousel/pause-text": {
    "description": "Text when pause",
    "type": "string"
  },
  "b-carousel/arrow": {
    "description": "\tDisplay the \"next\" and \"prev\" action",
    "type": "boolean"
  },
  "b-carousel/arrow-both": {
    "description": "Display the \"next\" and \"prev\" action when first or last item",
    "type": "boolean"
  },
  "b-carousel/arrow-hover": {
    "description": "Display the \"next\" and \"prev\" action when hover, but hidden on mobile",
    "type": "boolean"
  },
  "b-carousel/repeat": {
    "description": "Controls whether the carousel loops around at the start and end.",
    "type": "boolean"
  },
  "b-carousel/icon-pack": {
    "description": "Icon pack to use",
    "type": "string"
  },
  "b-carousel/icon-size": {
    "description": "Arrow icon size, optional",
    "type": "string"
  },
  "b-carousel/icon-prev": {
    "description": "Icon to use for previous arrow",
    "type": "string"
  },
  "b-carousel/icon-next": {
    "description": "Icon to use for next arrow",
    "type": "string"
  },
  "b-carousel/indicator": {
    "description": "Display the indicator for jumping to specific item",
    "type": "boolean"
  },
  "b-carousel/indicator-background": {
    "description": "Added background for indicator",
    "type": "boolean"
  },
  "b-carousel/indicator-custom": {
    "description": "use when the image is more than 6 so that the indicator is not too small",
    "type": "boolean"
  },
  "b-carousel/indicator-custom-size": {
    "description": "image size on the indicator when the indicator-custom is used",
    "type": "string"
  },
  "b-carousel/indicator-inside": {
    "description": "Display the indicator inside on carousel",
    "type": "boolean"
  },
  "b-carousel/indicator-mode": {
    "description": "Trigger for action indicator",
    "type": "string"
  },
  "b-carousel/indicator-position": {
    "description": "Position indicator only when indicator-inside",
    "type": "string"
  },
  "b-carousel/indicator-style": {
    "description": "Style for indicator of carousel",
    "type": "string"
  },
  "b-carousel/overlay": {
    "description": "Switch like a gallery",
    "type": "boolean"
  },
  "b-carousel/progress": {
    "description": "Display the progress item of carousel",
    "type": "boolean"
  },
  "b-carousel/progress-type": {
    "description": "Type (color) of the progress, optional",
    "type": "string"
  },
  "b-carousel/with-carousel-list": {
    "description": "use this when indicator custom with b-carousel-list",
    "type": "boolean"
  },
  "b-carousel-list/value": {
    "description": "Binding value",
    "type": "number"
  },
  "b-carousel-list/data": {
    "description": "Carousel-list data",
    "type": "array"
  },
  "b-carousel-list/config": {
    "description": "An object to pass all configs",
    "type": "object"
  },
  "b-carousel-list/has-drag": {
    "description": "Toggle touch dragging, when touch not detected. auto switch mouse dragging",
    "type": "boolean"
  },
  "b-carousel-list/has-grayscale": {
    "description": "Give a effect grayscale on img",
    "type": "boolean"
  },
  "b-carousel-list/has-opacity": {
    "description": "Give a effect opacity on img",
    "type": "boolean"
  },
  "b-carousel-list/repeat": {
    "description": "Back to value 0 when item active same with total data",
    "type": "boolean"
  },
  "b-carousel-list/items-to-show": {
    "description": "count of items to showed per view (support a decimal).",
    "type": "number"
  },
  "b-carousel-list/items-to-list": {
    "description": "count of items to list when use navigation buttons",
    "type": "number"
  },
  "b-carousel-list/as-indicator": {
    "description": "Switch mode to indicator for carousel",
    "type": "boolean"
  },
  "b-carousel-list/refresh": {
    "description": "Refresh for overlay carousel",
    "type": "boolean"
  },
  "b-carousel-list/arrow": {
    "description": "Display the \"next\" or \"prev\" action when first or last item",
    "type": "boolean"
  },
  "b-carousel-list/arrow-hover": {
    "description": "Display Arrow action when hover, but hidden on mobile",
    "type": "boolean"
  },
  "b-carousel-list/icon-pack": {
    "description": "Icon pack to use",
    "type": "string"
  },
  "b-carousel-list/icon-size": {
    "description": "Arrow icon size, optional",
    "type": "string"
  },
  "b-carousel-list/icon-prev": {
    "description": "Icon to use for previous arrow",
    "type": "string"
  },
  "b-carousel-list/icon-next": {
    "description": "Icon to use for next arrow",
    "type": "string"
  },
  "b-checkbox/value": {
    "description": "Binding value",
    "type": "any"
  },
  "b-checkbox/native-value": {
    "description": "Same as native value",
    "type": "any"
  },
  "b-checkbox/indeterminate": {
    "description": "Same as native indeterminate",
    "type": "boolean"
  },
  "b-checkbox/true-value": {
    "description": "Overrides the returned value when it's checked",
    "type": "any"
  },
  "b-checkbox/false-value": {
    "description": "Overrides the returned value when it's not checked",
    "type": "any"
  },
  "b-checkbox/disabled": {
    "description": "Same as native disabled",
    "type": "boolean"
  },
  "b-checkbox/required": {
    "description": "Same as native required",
    "type": "boolean"
  },
  "b-checkbox/name": {
    "description": "Same as native name",
    "type": "string"
  },
  "b-checkbox/size": {
    "description": "Size  of the control, optional",
    "type": "string"
  },
  "b-checkbox/type": {
    "description": "Type (color) of the control, optional",
    "type": "string"
  },
  "b-checkbox-button/value": {
    "description": "Binding value",
    "type": "any"
  },
  "b-checkbox-button/native-value": {
    "description": "Same as native value",
    "type": "any"
  },
  "b-checkbox-button/type": {
    "description": "Type (color) of the button <strong>when checked</strong>",
    "type": "string"
  },
  "b-checkbox-button/disabled": {
    "description": "Same as native disabled",
    "type": "boolean"
  },
  "b-checkbox-button/name": {
    "description": "Same as native name",
    "type": "string"
  },
  "b-checkbox-button/size": {
    "description": "Size of the button, optional",
    "type": "string"
  },
  "b-checkbox-button/expanded": {
    "description": "Checkbox button will be expanded (full-width)",
    "type": "boolean"
  },
  "b-clockpicker/value": {
    "description": "Binding value",
    "type": "date"
  },
  "b-clockpicker/type": {
    "description": "Type (color) of the button <strong>when checked</strong>",
    "type": "string"
  },
  "b-clockpicker/hour-format": {
    "description": "Hour format for input and display",
    "type": "string"
  },
  "b-clockpicker/time-formatter": {
    "description": "Function to format time (Date type) to a string for display in the input",
    "type": "function"
  },
  "b-clockpicker/time-parser": {
    "description": "Function to parse string to a time (Date type) for set a time from the input to the component",
    "type": "function"
  },
  "b-clockpicker/min-time": {
    "description": "Earliest time available for selection",
    "type": "date"
  },
  "b-clockpicker/max-time": {
    "description": "Latest time available for selection",
    "type": "date"
  },
  "b-clockpicker/size": {
    "description": "Vertical size of input, optional",
    "type": "string"
  },
  "b-clockpicker/inline": {
    "description": "Clockpicker is shown inline, input is removed",
    "type": "boolean"
  },
  "b-clockpicker/editable": {
    "description": "Enable input/typing. <b>Note that you might have to set a custom time parser</b>",
    "type": "boolean"
  },
  "b-clockpicker/disabled": {
    "description": "Disables the input field and/or picker",
    "type": "boolean"
  },
  "b-clockpicker/loading": {
    "description": "Add the loading state to the input",
    "type": "boolean"
  },
  "b-clockpicker/icon": {
    "description": "Icon name to be added",
    "type": "string"
  },
  "b-clockpicker/icon-pack": {
    "description": "Icon pack to use",
    "type": "string"
  },
  "b-clockpicker/unselectable-times": {
    "description": "Array of unselectable times (Date object)",
    "type": "array"
  },
  "b-clockpicker/mobile-native": {
    "description": "Enable native timepicker on mobile",
    "type": "boolean"
  },
  "b-clockpicker/position": {
    "description": "Optional, position of the timepicker relative to the input",
    "type": "string"
  },
  "b-clockpicker/auto-switch": {
    "description": "Automatically switches between hour and minutes selection after click",
    "type": "boolean"
  },
  "b-clockpicker/open-on-focus": {
    "description": "Open clockpicker on input focus",
    "type": "boolean"
  },
  "b-clockpicker/hours-label": {
    "description": "Label to show on hour button",
    "type": "string"
  },
  "b-clockpicker/minutes-label": {
    "description": "Label to show on minutes button",
    "type": "string"
  },
  "b-clockpicker/append-to-body": {
    "description": "Append clockpicker calendar to body",
    "type": "boolean"
  },
  "b-clockpicker/Any native attribute": {
    "description": "—",
    "type": "—"
  },
  "b-collapse/open": {
    "description": "Whether collapse is open or not, use the .sync modifier to make it two-way binding",
    "type": "boolean"
  },
  "b-collapse/animation": {
    "description": "Custom animation (transition name)",
    "type": "string"
  },
  "b-collapse/aria-id": {
    "description": "Id for the container div. Should be used with aria-controls on trigger for better accessibility.",
    "type": "string"
  },
  "b-collapse/position": {
    "description": "Trigger position",
    "type": "string"
  },
  "b-datepicker/value": {
    "description": "Binding value",
    "type": "date"
  },
  "b-datepicker/date-formatter": {
    "description": "Function to format date to a string for display in the input",
    "type": "function"
  },
  "b-datepicker/date-parser": {
    "description": "Function to parse string to a date for set a date from the input to the component",
    "type": "function"
  },
  "b-datepicker/date-creator": {
    "description": "Function used internally to create a new Date instance",
    "type": "function"
  },
  "b-datepicker/min-date": {
    "description": "Earliest date available for selection",
    "type": "date"
  },
  "b-datepicker/max-date": {
    "description": "Latest date available for selection",
    "type": "date"
  },
  "b-datepicker/events": {
    "description": "Dates to display indicators",
    "type": "array"
  },
  "b-datepicker/indicators": {
    "description": "Shape to use when showing event indicators",
    "type": "string"
  },
  "b-datepicker/focused-date": {
    "description": "Date that should be initially focused upon",
    "type": "date"
  },
  "b-datepicker/size": {
    "description": "Vertical size of input and picker, optional",
    "type": "string"
  },
  "b-datepicker/inline": {
    "description": "Datepicker is shown inline, input is removed",
    "type": "boolean"
  },
  "b-datepicker/editable": {
    "description": "Enable input/typing. <b>Note that you might have to set a custom date parser</b>",
    "type": "boolean"
  },
  "b-datepicker/loading": {
    "description": "Add the loading state to the input",
    "type": "boolean"
  },
  "b-datepicker/icon": {
    "description": "Icon name to be added",
    "type": "string"
  },
  "b-datepicker/icon-pack": {
    "description": "Icon pack to use",
    "type": "string"
  },
  "b-datepicker/icon-prev": {
    "description": "Icon to use for previous month",
    "type": "string"
  },
  "b-datepicker/icon-next": {
    "description": "Icon to use for next month",
    "type": "string"
  },
  "b-datepicker/unselectable-dates": {
    "description": "Array of unselectable dates",
    "type": "array"
  },
  "b-datepicker/unselectable-days-of-week": {
    "description": "Array of unselectable days of week",
    "type": "array"
  },
  "b-datepicker/selectable-dates": {
    "description": "Array of selectable dates",
    "type": "array"
  },
  "b-datepicker/month-names": {
    "description": "Names of months to display in table header",
    "type": "array"
  },
  "b-datepicker/day-names": {
    "description": "Names of days to display in table header",
    "type": "array"
  },
  "b-datepicker/first-day-of-week": {
    "description": "First day of week to display in table header",
    "type": "number"
  },
  "b-datepicker/mobile-native": {
    "description": "Enable native datepicker on mobile",
    "type": "boolean"
  },
  "b-datepicker/position": {
    "description": "Optional, position of the datepicker relative to the input",
    "type": "string"
  },
  "b-datepicker/open-on-focus": {
    "description": "Open datepicker on input focus",
    "type": "boolean"
  },
  "b-datepicker/type": {
    "description": "Type of picker",
    "type": "string"
  },
  "b-datepicker/years-range": {
    "description": "Years range relative to selected year",
    "type": "array"
  },
  "b-datepicker/nearby-month-days": {
    "description": "Show/Hide nearby month days (prev and next month)",
    "type": "boolean"
  },
  "b-datepicker/nearby-selectable-month-days": {
    "description": "When nearby-month-days, it allows to select/unselect nearby month days",
    "type": "boolean"
  },
  "b-datepicker/show-week-number": {
    "description": "Display week number",
    "type": "boolean"
  },
  "b-datepicker/rules-for-first-week": {
    "description": "Choose the rule to determinate the first week of Year, 4 for ISO or 1 for other",
    "type": "number"
  },
  "b-datepicker/range": {
    "description": "Flag to allow choosing a range of date",
    "type": "boolean"
  },
  "b-datepicker/multiple": {
    "description": "Flag to allow choosing multiple dates",
    "type": "boolean"
  },
  "b-datepicker/focusable": {
    "description": "Datepicker container can be focused",
    "type": "boolean"
  },
  "b-datepicker/trap-focus": {
    "description": "Trap focus inside the datepicker.",
    "type": "boolean"
  },
  "b-datepicker/append-to-body": {
    "description": "Append datepicker calendar to body",
    "type": "boolean"
  },
  "b-datepicker/aria-next-label": {
    "description": "Accessibility label for the next month button.",
    "type": "string"
  },
  "b-datepicker/aria-previous-label": {
    "description": "Accessibility label for the previous month button.",
    "type": "string"
  },
  "b-datepicker/Any native attribute": {
    "description": "—",
    "type": "—"
  },
  "b-datetimepicker/value": {
    "description": "Binding value",
    "type": "date"
  },
  "b-datetimepicker/datetime-formatter": {
    "description": "Function to format datetime (Date type) to a string for display in the input",
    "type": "function"
  },
  "b-datetimepicker/datetime-parser": {
    "description": "Function to parse string to a datetime (Date type) for set a datetime from the input to the component",
    "type": "function"
  },
  "b-datetimepicker/min-datetime": {
    "description": "Earliest datetime available for selection",
    "type": "date"
  },
  "b-datetimepicker/max-datetime": {
    "description": "Latest datetime available for selection",
    "type": "date"
  },
  "b-datetimepicker/size": {
    "description": "Vertical size of input and picker, optional",
    "type": "string"
  },
  "b-datetimepicker/inline": {
    "description": "Datimepicker is shown inline, input is removed",
    "type": "boolean"
  },
  "b-datetimepicker/editable": {
    "description": "Enable input/typing. <b>Note that you might have to set a custom time parser</b>",
    "type": "boolean"
  },
  "b-datetimepicker/loading": {
    "description": "Add the loading state to the input",
    "type": "boolean"
  },
  "b-datetimepicker/icon": {
    "description": "Icon name to be added",
    "type": "string"
  },
  "b-datetimepicker/icon-pack": {
    "description": "Icon pack to use",
    "type": "string"
  },
  "b-datetimepicker/mobile-native": {
    "description": "Enable native datetimepicker on mobile",
    "type": "boolean"
  },
  "b-datetimepicker/position": {
    "description": "Optional, position of the timepicker relative to the input",
    "type": "string"
  },
  "b-datetimepicker/open-on-focus": {
    "description": "Open timepicker on input focus",
    "type": "boolean"
  },
  "b-datetimepicker/datepicker": {
    "description": "Any datepicker props",
    "type": "object"
  },
  "b-datetimepicker/timepicker": {
    "description": "Any timepicker props",
    "type": "object"
  },
  "b-datetimepicker/focusable": {
    "description": "Datetimepicker container can be focused",
    "type": "boolean"
  },
  "b-datetimepicker/horizontal-time-picker": {
    "description": "Changes the time picker layout to a horizontal position",
    "type": "boolean"
  },
  "b-datetimepicker/append-to-body": {
    "description": "Append datetimepicker calendar to body",
    "type": "boolean"
  },
  "b-datetimepicker/Any native attribute": {
    "description": "—",
    "type": "—"
  },
  "b-dialog/type": {
    "description": "Type (color) of the confirm button (and the icon if hasIcon)",
    "type": "string"
  },
  "b-dialog/title": {
    "description": "Dialog title",
    "type": "string"
  },
  "b-dialog/message": {
    "description": "Message text (can contain HTML). <div class=\"notification is-danger\">Dynamically rendering arbitrary HTML on your website can be very dangerous because it can easily lead to <a href=\"https://en.wikipedia.org/wiki/Cross-site_scripting\" target=\"_blank\" rel=\"noopener\">XSS vulnerabilities</a>. Only use HTML interpolation on trusted content and never on user-provided content.</div>",
    "type": "string"
  },
  "b-dialog/hasIcon": {
    "description": "Adds an icon on the left side depending on the type or icon",
    "type": "boolean"
  },
  "b-dialog/icon": {
    "description": "Icon name if hasIcon, optional",
    "type": "string"
  },
  "b-dialog/iconPack": {
    "description": "Icon pack to use if hasIcon, optional",
    "type": "string"
  },
  "b-dialog/size": {
    "description": "Dialog's size, optional",
    "type": "string"
  },
  "b-dialog/animation": {
    "description": "Custom animation (transition name)",
    "type": "string"
  },
  "b-dialog/confirmText": {
    "description": "Text of the confirm button",
    "type": "string"
  },
  "b-dialog/cancelText": {
    "description": "Text of the cancel button",
    "type": "string"
  },
  "b-dialog/canCancel": {
    "description": "Can close dialog by clicking cancel button, pressing escape or clicking outside",
    "type": "boolean|array"
  },
  "b-dialog/inputAttrs": {
    "description": "Prompt only: input's attributes",
    "type": "object"
  },
  "b-dialog/onConfirm": {
    "description": "Callback function when the confirm button is clicked",
    "type": "function(value: string| dialog: vueinstance)"
  },
  "b-dialog/closeOnConfirm": {
    "description": "Turning this prop into false allows to make async requests in onConfirm callback",
    "type": "boolean"
  },
  "b-dialog/onCancel": {
    "description": "Callback function when the dialog is canceled (cancel button is clicked / pressed escape / clicked outside)",
    "type": "function"
  },
  "b-dialog/scroll": {
    "description": "clip to remove the &lt;body&gt; scrollbar, keep to have a non scrollable scrollbar\n                    to avoid shifting background, but will set &lt;body&gt; to position fixed, might break some layouts",
    "type": "string"
  },
  "b-dialog/container": {
    "description": "DOM element the dialog will be created on. Note that this also changes the position of the dialog from fixed to absolute. Meaning that the container should be fixed. Also note that this will override the defaultContainerElement if you specified it in your Buefy Constructor Options. See Constructor options for more details.",
    "type": "string"
  },
  "b-dialog/focusOn": {
    "description": "Focus on confirm or cancel button (when dialog is not prompt)",
    "type": "string"
  },
  "b-dialog/trap-focus": {
    "description": "Trap focus inside the dialog.",
    "type": "boolean"
  },
  "b-dialog/aria-role": {
    "description": "Role attribute to be passed to modal container for better accessibility.",
    "type": "string"
  },
  "b-dialog/aria-modal": {
    "description": "Improve accessiblity when enabled.",
    "type": "boolean"
  },
  "b-dropdown/value": {
    "description": "Binding value",
    "type": "any"
  },
  "b-dropdown/hoverable": {
    "description": "Dropdown will be triggered by hover instead of click",
    "type": "boolean"
  },
  "b-dropdown/position": {
    "description": "Optional, position of the dropdown relative to the trigger",
    "type": "string"
  },
  "b-dropdown/disabled": {
    "description": "Disables dropdown",
    "type": "boolean"
  },
  "b-dropdown/animation": {
    "description": "Custom animation (transition name)",
    "type": "string"
  },
  "b-dropdown/inline": {
    "description": "Dropdown content (items) are shown inline, trigger is removed",
    "type": "boolean"
  },
  "b-dropdown/mobile-modal": {
    "description": "Dropdown content (items) are shown into a modal on mobile",
    "type": "boolean"
  },
  "b-dropdown/expanded": {
    "description": "Dropdown will be expanded (full-width)",
    "type": "boolean"
  },
  "b-dropdown/aria-role": {
    "description": "Role attribute to be passed to list container for better accessibility. Use menu only in situations where your dropdown is related to navigation menus.",
    "type": "string"
  },
  "b-dropdown/multiple": {
    "description": "Allows multiple selections",
    "type": "boolean"
  },
  "b-dropdown/trap-focus": {
    "description": "Trap focus inside the dropdown.",
    "type": "boolean"
  },
  "b-dropdown/can-close": {
    "description": "Can close dropdown by pressing escape or by clicking outside",
    "type": "boolean|array"
  },
  "b-dropdown/close-on-click": {
    "description": "Close dropdown when content is clicked",
    "type": "boolean"
  },
  "b-dropdown/append-to-body": {
    "description": "Append dropdown content to body",
    "type": "boolean"
  },
  "b-dropdown/scrollable": {
    "description": "Dropdown content will be scrollable",
    "type": "boolean"
  },
  "b-dropdown/max-height": {
    "description": "Max height of dropdown content",
    "type": "string|number"
  },
  "b-dropdown-item/value": {
    "description": "The value that will be returned on events and v-model",
    "type": "any"
  },
  "b-dropdown-item/separator": {
    "description": "Set the item to be a separator",
    "type": "boolean"
  },
  "b-dropdown-item/disabled": {
    "description": "Item is disabled",
    "type": "boolean"
  },
  "b-dropdown-item/focusable": {
    "description": "Item can be focused",
    "type": "boolean"
  },
  "b-dropdown-item/custom": {
    "description": "Item is not a clickable item",
    "type": "boolean"
  },
  "b-dropdown-item/has-link": {
    "description": "Use it if your item is an anchor tag or router-link",
    "type": "boolean"
  },
  "b-dropdown-item/paddingless": {
    "description": "Remove padding",
    "type": "boolean"
  },
  "b-dropdown-item/aria-role": {
    "description": "Role attribute to be passed to list item for better accessibility. Use menuitem only in situations where your dropdown is related to navigation menus.",
    "type": "string"
  },
  "b-field/type": {
    "description": "Type (color) of the field and help message, also adds a matching icon, optional. Used by Input, Select and Autocomplete",
    "type": "string|object"
  },
  "b-field/label": {
    "description": "Field label",
    "type": "string"
  },
  "b-field/label-for": {
    "description": "Same as native for set on the label",
    "type": "string"
  },
  "b-field/custom-class": {
    "description": "CSS classes to be applied on field label",
    "type": "string"
  },
  "b-field/message": {
    "description": "Help message text",
    "type": "string|object, array<string>, array<object>"
  },
  "b-field/grouped": {
    "description": "Direct child components/elements of Field will be grouped horizontally (see which ones at the top of the page)",
    "type": "boolean"
  },
  "b-field/group-multiline": {
    "description": "Allow controls to fill up multiple lines, making it responsive",
    "type": "boolean"
  },
  "b-field/position": {
    "description": "Which position should the addons appear, optional",
    "type": "string"
  },
  "b-field/addons": {
    "description": "Field automatically attach controls together",
    "type": "boolean"
  },
  "b-field/horizontal": {
    "description": "Group label and control on the same line for horizontal forms",
    "type": "boolean"
  },
  "b-field/label-position": {
    "description": "Position of label",
    "type": "string"
  },
  "b-icon/type": {
    "description": "Type (color) of the icon, optional",
    "type": "string|object"
  },
  "b-icon/pack": {
    "description": "Icon pack to use",
    "type": "string"
  },
  "b-icon/icon": {
    "description": "Icon name",
    "type": "string"
  },
  "b-icon/size": {
    "description": "Icon size, optional",
    "type": "string"
  },
  "b-icon/custom-size": {
    "description": "Overrides icon font size, optional",
    "type": "string"
  },
  "b-icon/custom-class": {
    "description": "Add class to icon font (&lt;i&gt; tag), optional.\n                    See <a href=\"https://materialdesignicons.com/getting-started\" target=\"_blank\">here for MDI</a>,\n                    <a href=\"http://fontawesome.io/examples/\" target=\"_blank\">here for FontAwesome 4</a> and\n                    <a href=\"https://fontawesome.com/how-to-use/on-the-web/using-with/vuejs\" target=\"_blank\">here for FontAwesome 5</a> custom classes",
    "type": "string"
  },
  "b-input/value": {
    "description": "Binding value",
    "type": "string|number"
  },
  "b-input/type": {
    "description": "Input type, like native",
    "type": "string"
  },
  "b-input/size": {
    "description": "Vertical size of input, optional",
    "type": "string"
  },
  "b-input/expanded": {
    "description": "Makes input full width when inside a grouped or addon field",
    "type": "boolean"
  },
  "b-input/password-reveal": {
    "description": "Add the reveal password functionality",
    "type": "boolean"
  },
  "b-input/loading": {
    "description": "Add the loading state to the input",
    "type": "boolean"
  },
  "b-input/icon-pack": {
    "description": "Icon pack to use",
    "type": "string"
  },
  "b-input/icon": {
    "description": "Icon name to be added",
    "type": "string"
  },
  "b-input/icon-right": {
    "description": "Icon name to be added on the right side",
    "type": "string"
  },
  "b-input/icon-clickable": {
    "description": "Make the icon clickable",
    "type": "boolean"
  },
  "b-input/icon-right-clickable": {
    "description": "Make the icon right clickable",
    "type": "boolean"
  },
  "b-input/maxlength": {
    "description": "Same as native maxlength, plus character counter",
    "type": "string|number"
  },
  "b-input/has-counter": {
    "description": "Show character counter when maxlength prop is passed",
    "type": "boolean"
  },
  "b-input/custom-class": {
    "description": "CSS classes to be applied on input",
    "type": "string"
  },
  "b-input/validation-message": {
    "description": "The message which is shown when a validation error occurs",
    "type": "string"
  },
  "b-input/Any native attribute": {
    "description": "—",
    "type": "—"
  },
  "b-loading/active": {
    "description": "Whether modal is active or not, use the .sync modifier to make it two-way binding",
    "type": "boolean"
  },
  "b-loading/animation": {
    "description": "Custom animation (transition name)",
    "type": "string"
  },
  "b-loading/is-full-page": {
    "description": "Loader will overlay the full page",
    "type": "boolean"
  },
  "b-loading/can-cancel": {
    "description": "Can close Loading by pressing escape or clicking outside",
    "type": "boolean"
  },
  "b-loading/on-cancel": {
    "description": "Callback function to call after user canceled (pressed escape / clicked outside)",
    "type": "function"
  },
  "b-menu/accordion": {
    "description": "Close automatically the previous selected menu list",
    "type": "boolean"
  },
  "b-menu/activable": {
    "description": "Active automatically the clicked menu item",
    "type": "boolean"
  },
  "b-menu-list/label": {
    "description": "Menu list label",
    "type": "string"
  },
  "b-menu-list/icon": {
    "description": "Icon name",
    "type": "string"
  },
  "b-menu-list/icon-pack": {
    "description": "Icon pack to use",
    "type": "string"
  },
  "b-menu-list/aria-role": {
    "description": "Role attribute to be passed to list container for better accessibility. Use menu only in situations where your dropdown is really related to navigation.",
    "type": "string"
  },
  "b-menu-item/label": {
    "description": "Menu item label",
    "type": "string"
  },
  "b-menu-item/icon": {
    "description": "Icon name",
    "type": "string"
  },
  "b-menu-item/icon-pack": {
    "description": "Icon pack to use",
    "type": "string"
  },
  "b-menu-item/disabled": {
    "description": "Item is disabled",
    "type": "boolean"
  },
  "b-menu-item/active": {
    "description": "Item is active, use the .sync modifier to make it two-way binding",
    "type": "boolean"
  },
  "b-menu-item/expanded": {
    "description": "Item is expanded when default contains menu items, use the .sync modifier to make it two-way binding",
    "type": "boolean"
  },
  "b-menu-item/animation": {
    "description": "Custom animation (transition name)",
    "type": "string"
  },
  "b-menu-item/tag": {
    "description": "Button tag name",
    "type": "string"
  },
  "b-menu-item/aria-role": {
    "description": "Role attribute to be passed to list item for better accessibility. Use menuitem only in situations where your menu item is really related to navigation.",
    "type": "string"
  },
  "b-menu-item/Any native attribute": {
    "description": "—",
    "type": "—"
  },
  "b-message/type": {
    "description": "Type (color) of the message, optional",
    "type": "string"
  },
  "b-message/active": {
    "description": "Whether notification is active or not, use the .sync modifier to make it two-way binding",
    "type": "boolean"
  },
  "b-message/closable": {
    "description": "Adds an 'X' button that closes the notification — works if has a title",
    "type": "boolean"
  },
  "b-message/auto-close": {
    "description": "Hide notification after duration",
    "type": "boolean"
  },
  "b-message/duration": {
    "description": "Visibility duration in miliseconds",
    "type": "number"
  },
  "b-message/icon-pack": {
    "description": "Icon pack to use",
    "type": "string"
  },
  "b-message/has-icon": {
    "description": "Adds an icon on the left side depending on the type (or the icon prop if defined)",
    "type": "boolean"
  },
  "b-message/icon": {
    "description": "Icon name to use with has-icon",
    "type": "boolean"
  },
  "b-message/size": {
    "description": "Size of the control, optional",
    "type": "string"
  },
  "b-message/icon-size": {
    "description": "Size of the icon, optional",
    "type": "string"
  },
  "b-message/title": {
    "description": "Message title",
    "type": "string"
  },
  "b-message/aria-close-label": {
    "description": "Label for the close button, to be read by accessibility screenreaders.",
    "type": "string"
  },
  "b-modal/active": {
    "description": "Whether modal is active or not, use the .sync modifier to make it two-way binding",
    "type": "boolean"
  },
  "b-modal/component": {
    "description": "Component to be injected, used to open a component modal programmatically.\n                    Close modal within the component by emitting a 'close' event — this.$emit('close')",
    "type": "object|function"
  },
  "b-modal/parent": {
    "description": "Parent component of the modal, <strong>required</strong> if using component",
    "type": "vue"
  },
  "b-modal/props": {
    "description": "Props to be binded to the injected component",
    "type": "object"
  },
  "b-modal/events": {
    "description": "Events to be binded to the injected component",
    "type": "object"
  },
  "b-modal/content": {
    "description": "HTML content <div class=\"notification is-danger\">Dynamically rendering arbitrary HTML on your website can be very dangerous because it can easily lead to <a href=\"https://en.wikipedia.org/wiki/Cross-site_scripting\" target=\"_blank\" rel=\"noopener\">XSS vulnerabilities</a>. Only use HTML interpolation on trusted content and never on user-provided content.</div>",
    "type": "string"
  },
  "b-modal/width": {
    "description": "Width of the Modal",
    "type": "number|string"
  },
  "b-modal/full-screen": {
    "description": "Display modal as full screen",
    "type": "boolean"
  },
  "b-modal/has-modal-card": {
    "description": "If your modal content has a .modal-card as root, add this prop or the card might break on mobile",
    "type": "boolean"
  },
  "b-modal/animation": {
    "description": "Custom animation (transition name)",
    "type": "string"
  },
  "b-modal/can-cancel": {
    "description": "Can close Modal by clicking 'X', pressing escape or clicking outside",
    "type": "boolean|array"
  },
  "b-modal/on-cancel": {
    "description": "Callback function to call after user canceled (clicked 'X' / pressed escape / clicked outside)",
    "type": "function"
  },
  "b-modal/scroll": {
    "description": "clip to remove the &lt;body&gt; scrollbar, keep to have a non scrollable scrollbar\n                    to avoid shifting background, but will set &lt;body&gt; to position fixed, might break some layouts",
    "type": "string"
  },
  "b-modal/trap-focus": {
    "description": "Trap focus inside the modal.",
    "type": "boolean"
  },
  "b-modal/custom-class": {
    "description": "CSS classes to be applied on modal",
    "type": "string"
  },
  "b-modal/destroy-on-hide": {
    "description": "Destroy modal on hide",
    "type": "boolean"
  },
  "b-modal/aria-role": {
    "description": "Role attribute to be passed to modal container for better accessibility.",
    "type": "string"
  },
  "b-modal/aria-modal": {
    "description": "Improve accessiblity when enabled.",
    "type": "boolean"
  },
  "b-navbar/transparent": {
    "description": "Remove any hover or active background from the navbar items",
    "type": "boolean"
  },
  "b-navbar/fixed-top": {
    "description": "Fixes the navbar to the top of the page",
    "type": "boolean"
  },
  "b-navbar/fixed-bottom": {
    "description": "Fixes the navbar to the bottom of the page",
    "type": "boolean"
  },
  "b-navbar/is-active": {
    "description": "To control the behaviour of the mobile menu programmatically, use the .sync modifier to make it two-way binding",
    "type": "boolean"
  },
  "b-navbar/type": {
    "description": "Type (color) of the background, optional",
    "type": "string|"
  },
  "b-navbar/wrapper-class": {
    "description": "To wrap the navbar content into an div with the provided class",
    "type": "string"
  },
  "b-navbar/close-on-click": {
    "description": "Control the behavior of the mobile menu by clicking on a link or outside the menu",
    "type": "boolean"
  },
  "b-navbar/mobile-burger": {
    "description": "Use to display or not the burger on mobile resolution.",
    "type": "boolean"
  },
  "b-navbar/spaced": {
    "description": "Sets Top and Bottom paddings with 1rem, Left and Right paddings with 2rem",
    "type": "boolean"
  },
  "b-navbar/shadow": {
    "description": "Add a shadow to navbar",
    "type": "boolean"
  },
  "b-navbar-item/tag": {
    "description": "Sets the type of the component that have to render as navbar-item",
    "type": "string"
  },
  "b-navbar-item/active": {
    "description": "Item is active",
    "type": "boolean"
  },
  "b-navbar-dropdown/hoverable": {
    "description": "Dropdown will be triggered by hover instead of click",
    "type": "boolean"
  },
  "b-navbar-dropdown/active": {
    "description": "Item is active",
    "type": "boolean"
  },
  "b-navbar-dropdown/right": {
    "description": "Dropdown will be anchored to the right side",
    "type": "boolean"
  },
  "b-navbar-dropdown/arrowless": {
    "description": "Show/hide arrow icon on dropdown",
    "type": "boolean"
  },
  "b-navbar-dropdown/boxed": {
    "description": "Show a boxed version of the dropdown",
    "type": "boolean"
  },
  "b-navbar-dropdown/collapsible": {
    "description": "Collapsible dropdown on mobile",
    "type": "boolean"
  },
  "b-notification/type": {
    "description": "Type (color) of the notification, optional",
    "type": "string"
  },
  "b-notification/active": {
    "description": "Whether notification is active or not, use the .sync modifier to make it two-way binding",
    "type": "boolean"
  },
  "b-notification/closable": {
    "description": "Adds an 'X' button that closes the notification",
    "type": "boolean"
  },
  "b-notification/auto-close": {
    "description": "Hide notification after duration only not programmatic",
    "type": "boolean"
  },
  "b-notification/duration": {
    "description": "Visibility duration in miliseconds",
    "type": "number"
  },
  "b-notification/animation": {
    "description": "Custom animation (transition name)",
    "type": "string"
  },
  "b-notification/icon-pack": {
    "description": "Icon pack to use",
    "type": "string"
  },
  "b-notification/has-icon": {
    "description": "Adds an icon on the left side depending on the type (or the icon prop if defined)",
    "type": "boolean"
  },
  "b-notification/icon": {
    "description": "Icon name to use with has-icon",
    "type": "boolean"
  },
  "b-notification/aria-close-label": {
    "description": "Label for the close button, to be read by accessibility screenreaders.",
    "type": "string"
  },
  "b-notification/message": {
    "description": "Message text (can contain HTML). <div class=\"notification is-danger\">Dynamically rendering arbitrary HTML on your website can be very dangerous because it can easily lead to <a href=\"https://en.wikipedia.org/wiki/Cross-site_scripting\" target=\"_blank\" rel=\"noopener\">XSS vulnerabilities</a>. Only use HTML interpolation on trusted content and never on user-provided content.</div>",
    "type": "string"
  },
  "b-notification/position": {
    "description": "Which position the notification will appear when programmatically",
    "type": "string"
  },
  "b-notification/queue": {
    "description": "If should queue with others notices (snackbar/toast/notification)",
    "type": "boolean"
  },
  "b-notification/indefinite": {
    "description": "Show the Notification indefinitely until it is dismissed when programmatically",
    "type": "boolean"
  },
  "b-notification/container": {
    "description": "DOM element the toast will be created on. Note that this also changes the position of the toast from fixed to absolute. Meaning that the container should be fixed.",
    "type": "string"
  },
  "b-numberinput/value": {
    "description": "Binding value",
    "type": "string|number"
  },
  "b-numberinput/type": {
    "description": "Type (color) of the control, optional",
    "type": "string"
  },
  "b-numberinput/size": {
    "description": "Vertical size of input, optional",
    "type": "string"
  },
  "b-numberinput/expanded": {
    "description": "Makes input full width when inside a grouped or addon field",
    "type": "boolean"
  },
  "b-numberinput/loading": {
    "description": "Add the loading state to the input",
    "type": "boolean"
  },
  "b-numberinput/editable": {
    "description": "Editable input",
    "type": "boolean"
  },
  "b-numberinput/icon-pack": {
    "description": "Icon pack to use",
    "type": "string"
  },
  "b-numberinput/min": {
    "description": "Minimum allowed value",
    "type": "number|string"
  },
  "b-numberinput/max": {
    "description": "Maximum allowed value",
    "type": "number|string"
  },
  "b-numberinput/step": {
    "description": "Incremental number step",
    "type": "number|string"
  },
  "b-numberinput/controls-rounded": {
    "description": "Show rounded controls",
    "type": "boolean"
  },
  "b-numberinput/controls": {
    "description": "Showing controls(+/-)",
    "type": "boolean"
  },
  "b-numberinput/controls-position": {
    "description": "Position of controls",
    "type": "string"
  },
  "b-numberinput/Any native attribute": {
    "description": "—",
    "type": "—"
  },
  "b-pagination/total": {
    "description": "Total count of items",
    "type": "number"
  },
  "b-pagination/per-page": {
    "description": "Items count for each page",
    "type": "number"
  },
  "b-pagination/range-before": {
    "description": "Number of pagination items to show before current page",
    "type": "number"
  },
  "b-pagination/range-after": {
    "description": "Items to paginatation items to show after current page",
    "type": "number"
  },
  "b-pagination/current": {
    "description": "Current page number, use the .sync modifier to make it two-way binding",
    "type": "number"
  },
  "b-pagination/order": {
    "description": "Buttons order, optional",
    "type": "string"
  },
  "b-pagination/size": {
    "description": "Pagination size, optional",
    "type": "string"
  },
  "b-pagination/simple": {
    "description": "Simpler style",
    "type": "boolean"
  },
  "b-pagination/rounded": {
    "description": "Rounded button styles",
    "type": "boolean"
  },
  "b-pagination/icon-pack": {
    "description": "Icon pack to use",
    "type": "string"
  },
  "b-pagination/icon-prev": {
    "description": "Icon to use for previous button",
    "type": "string"
  },
  "b-pagination/icon-next": {
    "description": "Icon to use for next button",
    "type": "string"
  },
  "b-pagination/aria-next-label": {
    "description": "Accessibility label for the next page link.",
    "type": "string"
  },
  "b-pagination/aria-previous-label": {
    "description": "Accessibility label for the previous page link.",
    "type": "string"
  },
  "b-pagination/aria-page-label": {
    "description": "Accessibility label for the page link. If passed, this text will be prepended to the number of the page.",
    "type": "string"
  },
  "b-pagination/aria-current-label": {
    "description": "Accessibility label for the current page link. If passed, this text will be prepended to the current page.",
    "type": "string"
  },
  "b-pagination-button/page": {
    "description": "The prop page need to be passed upon the component (:page=\"props.page\").",
    "type": "object"
  },
  "b-pagination-button/tag": {
    "description": "Button tag name",
    "type": "string"
  },
  "b-progress/type": {
    "description": "Type (color) of the progress bar, optional",
    "type": "string"
  },
  "b-progress/size": {
    "description": "Size of the progress bar, optional",
    "type": "string"
  },
  "b-progress/value": {
    "description": "The progress value, progress will be indeterminate if undefined.",
    "type": "number"
  },
  "b-progress/max": {
    "description": "The maximum value for the progress bar.",
    "type": "number"
  },
  "b-progress/show-value": {
    "description": "If the value should be displayed inside the progress bar.",
    "type": "boolean"
  },
  "b-progress/format": {
    "description": "Which format should be used to display the value (if show-value is true).\n                              The value will be displayed as-is if using raw. The percent using value\n                              and max will be calculated and displayed if using percent",
    "type": "string"
  },
  "b-progress/precision": {
    "description": "How many decimals should be displayed.",
    "type": "number"
  },
  "b-progress/keep-trailing-zeroes": {
    "description": "Truncate or not the trailing zeroes",
    "type": "boolean"
  },
  "b-radio/value": {
    "description": "Binding value",
    "type": "any"
  },
  "b-radio/native-value": {
    "description": "Same as native value",
    "type": "any"
  },
  "b-radio/disabled": {
    "description": "Same as native disabled",
    "type": "boolean"
  },
  "b-radio/required": {
    "description": "Same as native required",
    "type": "boolean"
  },
  "b-radio/name": {
    "description": "Same as native name",
    "type": "string"
  },
  "b-radio/size": {
    "description": "Size  of the control, optional",
    "type": "string"
  },
  "b-radio/type": {
    "description": "Type (color) of the control, optional",
    "type": "string"
  },
  "b-radio-button/value": {
    "description": "Binding value",
    "type": "any"
  },
  "b-radio-button/native-value": {
    "description": "Same as native value",
    "type": "any"
  },
  "b-radio-button/type": {
    "description": "Type (color) of the button <strong>when checked</strong>",
    "type": "string"
  },
  "b-radio-button/disabled": {
    "description": "Same as native disabled",
    "type": "boolean"
  },
  "b-radio-button/name": {
    "description": "Same as native name",
    "type": "string"
  },
  "b-radio-button/size": {
    "description": "Size of the button, optional",
    "type": "string"
  },
  "b-radio-button/expanded": {
    "description": "Radio button will be expanded (full-width)",
    "type": "boolean"
  },
  "b-rate/value": {
    "description": "Binding value",
    "type": "number"
  },
  "b-rate/max": {
    "description": "Max rating score",
    "type": "number"
  },
  "b-rate/icon": {
    "description": "to specify the icon",
    "type": "string"
  },
  "b-rate/icon-pack": {
    "description": "Icon pack to use",
    "type": "string"
  },
  "b-rate/size": {
    "description": "Include show-text, show-score and custom-text, optional",
    "type": "string"
  },
  "b-rate/rtl": {
    "description": "Change text direction show-text, show-score and custom-text to left",
    "type": "boolean"
  },
  "b-rate/spaced": {
    "description": "Added spacing for icons",
    "type": "boolean"
  },
  "b-rate/disabled": {
    "description": "Read only, if true Support decimal value",
    "type": "boolean"
  },
  "b-rate/show-score": {
    "description": "Display value",
    "type": "boolean"
  },
  "b-rate/show-text": {
    "description": "Display texts template. show-score and show-text cannot be true at the same time",
    "type": "boolean"
  },
  "b-rate/custom-text": {
    "description": "Display custom text like a total points or total reviews, and this only for show-score",
    "type": "string"
  },
  "b-rate/texts": {
    "description": "Texts template only for show-text, like on e-commerce",
    "type": "array"
  },
  "b-select/value": {
    "description": "Binding value",
    "type": "any"
  },
  "b-select/size": {
    "description": "Size of the select, optional",
    "type": "string"
  },
  "b-select/placeholder": {
    "description": "Text when nothing is selected",
    "type": "string"
  },
  "b-select/loading": {
    "description": "Add the loading state to the Select",
    "type": "boolean"
  },
  "b-select/expanded": {
    "description": "Select will be expanded (full-width)",
    "type": "boolean"
  },
  "b-select/icon": {
    "description": "Icon name to be added",
    "type": "string"
  },
  "b-select/icon-pack": {
    "description": "Icon pack to use",
    "type": "string"
  },
  "b-select/native-size": {
    "description": "Same as native size",
    "type": "number"
  },
  "b-select/Any native attribute": {
    "description": "—",
    "type": "—"
  },
  "b-sidebar/open": {
    "description": "To control the behaviour of the sidebar programmatically, use the .sync modifier to make it two-way binding",
    "type": "boolean"
  },
  "b-sidebar/position": {
    "description": "Set display position of sidebar",
    "type": "string"
  },
  "b-sidebar/type": {
    "description": "Type (color) of the background, optional",
    "type": "string|"
  },
  "b-sidebar/can-cancel": {
    "description": "Can close Sidebar by clicking 'X', pressing escape or clicking outside",
    "type": "boolean|array"
  },
  "b-sidebar/on-cancel": {
    "description": "Callback function to call after user canceled (clicked 'X' / pressed escape / clicked outside)",
    "type": "function"
  },
  "b-sidebar/fullwidth": {
    "description": "Show sidebar in fullwidth.",
    "type": "boolean"
  },
  "b-sidebar/fullheight": {
    "description": "Show sidebar in fullheight.",
    "type": "boolean"
  },
  "b-sidebar/mobile": {
    "description": "Custom layout on mobile",
    "type": "string"
  },
  "b-sidebar/right": {
    "description": "Show the sidebar on right",
    "type": "boolean"
  },
  "b-sidebar/overlay": {
    "description": "Show an overlay when sidebar is open",
    "type": "boolean"
  },
  "b-sidebar/expand-on-hover": {
    "description": "Expand sidebar on hover when reduced or mobile is reduce",
    "type": "boolean"
  },
  "b-sidebar/expand-on-hover-fixed": {
    "description": "Expand sidebar on hover with fixed position when reduced or mobile is reduce",
    "type": "boolean"
  },
  "b-sidebar/reduce": {
    "description": "Show a small sidebar",
    "type": "boolean"
  },
  "b-skeleton/active": {
    "description": "Show or hide loader",
    "type": "boolean"
  },
  "b-skeleton/animated": {
    "description": "Display a loading animation",
    "type": "boolean"
  },
  "b-skeleton/rounded": {
    "description": "Rounded style",
    "type": "boolean"
  },
  "b-skeleton/size": {
    "description": "Vertical size of skeleton, optional",
    "type": "string"
  },
  "b-skeleton/width": {
    "description": "Custom width",
    "type": "string|number"
  },
  "b-skeleton/height": {
    "description": "Custom height",
    "type": "string|number"
  },
  "b-skeleton/circle": {
    "description": "Show a circle shape",
    "type": "boolean"
  },
  "b-skeleton/count": {
    "description": "Number of shapes to display",
    "type": "number"
  },
  "b-slider/value": {
    "description": "Binding value",
    "type": "number|array"
  },
  "b-slider/min": {
    "description": "Minimum value",
    "type": "number"
  },
  "b-slider/max": {
    "description": "Maximum value",
    "type": "number"
  },
  "b-slider/step": {
    "description": "Step interval of ticks",
    "type": "number"
  },
  "b-slider/type": {
    "description": "Type (color) of the slider, optional",
    "type": "string"
  },
  "b-slider/size": {
    "description": "Thickness of the slider, optional",
    "type": "string"
  },
  "b-slider/ticks": {
    "description": "Show tick marks",
    "type": "boolean"
  },
  "b-slider/tooltip": {
    "description": "Show tooltip when thumb is being dragged",
    "type": "boolean"
  },
  "b-slider/tooltip-type": {
    "description": "The type (color) of the tooltip. Defaults to type",
    "type": "string"
  },
  "b-slider/rounded": {
    "description": "Rounded thumb",
    "type": "boolean"
  },
  "b-slider/disabled": {
    "description": "Disable the slider",
    "type": "boolean"
  },
  "b-slider/custom-formatter": {
    "description": "Function to format the tooltip label for display",
    "type": "function"
  },
  "b-slider/aria-label": {
    "description": "Accessibility label for the thumbs",
    "type": "string|array"
  },
  "b-slider/bigger-slider-focus": {
    "description": "Increase the clickable area",
    "type": "boolean"
  },
  "b-slider-slidertick/value": {
    "description": "The value that the tick represents",
    "type": "number"
  },
  "b-snackbar/type": {
    "description": "Type (color) of the action button. Please notice that it is the name of the parent class also",
    "type": "string"
  },
  "b-snackbar/message": {
    "description": "Message text (can contain HTML). <div class=\"notification is-danger\">Dynamically rendering arbitrary HTML on your website can be very dangerous because it can easily lead to <a href=\"https://en.wikipedia.org/wiki/Cross-site_scripting\" target=\"_blank\" rel=\"noopener\">XSS vulnerabilities</a>. Only use HTML interpolation on trusted content and never on user-provided content.</div>",
    "type": "string"
  },
  "b-snackbar/position": {
    "description": "Which position the snackbar will appear",
    "type": "string"
  },
  "b-snackbar/duration": {
    "description": "Visibility duration in miliseconds",
    "type": "number"
  },
  "b-snackbar/queue": {
    "description": "If should queue with others notices (snackbar/toast/notification)",
    "type": "boolean"
  },
  "b-snackbar/indefinite": {
    "description": "Show the Snackbar indefinitely until it is dismissed",
    "type": "boolean"
  },
  "b-snackbar/container": {
    "description": "DOM element the toast will be created on. Note that this also changes the position of the toast from fixed to absolute. Meaning that the container should be fixed. Also note that this will override the defaultContainerElement if you specified it in your Buefy Constructor Options. See Constructor options for more details.",
    "type": "string"
  },
  "b-snackbar/actionText": {
    "description": "Snackbar's button text, set null for buttonless",
    "type": "string"
  },
  "b-snackbar/onAction": {
    "description": "Callback function when the button is clicked",
    "type": "function"
  },
  "b-steps/value": {
    "description": "Binding value, step index",
    "type": "number"
  },
  "b-steps/animated": {
    "description": "Steps have slide animation",
    "type": "boolean"
  },
  "b-steps/type": {
    "description": "Default Type/Style for the steps, optional",
    "type": "string"
  },
  "b-steps/size": {
    "description": "Size of the step, optional",
    "type": "string"
  },
  "b-steps/destroy-on-hide": {
    "description": "Destroy stepitem on hide",
    "type": "boolean"
  },
  "b-steps/icon-pack": {
    "description": "Icon pack to use for the navigation",
    "type": "string"
  },
  "b-steps/icon-prev": {
    "description": "Icon to use for navigation button",
    "type": "string"
  },
  "b-steps/icon-next": {
    "description": "Icon to use for navigation button",
    "type": "string"
  },
  "b-steps/has-navigation": {
    "description": "Next and previous buttons below the component.\n                    You can use this property if you want to use your own custom navigation items.",
    "type": "boolean"
  },
  "b-steps/vertical": {
    "description": "Display the steps vertically",
    "type": "boolean"
  },
  "b-steps/position": {
    "description": "Position of the vertical step, optional",
    "type": "string"
  },
  "b-steps/label-position": {
    "description": "Position of the marker label, optional",
    "type": "string"
  },
  "b-steps/rounded": {
    "description": "Rounded step markers",
    "type": "boolean"
  },
  "b-steps/mobile-mode": {
    "description": "How Steps will be displayed for mobile user",
    "type": "string"
  },
  "b-steps/aria-page-label": {
    "description": "Accessibility label for the page link. If passed, this text will be prepended to the number of the page.",
    "type": "string"
  },
  "b-steps/aria-current-label": {
    "description": "Accessibility label for the current page link. If passed, this text will be prepended to the current page.",
    "type": "string"
  },
  "b-steps-item/step": {
    "description": "Step marker content (when there is no icon)",
    "type": "string| number"
  },
  "b-steps-item/label": {
    "description": "Step label",
    "type": "string"
  },
  "b-steps-item/value": {
    "description": "Step value",
    "type": "number|string"
  },
  "b-steps-item/type": {
    "description": "Default Type/Style for the step, optional\n                    This will override parent type. Could be used to set a completed step to\n                    is-success for example",
    "type": "string"
  },
  "b-steps-item/icon": {
    "description": "Icon name",
    "type": "string"
  },
  "b-steps-item/icon-pack": {
    "description": "Icon pack to use",
    "type": "string"
  },
  "b-steps-item/clickable": {
    "description": "Item can be used directly to navigate.\n                    If undefined, previous steps are clickable while the others are not.",
    "type": "boolean"
  },
  "b-steps-item/visible": {
    "description": "Item is visible",
    "type": "boolean"
  },
  "b-switch/type": {
    "description": "Type (color) of the switch, optional",
    "type": "string"
  },
  "b-switch/passive-type": {
    "description": "Type (color) of the switch when switch is passive, optional",
    "type": "string"
  },
  "b-switch/value": {
    "description": "Binding value",
    "type": "any"
  },
  "b-switch/native-value": {
    "description": "Same as native value",
    "type": "any"
  },
  "b-switch/true-value": {
    "description": "Overrides the returned value when it's checked",
    "type": "any"
  },
  "b-switch/false-value": {
    "description": "Overrides the returned value when it's not checked",
    "type": "any"
  },
  "b-switch/disabled": {
    "description": "Same as native disabled",
    "type": "boolean"
  },
  "b-switch/name": {
    "description": "Same as native name",
    "type": "string"
  },
  "b-switch/size": {
    "description": "Size  of the control, optional",
    "type": "string"
  },
  "b-switch/rounded": {
    "description": "Rounded style",
    "type": "boolean"
  },
  "b-switch/outlined": {
    "description": "Outlined style",
    "type": "boolean"
  },
  "b-table/data": {
    "description": "Table data",
    "type": "array<object>"
  },
  "b-table/columns": {
    "description": "Table columns, you can also add renderHtml: true on each column object",
    "type": "array<object>(same as tablecolumns props)"
  },
  "b-table/default-sort": {
    "description": "Sets the default sort column and order — e.g. ['first_name', 'desc']",
    "type": "string|array"
  },
  "b-table/default-sort-direction": {
    "description": "Sets the default sort column direction on the first click",
    "type": "string"
  },
  "b-table/sort-icon": {
    "description": "Sets the header sorting icon",
    "type": "string"
  },
  "b-table/sort-icon-size": {
    "description": "Sets the size of the sorting icon",
    "type": "string"
  },
  "b-table/bordered": {
    "description": "Border to all cells",
    "type": "boolean"
  },
  "b-table/striped": {
    "description": "Whether table is striped",
    "type": "boolean"
  },
  "b-table/narrowed": {
    "description": "Makes the cells narrower",
    "type": "boolean"
  },
  "b-table/selected": {
    "description": "Set which row is selected, use the .sync modifier to make it two-way binding",
    "type": "object"
  },
  "b-table/focusable": {
    "description": "Table can be focused and user can navigate with keyboard arrows (require selected.sync) and rows are highlighted when hovering",
    "type": "boolean"
  },
  "b-table/hoverable": {
    "description": "Rows are highlighted when hovering",
    "type": "boolean"
  },
  "b-table/checkable": {
    "description": "Rows can be checked (multiple), checked rows will have a .is-checked class if you want to style",
    "type": "boolean"
  },
  "b-table/checkbox-position": {
    "description": "Position of the checkbox (if checkable is true)",
    "type": "string"
  },
  "b-table/checked-rows": {
    "description": "Set which rows are checked, use the .sync modifier to make it two-way binding",
    "type": "array<object>"
  },
  "b-table/header-checkable": {
    "description": "Show check/uncheck all checkbox in table header when checkable",
    "type": "boolean"
  },
  "b-table/mobile-cards": {
    "description": "Rows appears as cards on mobile (collapse rows)",
    "type": "boolean"
  },
  "b-table/backend-sorting": {
    "description": "Columns won't be sorted with Javascript, use with sort event to sort in your backend",
    "type": "boolean"
  },
  "b-table/backend-pagination": {
    "description": "Rows won't be paginated with Javascript, use with page-change event to paginate in your backend",
    "type": "boolean"
  },
  "b-table/total": {
    "description": "Total number of table data if backend-pagination is enabled",
    "type": "number"
  },
  "b-table/current-page": {
    "description": "Current page of table data (if paginated), use the .sync modifier to make it two-way binding",
    "type": "number"
  },
  "b-table/loading": {
    "description": "Loading state",
    "type": "boolean"
  },
  "b-table/paginated": {
    "description": "Adds pagination to the table",
    "type": "boolean"
  },
  "b-table/pagination-simple": {
    "description": "Simple pagination (if paginated)",
    "type": "boolean"
  },
  "b-table/pagination-size": {
    "description": "Pagination size (if paginated)",
    "type": "string"
  },
  "b-table/pagination-position": {
    "description": "Pagination position (if paginated)",
    "type": "string"
  },
  "b-table/per-page": {
    "description": "How many rows per page (if paginated)",
    "type": "number"
  },
  "b-table/sort-multiple": {
    "description": "Adds multiple column sorting",
    "type": "boolean"
  },
  "b-table/sort-multiple-data": {
    "description": "Used in combination with backend-sorting",
    "type": "object"
  },
  "b-table/sort-multiple-key": {
    "description": "Adds a key which will be required for multi column sorting to work. Will always be enabled if null is selected (default). Requres sort-multiple",
    "type": "string"
  },
  "b-table/row-class": {
    "description": "Add a class to row (&lt;tr&gt; element) based on the return",
    "type": "function(row: object| index: number)"
  },
  "b-table/detailed": {
    "description": "Allow row details (check scoped slots documentation)",
    "type": "boolean"
  },
  "b-table/custom-detail-row": {
    "description": "Allow a custom detail row",
    "type": "boolean"
  },
  "b-table/show-detail-icon": {
    "description": "Allow chevron icon and column to be visible",
    "type": "boolean"
  },
  "b-table/opened-detailed": {
    "description": "Allow pre-defined opened details. Ideal to open details via vue-router. (A unique key is required; check detail-key prop)",
    "type": "array"
  },
  "b-table/has-detailed-visible": {
    "description": "Controls the visibility of the trigger that toggles the detailed rows.",
    "type": "function(row: object)"
  },
  "b-table/detail-key": {
    "description": "Use a unique key of your data Object when use detailed or opened detailed. (id recommended)",
    "type": "string"
  },
  "b-table/custom-is-checked": {
    "description": "Custom method to verify if row is checked, works when is checkable. Useful for backend pagination",
    "type": "function(a: object| b: object)"
  },
  "b-table/is-row-checkable": {
    "description": "Custom method to verify if a row is checkable, works when is checkable. ",
    "type": "function(row: object)"
  },
  "b-table/is-row-selectable": {
    "description": "Custom method to verify if a row is selectable, works when is selected. ",
    "type": "function(row: object)"
  },
  "b-table/icon-pack": {
    "description": "Icon pack to use",
    "type": "string"
  },
  "b-table/mobile-sort-placeholder": {
    "description": "Text when nothing is selected",
    "type": "string"
  },
  "b-table/custom-row-key": {
    "description": "Use a unique key of your data Object for each row. Useful if your data prop has dynamic indices. (id recommended)",
    "type": "string"
  },
  "b-table/draggable": {
    "description": "Allows rows to be draggable",
    "type": "boolean"
  },
  "b-table/backend-filtering": {
    "description": "Columns won't be filtered with Javascript, use with searchable prop to the columns to filter in your backend",
    "type": "boolean"
  },
  "b-table/sticky-header": {
    "description": "Show a sticky table header",
    "type": "boolean"
  },
  "b-table/scrollable": {
    "description": "Add a horizontal scrollbar when table is too wide",
    "type": "boolean"
  },
  "b-table/height": {
    "description": "Table fixed height in pixels",
    "type": "number|string"
  },
  "b-table/filters-event": {
    "description": "Add a native event to filter",
    "type": "string"
  },
  "b-table/card-layout": {
    "description": "Rows appears as cards (collapse rows)",
    "type": "boolean"
  },
  "b-table/aria-next-label": {
    "description": "Accessibility label for the next page link (if paginated)",
    "type": "string"
  },
  "b-table/aria-previous-label": {
    "description": "Accessibility label for the previous page link (if paginated)",
    "type": "string"
  },
  "b-table/aria-page-label": {
    "description": "Accessibility label for the page link. If passed, this text will be prepended to the number of the page (if paginated)",
    "type": "string"
  },
  "b-table/aria-current-label": {
    "description": "Accessibility label for the current page link. If passed, this text will be prepended to the current page (if paginated)",
    "type": "string"
  },
  "b-table-column/label": {
    "description": "Column header text, also used to identify column if custom-key prop is missing",
    "type": "string"
  },
  "b-table-column/custom-key": {
    "description": "Unique identifier, use when label is missing or there are duplicate label names",
    "type": "string|number"
  },
  "b-table-column/field": {
    "description": "Property of the object the column is attributed, used for sorting",
    "type": "string"
  },
  "b-table-column/meta": {
    "description": "Meta prop to add anything, useful when creating custom headers",
    "type": "any"
  },
  "b-table-column/width": {
    "description": "Column fixed width in any unit, or pixels when none is provided",
    "type": "number|string"
  },
  "b-table-column/numeric": {
    "description": "Align the cell content to the right, sort icon on left",
    "type": "boolean"
  },
  "b-table-column/centered": {
    "description": "Align the cell content to the center",
    "type": "boolean"
  },
  "b-table-column/sortable": {
    "description": "Whether the column can be sorted",
    "type": "boolean"
  },
  "b-table-column/visible": {
    "description": "Whether the column is visible",
    "type": "boolean"
  },
  "b-table-column/custom-sort": {
    "description": "Custom sort method, works when is sortable",
    "type": "function(a: object| b: object, isasc: boolean)"
  },
  "b-table-column/searchable": {
    "description": "Add a input below the header to filter data",
    "type": "boolean"
  },
  "b-table-column/subheading": {
    "description": "Column subheading text",
    "type": "string|number"
  },
  "b-table-column/sticky": {
    "description": "Show a sticky column",
    "type": "boolean"
  },
  "b-table-column/header-selectable": {
    "description": "Prevent text selection of header when setting this to false.",
    "type": "boolean"
  },
  "b-table-column/header-class": {
    "description": "CSS classes to be applied on header",
    "type": "string"
  },
  "b-table-column/cell-class": {
    "description": "CSS classes to be applied on cell",
    "type": "string"
  },
  "b-tabs/value": {
    "description": "Binding value, tab index",
    "type": "number|string"
  },
  "b-tabs/expanded": {
    "description": "Make tab full width",
    "type": "boolean"
  },
  "b-tabs/animated": {
    "description": "Tabs have slide animation",
    "type": "boolean"
  },
  "b-tabs/type": {
    "description": "Type/Style of the tab, optional",
    "type": "string"
  },
  "b-tabs/size": {
    "description": "Size of the tab, optional",
    "type": "string"
  },
  "b-tabs/position": {
    "description": "Position of the tab, optional",
    "type": "string"
  },
  "b-tabs/vertical": {
    "description": "Display the tabs vertically. The content will be placed at right.",
    "type": "boolean"
  },
  "b-tabs/destroy-on-hide": {
    "description": "Destroy tabitem on hide",
    "type": "boolean"
  },
  "b-tabs/multiline": {
    "description": "Tabs will be multilined",
    "type": "boolean"
  },
  "b-tabs-item/label": {
    "description": "Tab label",
    "type": "string"
  },
  "b-tabs-item/value": {
    "description": "Tab value",
    "type": "number|string"
  },
  "b-tabs-item/icon": {
    "description": "Icon name",
    "type": "string"
  },
  "b-tabs-item/icon-pack": {
    "description": "Icon pack to use",
    "type": "string"
  },
  "b-tabs-item/disabled": {
    "description": "Item is disabled",
    "type": "boolean"
  },
  "b-tabs-item/visible": {
    "description": "Item is visible",
    "type": "boolean"
  },
  "b-tag/type": {
    "description": "Type (color) of the tag, optional",
    "type": "string"
  },
  "b-tag/close-type": {
    "description": "Type (color) of the cross button of tag, optional",
    "type": "string"
  },
  "b-tag/size": {
    "description": "Size of the tab, optional",
    "type": "string"
  },
  "b-tag/rounded": {
    "description": "Tag border rounded",
    "type": "boolean"
  },
  "b-tag/closable": {
    "description": "Add close/delete button to the tag",
    "type": "boolean"
  },
  "b-tag/attached": {
    "description": "Close/delete button style equal to attached tags",
    "type": "boolean"
  },
  "b-tag/ellipsis": {
    "description": "Adds ellipsis to not overflow the text",
    "type": "boolean"
  },
  "b-tag/tabstop": {
    "description": "If should stop when using tab key",
    "type": "boolean"
  },
  "b-tag/disabled": {
    "description": "Disable delete button",
    "type": "boolean"
  },
  "b-tag/aria-close-label": {
    "description": "Accessibility label for the close button",
    "type": "string"
  },
  "b-tag-taglist/attached": {
    "description": "Tabs inside are attached together",
    "type": "boolean"
  },
  "b-taginput/value": {
    "description": "Binding value",
    "type": "array<string>|array<number>, array<object>"
  },
  "b-taginput/maxlength": {
    "description": "Limits the length of each tag, plus character counter",
    "type": "string|number"
  },
  "b-taginput/maxtags": {
    "description": "Limits the number of tags, plus tag counter",
    "type": "string|number"
  },
  "b-taginput/has-counter": {
    "description": "Show counter when maxlength or maxtags props are passed",
    "type": "boolean"
  },
  "b-taginput/type": {
    "description": "Type (color) of the tags, optional",
    "type": "string"
  },
  "b-taginput/size": {
    "description": "Tag and input size, optional",
    "type": "string"
  },
  "b-taginput/rounded": {
    "description": "Makes the tags rounded, optional",
    "type": "boolean"
  },
  "b-taginput/attached": {
    "description": "Makes the tags attached instead of having an appended delete button, optional",
    "type": "boolean"
  },
  "b-taginput/ellipsis": {
    "description": "Adds ellipsis on tags to not overflow the text. Title is then added to the tag with full text",
    "type": "boolean"
  },
  "b-taginput/closable": {
    "description": "Add close/delete button to the tag",
    "type": "boolean"
  },
  "b-taginput/field": {
    "description": "Property of the object (if data is array of objects) to use as display text",
    "type": "string"
  },
  "b-taginput/autocomplete": {
    "description": "Add autocomplete feature (if true, any Autocomplete props may be used too)",
    "type": "boolean"
  },
  "b-taginput/allow-new": {
    "description": "When autocomplete, it allow to add new tags",
    "type": "boolean"
  },
  "b-taginput/open-on-focus": {
    "description": "Opens a dropdown with choices when the input field is focused",
    "type": "boolean"
  },
  "b-taginput/remove-on-keys": {
    "description": "Allow removing last tag when pressing given keys, if input is empty",
    "type": "array"
  },
  "b-taginput/confirm-key-codes": {
    "description": "Array of key codes which will add a tag when typing (default comma, enter and tab)",
    "type": "array"
  },
  "b-taginput/on-paste-separators": {
    "description": "Array of chars used to split when pasting a new string",
    "type": "array"
  },
  "b-taginput/before-adding": {
    "description": "Function to validate the value of the tag before adding",
    "type": "function"
  },
  "b-taginput/allow-duplicates": {
    "description": "Allows adding the same tag multiple times",
    "type": "boolean"
  },
  "b-taginput/readonly": {
    "description": "Disable input/typing",
    "type": "boolean"
  },
  "b-taginput/check-infinite-scroll": {
    "description": "Makes the autocomplete component check if list reached scroll end and emit infinite-scroll event.",
    "type": "boolean"
  },
  "b-taginput/append-to-body": {
    "description": "Append autocomplete content to body",
    "type": "boolean"
  },
  "b-taginput/Any other native attribute": {
    "description": "—",
    "type": "—"
  },
  "b-timepicker/value": {
    "description": "Binding value",
    "type": "date"
  },
  "b-timepicker/hour-format": {
    "description": "Hour format for input and display",
    "type": "string"
  },
  "b-timepicker/increment-minutes": {
    "description": "Step minutes for select component",
    "type": "number"
  },
  "b-timepicker/time-formatter": {
    "description": "Function to format time (Date type) to a string for display in the input",
    "type": "function"
  },
  "b-timepicker/time-parser": {
    "description": "Function to parse string to a time (Date type) for set a time from the input to the component",
    "type": "function"
  },
  "b-timepicker/min-time": {
    "description": "Earliest time available for selection",
    "type": "date"
  },
  "b-timepicker/max-time": {
    "description": "Latest time available for selection",
    "type": "date"
  },
  "b-timepicker/size": {
    "description": "Vertical size of input and picker, optional",
    "type": "string"
  },
  "b-timepicker/inline": {
    "description": "Timepicker is shown inline, input is removed",
    "type": "boolean"
  },
  "b-timepicker/editable": {
    "description": "Enable input/typing. <b>Note that you might have to set a custom time parser</b>",
    "type": "boolean"
  },
  "b-timepicker/loading": {
    "description": "Add the loading state to the input",
    "type": "boolean"
  },
  "b-timepicker/icon": {
    "description": "Icon name to be added",
    "type": "string"
  },
  "b-timepicker/icon-pack": {
    "description": "Icon pack to use",
    "type": "string"
  },
  "b-timepicker/unselectable-times": {
    "description": "Array of unselectable times (Date object)",
    "type": "array"
  },
  "b-timepicker/mobile-native": {
    "description": "Enable native timepicker on mobile",
    "type": "boolean"
  },
  "b-timepicker/position": {
    "description": "Optional, position of the timepicker relative to the input",
    "type": "string"
  },
  "b-timepicker/open-on-focus": {
    "description": "Open timepicker on input focus",
    "type": "boolean"
  },
  "b-timepicker/enable-seconds": {
    "description": "Show seconds picker",
    "type": "boolean"
  },
  "b-timepicker/default-minutes": {
    "description": "Default value when hours change",
    "type": "number"
  },
  "b-timepicker/default-seconds": {
    "description": "Default value when hours or minutes change",
    "type": "number"
  },
  "b-timepicker/time-creator": {
    "description": "Function used internally to create a new Date instance",
    "type": "function"
  },
  "b-timepicker/focusable": {
    "description": "Timepicker container can be focused",
    "type": "boolean"
  },
  "b-timepicker/append-to-body": {
    "description": "Append timepicker calendar to body",
    "type": "boolean"
  },
  "b-timepicker/Any native attribute": {
    "description": "—",
    "type": "—"
  },
  "b-toast/type": {
    "description": "Type (color) of the toast",
    "type": "string"
  },
  "b-toast/message": {
    "description": "Message text (can contain HTML). <div class=\"notification is-danger\">Dynamically rendering arbitrary HTML on your website can be very dangerous because it can easily lead to <a href=\"https://en.wikipedia.org/wiki/Cross-site_scripting\" target=\"_blank\" rel=\"noopener\">XSS vulnerabilities</a>. Only use HTML interpolation on trusted content and never on user-provided content.</div>",
    "type": "string"
  },
  "b-toast/position": {
    "description": "Which position the toast will appear",
    "type": "string"
  },
  "b-toast/duration": {
    "description": "Visibility duration in milliseconds",
    "type": "number"
  },
  "b-toast/queue": {
    "description": "If should queue with others notices (snackbar/toast/notification)",
    "type": "boolean"
  },
  "b-toast/container": {
    "description": "DOM element the toast will be created on. Note that this also changes the position of the toast from fixed to absolute. Meaning that the container should be fixed. Also note that this will override the defaultContainerElement if you specified it in your Buefy Constructor Options. See Constructor options for more details.",
    "type": "string"
  },
  "b-tooltip/type": {
    "description": "Type (color) of the tooltip",
    "type": "string"
  },
  "b-tooltip/active": {
    "description": "Whether tooltip is active or not",
    "type": "boolean"
  },
  "b-tooltip/label": {
    "description": "Tooltip text",
    "type": "string"
  },
  "b-tooltip/position": {
    "description": "Tooltip position in relation to the element",
    "type": "string"
  },
  "b-tooltip/always": {
    "description": "Tooltip will be always active",
    "type": "boolean"
  },
  "b-tooltip/animated": {
    "description": "Tooltip will have a little fade animation",
    "type": "boolean"
  },
  "b-tooltip/square": {
    "description": "Tooltip will be square (not rounded corners)",
    "type": "boolean"
  },
  "b-tooltip/dashed": {
    "description": "Tooltip slot will have a dashed underline",
    "type": "boolean"
  },
  "b-tooltip/multilined": {
    "description": "Tooltip will be multilined",
    "type": "boolean"
  },
  "b-tooltip/size": {
    "description": "Tooltip multiline size (only works for multilined tooltips)",
    "type": "string"
  },
  "b-tooltip/delay": {
    "description": "Tooltip delay before it appears (number in ms)",
    "type": "number"
  },
  "b-upload/value": {
    "description": "Binding value",
    "type": "file|array<file>"
  },
  "b-upload/drag-drop": {
    "description": "Accepts drag & drop and change its style",
    "type": "boolean"
  },
  "b-upload/type": {
    "description": "Type (color) of the drag area when hovered",
    "type": "string"
  },
  "b-upload/disabled": {
    "description": "Same as native disabled",
    "type": "boolean"
  },
  "b-upload/name": {
    "description": "Same as native name",
    "type": "string"
  },
  "b-upload/required": {
    "description": "Same as native required",
    "type": "boolean"
  },
  "b-upload/accept": {
    "description": "Same as native accept",
    "type": "string"
  },
  "b-upload/loading": {
    "description": "Add the loading state",
    "type": "boolean"
  },
  "b-upload/multiple": {
    "description": "Same as native, also push new item to v-model instead of replacing",
    "type": "boolean"
  },
  "b-upload/native": {
    "description": "Replace last chosen files every time (like native file input element)",
    "type": "boolean"
  },
  "b-upload/expanded": {
    "description": "Upload will be expanded (full-width)",
    "type": "boolean"
  }
}