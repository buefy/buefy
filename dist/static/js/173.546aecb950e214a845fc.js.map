{"version":3,"sources":["webpack:///static/js/173.546aecb950e214a845fc.js","webpack:///./docs/pages/components/field/api/field.js?fd91"],"names":["webpackJsonp","93","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","props","name","description","type","values","default"],"mappings":"AAAAA,cAAc,MAERC,GACA,SAAUC,EAAQC,EAAqBC,GAE7C,YACAC,QAAOC,eAAeH,EAAqB,cAAgBI,OAAO,ICNlEJ,EAAA,UAEQK,QAEQC,KAAM,oBACNC,YAAa,0HACbC,KAAM,SACNC,qWAIAC,QAAS,MAGTJ,KAAM,qBACNC,YAAa,cACbC,KAAM,SACNC,OAAQ,IACRC,QAAS,MAGTJ,KAAM,yBACNC,YAAa,mDACbC,KAAM,SACNC,OAAQ,IACRC,QAAS,MAGTJ,KAAM,4BACNC,YAAa,2CACbC,KAAM,SACNC,OAAQ,IACRC,QAAS,MAGTJ,KAAM,uBACNC,YAAa,oBACbC,KAAM,wBACNC,OAAQ,IACRC,QAAS,MAGTJ,KAAM,uBACNC,YAAa,iHACbC,KAAM,UACNC,OAAQ,IACRC,QAAS,uBAGTJ,KAAM,+BACNC,YAAa,iEACbC,KAAM,UACNC,OAAQ,IACRC,QAAS,uBAGTJ,KAAM,wBACNC,YAAa,oDACbC,KAAM,SACNC,OAAQ,kDACRC,QAAS,MAGTJ,KAAM,sBACNC,YAAa,+CACbC,KAAM,UACNC,OAAQ,IACRC,QAAS,sBAGTJ,KAAM,0BACNC,YAAa,gEACbC,KAAM,UACNC,OAAQ,IACRC,QAAS","file":"static/js/173.546aecb950e214a845fc.js","sourcesContent":["webpackJsonp([173],{\n\n/***/ 93:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony default export */ __webpack_exports__[\"default\"] = ([{\n    props: [{\n        name: '<code>type</code>',\n        description: 'Type (color) of the field and help message, also adds a matching icon, optional. Used by Input, Select and Autocomplete',\n        type: 'String',\n        values: '<code>is-white</code>, <code>is-black</code>, <code>is-light</code>,\\n                    <code>is-dark</code>, <code>is-primary</code>, <code>is-info</code>, <code>is-success</code>,\\n                    <code>is-warning</code>, <code>is-danger</code>,\\n                    and any other colors you\\'ve set in the <code>$colors</code> list on Sass',\n        default: '—'\n    }, {\n        name: '<code>label</code>',\n        description: 'Field label',\n        type: 'String',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>label-for</code>',\n        description: 'Same as native <code>for</code> set on the label',\n        type: 'String',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>custom-class</code>',\n        description: 'CSS classes to be applied on field label',\n        type: 'String',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>message</code>',\n        description: 'Help message text',\n        type: 'String, Array<String>',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>grouped</code>',\n        description: 'Direct child components/elements of Field will be grouped horizontally (see which ones at the top of the page)',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>group-multiline</code>',\n        description: 'Allow controls to fill up multiple lines, making it responsive',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>position</code>',\n        description: 'Which position should the addons appear, optional',\n        type: 'String',\n        values: '<code>is-centered</code>, <code>is-right</code>',\n        default: '—'\n    }, {\n        name: '<code>addons</code>',\n        description: 'Field automatically attach controls together',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>true</code>'\n    }, {\n        name: '<code>horizontal</code>',\n        description: 'Group label and control on the same line for horizontal forms',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }]\n}]);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/173.546aecb950e214a845fc.js","export default [\n    {\n        props: [\n            {\n                name: '<code>type</code>',\n                description: 'Type (color) of the field and help message, also adds a matching icon, optional. Used by Input, Select and Autocomplete',\n                type: 'String',\n                values: `<code>is-white</code>, <code>is-black</code>, <code>is-light</code>,\n                    <code>is-dark</code>, <code>is-primary</code>, <code>is-info</code>, <code>is-success</code>,\n                    <code>is-warning</code>, <code>is-danger</code>,\n                    and any other colors you've set in the <code>$colors</code> list on Sass`,\n                default: '—'\n            },\n            {\n                name: '<code>label</code>',\n                description: 'Field label',\n                type: 'String',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>label-for</code>',\n                description: 'Same as native <code>for</code> set on the label',\n                type: 'String',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>custom-class</code>',\n                description: 'CSS classes to be applied on field label',\n                type: 'String',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>message</code>',\n                description: 'Help message text',\n                type: 'String, Array<String>',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>grouped</code>',\n                description: 'Direct child components/elements of Field will be grouped horizontally (see which ones at the top of the page)',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>group-multiline</code>',\n                description: 'Allow controls to fill up multiple lines, making it responsive',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>position</code>',\n                description: 'Which position should the addons appear, optional',\n                type: 'String',\n                values: '<code>is-centered</code>, <code>is-right</code>',\n                default: '—'\n            },\n            {\n                name: '<code>addons</code>',\n                description: 'Field automatically attach controls together',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>true</code>'\n            },\n            {\n                name: '<code>horizontal</code>',\n                description: 'Group label and control on the same line for horizontal forms',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            }\n        ]\n    }\n]\n\n\n\n// WEBPACK FOOTER //\n// ./docs/pages/components/field/api/field.js"],"sourceRoot":""}