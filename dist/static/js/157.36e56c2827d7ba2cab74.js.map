{"version":3,"sources":["webpack:///static/js/157.36e56c2827d7ba2cab74.js","webpack:///./docs/pages/components/taginput/api/taginput.js?d181"],"names":["webpackJsonp","109","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","props","name","description","type","values","default","slots","events","parameters"],"mappings":"AAAAA,cAAc,MAERC,IACA,SAAUC,EAAQC,EAAqBC,GAE7C,YACAC,QAAOC,eAAeH,EAAqB,cAAgBI,OAAO,ICNlEJ,EAAA,UAEQK,QAEQC,KAAM,uBACNC,YAAa,gBACbC,KAAM,8CACNC,OAAQ,IACRC,QAAS,MAGTJ,KAAM,yBACNC,YAAa,wDACbC,KAAM,iBACNC,OAAQ,IACRC,QAAS,MAGTJ,KAAM,uBACNC,YAAa,8CACbC,KAAM,iBACNC,OAAQ,IACRC,QAAS,MAGTJ,KAAM,oBACNC,YAAa,qCACbC,KAAM,SACNC,qWAIAC,QAAS,0BAGTJ,KAAM,oBACNC,YAAa,+BACbC,KAAM,SACNC,OAAQ,uEACRC,QAAS,2BAGTJ,KAAM,uBACNC,YAAa,mCACbC,KAAM,UACNC,OAAQ,IACRC,QAAS,uBAGTJ,KAAM,wBACNC,YAAa,gFACbC,KAAM,UACNC,OAAQ,IACRC,QAAS,uBAGTJ,KAAM,wBACNC,YAAa,iDACbC,KAAM,UACNC,OAAQ,IACRC,QAAS,uBAGTJ,KAAM,qBACNC,YAAa,2FACbC,KAAM,SACNC,OAAQ,IACRC,QAAS,uBAGTJ,KAAM,4BACNC,YAAa,2BACbC,KAAM,UACNC,OAAQ,IACRC,QAAS,uBAGTJ,KAAM,yBACNC,YAAa,2DACbC,KAAM,UACNC,OAAQ,IACRC,QAAS,uBAGTJ,KAAM,8BACNC,YAAa,sEACbC,KAAM,QACNC,OAAQ,IACRC,QAAS,qBAGTJ,KAAM,iCACNC,YAAa,gFACbC,KAAM,QACNC,OAAQ,IACRC,QAAS,2BAGTJ,KAAM,mCACNC,YAAa,yDACbC,KAAM,QACNC,OAAQ,IACRC,QAAS,uBAGTJ,KAAM,6BACNC,YAAa,0DACbC,KAAM,WACNC,OAAQ,IACRC,QAAS,4BAGTJ,KAAM,kDACNC,YAAa,IACbC,KAAM,IACNC,OAAQ,IACRC,QAAS,MAGjBC,QAEQL,KAAM,UACNC,YAAa,GACbF,MAAO,mEAGPC,KAAM,qBACNC,YAAa,+DACbF,MAAO,MAGfO,SAEQN,KAAM,qBACNC,YAAa,uCACbM,WAAY,8BAGZP,KAAM,sBACNC,YAAa,4BACbM,WAAY,+BAGZP,KAAM,mBACNC,YAAa,qCACbM,WAAY,sCAGZP,KAAM,sBACNC,YAAa,uCACbM,WAAY","file":"static/js/157.36e56c2827d7ba2cab74.js","sourcesContent":["webpackJsonp([157],{\n\n/***/ 109:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony default export */ __webpack_exports__[\"default\"] = ([{\n    props: [{\n        name: '<code>v-model</code>',\n        description: 'Binding value',\n        type: 'Array<String>, Array<Number>, Array<Object>',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>maxlength</code>',\n        description: 'Limits the length of each tag, plus character counter',\n        type: 'String, Number',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>maxtags</code>',\n        description: 'Limits the number of tags, plus tag counter',\n        type: 'String, Number',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>type</code>',\n        description: 'Type (color) of the tags, optional',\n        type: 'String',\n        values: '<code>is-white</code>, <code>is-black</code>, <code>is-light</code>,\\n                    <code>is-dark</code>, <code>is-primary</code>, <code>is-info</code>, <code>is-success</code>,\\n                    <code>is-warning</code>, <code>is-danger</code>,\\n                    and any other colors you\\'ve set in the <code>$colors</code> list on Sass',\n        default: '<code>is-light</code>'\n    }, {\n        name: '<code>size</code>',\n        description: 'Tag and input size, optional',\n        type: 'String',\n        values: '<code>is-small</code>, <code>is-medium</code>, <code>is-large</code>',\n        default: '<code>is-medium</code>'\n    }, {\n        name: '<code>rounded</code>',\n        description: 'Makes the tags rounded, optional',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>attached</code>',\n        description: 'Makes the tags attached instead of having an appended delete button, optional',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>ellipsis</code>',\n        description: 'Adds ellipsis on tags to not overflow the text',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>field</code>',\n        description: 'Property of the object (if <code>data</code> is array of objects) to use as display text',\n        type: 'String',\n        values: '—',\n        default: '<code>value</code>'\n    }, {\n        name: '<code>autocomplete</code>',\n        description: 'Add autocomplete feature',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>allow-new</code>',\n        description: 'When <code>autocomplete</code>, it allow to add new tags',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>remove-on-keys</code>',\n        description: 'Allow removing last tag when pressing given keys, if input is empty',\n        type: 'Array',\n        values: '—',\n        default: '<code>[8]</code>'\n    }, {\n        name: '<code>confirm-key-codes</code>',\n        description: 'Array of key codes which will add a tag when typing (default comma and enter)',\n        type: 'Array',\n        values: '—',\n        default: '<code>[13, 188]</code>'\n    }, {\n        name: '<code>on-paste-separators</code>',\n        description: 'Array of chars used to split when pasting a new string',\n        type: 'Array',\n        values: '—',\n        default: '<code>[\\',\\']</code>'\n    }, {\n        name: '<code>before-adding</code>',\n        description: 'Function to validate the value of the tag before adding',\n        type: 'Function',\n        values: '—',\n        default: '<code>() => true</code>'\n    }, {\n        name: 'Any other native attribute or Autocomplete prop',\n        description: '—',\n        type: '—',\n        values: '—',\n        default: '—'\n    }],\n    slots: [{\n        name: 'default',\n        description: '',\n        props: '<code>option: String|Object</code>, <code>index: Number</code>'\n    }, {\n        name: '<code>empty</code>',\n        description: 'Show like an option if <code>data</code> array prop is empty',\n        props: '—'\n    }],\n    events: [{\n        name: '<code>input</code>',\n        description: 'Triggers when tags are added/removed',\n        parameters: '<code>value: Array</code>'\n    }, {\n        name: '<code>typing</code>',\n        description: 'User started typing a tag',\n        parameters: '<code>value: String</code>'\n    }, {\n        name: '<code>add</code>',\n        description: 'Triggers when a tag has been added',\n        parameters: '<code>value: String|Object</code>'\n    }, {\n        name: '<code>remove</code>',\n        description: 'Triggers when a tag has been removed',\n        parameters: '<code>value: String|Object</code>'\n    }]\n}]);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/157.36e56c2827d7ba2cab74.js","export default [\n    {\n        props: [\n            {\n                name: '<code>v-model</code>',\n                description: 'Binding value',\n                type: 'Array<String>, Array<Number>, Array<Object>',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>maxlength</code>',\n                description: 'Limits the length of each tag, plus character counter',\n                type: 'String, Number',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>maxtags</code>',\n                description: 'Limits the number of tags, plus tag counter',\n                type: 'String, Number',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>type</code>',\n                description: 'Type (color) of the tags, optional',\n                type: 'String',\n                values: `<code>is-white</code>, <code>is-black</code>, <code>is-light</code>,\n                    <code>is-dark</code>, <code>is-primary</code>, <code>is-info</code>, <code>is-success</code>,\n                    <code>is-warning</code>, <code>is-danger</code>,\n                    and any other colors you've set in the <code>$colors</code> list on Sass`,\n                default: '<code>is-light</code>'\n            },\n            {\n                name: '<code>size</code>',\n                description: 'Tag and input size, optional',\n                type: 'String',\n                values: '<code>is-small</code>, <code>is-medium</code>, <code>is-large</code>',\n                default: '<code>is-medium</code>'\n            },\n            {\n                name: '<code>rounded</code>',\n                description: 'Makes the tags rounded, optional',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>attached</code>',\n                description: 'Makes the tags attached instead of having an appended delete button, optional',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>ellipsis</code>',\n                description: 'Adds ellipsis on tags to not overflow the text',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>field</code>',\n                description: 'Property of the object (if <code>data</code> is array of objects) to use as display text',\n                type: 'String',\n                values: '—',\n                default: '<code>value</code>'\n            },\n            {\n                name: '<code>autocomplete</code>',\n                description: 'Add autocomplete feature',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>allow-new</code>',\n                description: 'When <code>autocomplete</code>, it allow to add new tags',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>remove-on-keys</code>',\n                description: 'Allow removing last tag when pressing given keys, if input is empty',\n                type: 'Array',\n                values: '—',\n                default: '<code>[8]</code>'\n            },\n            {\n                name: '<code>confirm-key-codes</code>',\n                description: 'Array of key codes which will add a tag when typing (default comma and enter)',\n                type: 'Array',\n                values: '—',\n                default: '<code>[13, 188]</code>'\n            },\n            {\n                name: '<code>on-paste-separators</code>',\n                description: 'Array of chars used to split when pasting a new string',\n                type: 'Array',\n                values: '—',\n                default: '<code>[\\',\\']</code>'\n            },\n            {\n                name: '<code>before-adding</code>',\n                description: 'Function to validate the value of the tag before adding',\n                type: 'Function',\n                values: '—',\n                default: '<code>() => true</code>'\n            },\n            {\n                name: 'Any other native attribute or Autocomplete prop',\n                description: '—',\n                type: '—',\n                values: '—',\n                default: '—'\n            }\n        ],\n        slots: [\n            {\n                name: 'default',\n                description: '',\n                props: '<code>option: String|Object</code>, <code>index: Number</code>'\n            },\n            {\n                name: '<code>empty</code>',\n                description: 'Show like an option if <code>data</code> array prop is empty',\n                props: '—'\n            }\n        ],\n        events: [\n            {\n                name: '<code>input</code>',\n                description: 'Triggers when tags are added/removed',\n                parameters: '<code>value: Array</code>'\n            },\n            {\n                name: '<code>typing</code>',\n                description: 'User started typing a tag',\n                parameters: '<code>value: String</code>'\n            },\n            {\n                name: '<code>add</code>',\n                description: 'Triggers when a tag has been added',\n                parameters: '<code>value: String|Object</code>'\n            },\n            {\n                name: '<code>remove</code>',\n                description: 'Triggers when a tag has been removed',\n                parameters: '<code>value: String|Object</code>'\n            }\n        ]\n    }\n]\n\n\n\n// WEBPACK FOOTER //\n// ./docs/pages/components/taginput/api/taginput.js"],"sourceRoot":""}