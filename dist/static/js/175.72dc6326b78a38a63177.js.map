{"version":3,"sources":["webpack:///static/js/175.72dc6326b78a38a63177.js","webpack:///./docs/pages/components/dialog/api/dialog.js?dc1a"],"names":["webpackJsonp","91","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","props","name","description","type","values","default"],"mappings":"AAAAA,cAAc,MAERC,GACA,SAAUC,EAAQC,EAAqBC,GAE7C,YACAC,QAAOC,eAAeH,EAAqB,cAAgBI,OAAO,ICNlEJ,EAAA,UAEQK,QAEQC,KAAM,oBACNC,YAAa,4EACbC,KAAM,SACNC,qWAIAC,QAAS,4BAGTJ,KAAM,qBACNC,YAAa,eACbC,KAAM,SACNC,OAAQ,IACRC,QAAS,MAGTJ,KAAM,uBACNC,YAAa,eACbC,KAAM,SACNC,OAAQ,IACRC,QAAS,MAGTJ,KAAM,uBACNC,YAAa,wFACbC,KAAM,UACNC,OAAQ,IACRC,QAAS,uBAGTJ,KAAM,oBACNC,YAAa,8CACbC,KAAM,SACNC,OAAQ,IACRC,QAAS,MAGTJ,KAAM,wBACNC,YAAa,qDACbC,KAAM,SACNC,OAAQ,4GACRC,QAAS,MAGTJ,KAAM,oBACNC,YAAa,0BACbC,KAAM,SACNC,OAAQ,uEACRC,QAAS,MAGTJ,KAAM,yBACNC,YAAa,qCACbC,KAAM,SACNC,OAAQ,IACRC,QAAS,0BAGTJ,KAAM,2BACNC,YAAa,6BACbC,KAAM,SACNC,OAAQ,IACRC,QAAS,oBAGTJ,KAAM,0BACNC,YAAa,4BACbC,KAAM,SACNC,OAAQ,IACRC,QAAS,wBAGTJ,KAAM,yBACNC,8FACAC,KAAM,iBACNC,OAAQ,iEACRC,+EAGAJ,KAAM,0BACNC,8CACAC,KAAM,SACNC,OAAQ,4BACRC,QAAS,MAGTJ,KAAM,yBACNC,YAAa,uDACbC,KAAM,2BACNC,OAAQ,IACRC,QAAS,MAGTJ,KAAM,wBACNC,YAAa,8GACbC,KAAM,WACNC,OAAQ,IACRC,QAAS,MAGTJ,KAAM,sBACNC,8QAEAC,KAAM,SACNC,OAAQ,uCACRC,QAAS,sBAGTJ,KAAM,uBACNC,YAAa,gEACbC,KAAM,SACNC,OAAQ,4CACRC,QAAS","file":"static/js/175.72dc6326b78a38a63177.js","sourcesContent":["webpackJsonp([175],{\n\n/***/ 91:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony default export */ __webpack_exports__[\"default\"] = ([{\n    props: [{\n        name: '<code>type</code>',\n        description: 'Type (color) of the confirm button (and the icon if <code>hasIcon</code>)',\n        type: 'String',\n        values: '<code>is-white</code>, <code>is-black</code>, <code>is-light</code>,\\n                    <code>is-dark</code>, <code>is-primary</code>, <code>is-info</code>, <code>is-success</code>,\\n                    <code>is-warning</code>, <code>is-danger</code>,\\n                    and any other colors you\\'ve set in the <code>$colors</code> list on Sass',\n        default: '<code>is-primary</code>'\n    }, {\n        name: '<code>title</code>',\n        description: 'Dialog title',\n        type: 'String',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>message</code>',\n        description: 'Message text',\n        type: 'String',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>hasIcon</code>',\n        description: 'Adds an icon on the left side depending on the <code>type</code> or <code>icon</code>',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>icon</code>',\n        description: 'Icon name if <code>hasIcon</code>, optional',\n        type: 'String',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>iconPack</code>',\n        description: 'Icon pack to use if <code>hasIcon</code>, optional',\n        type: 'String',\n        values: '<code>mdi</code>, <code>fa</code>, <code>fas</code>, <code>far</code>, <code>fad</code>, <code>fal</code>',\n        default: '—'\n    }, {\n        name: '<code>size</code>',\n        description: 'Dialog\\'s size, optional',\n        type: 'String',\n        values: '<code>is-small</code>, <code>is-medium</code>, <code>is-large</code>',\n        default: '—'\n    }, {\n        name: '<code>animation</code>',\n        description: 'Custom animation (transition name)',\n        type: 'String',\n        values: '—',\n        default: '<code>zoom-out</code>'\n    }, {\n        name: '<code>confirmText</code>',\n        description: 'Text of the confirm button',\n        type: 'String',\n        values: '—',\n        default: '<code>OK</code>'\n    }, {\n        name: '<code>cancelText</code>',\n        description: 'Text of the cancel button',\n        type: 'String',\n        values: '—',\n        default: '<code>Cancel</code>'\n    }, {\n        name: '<code>canCancel</code>',\n        description: 'Can close dialog by clicking cancel button, pressing escape or clicking outside',\n        type: 'Boolean, Array',\n        values: '<code>escape</code>, <code>button</code>, <code>outside</code>',\n        default: '<code>true</code> for Confirm/Prompt, <code>false</code> for Alert'\n    }, {\n        name: '<code>inputAttrs</code>',\n        description: 'Prompt only: input\\'s attributes',\n        type: 'Object',\n        values: 'Any HTML5 input attribute',\n        default: '—'\n    }, {\n        name: '<code>onConfirm</code>',\n        description: 'Callback function when the confirm button is clicked',\n        type: 'Function (value: String)',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>onCancel</code>',\n        description: 'Callback function when the dialog is canceled (cancel button is clicked / pressed escape / clicked outside)',\n        type: 'Function',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>scroll</code>',\n        description: '<code>clip</code> to remove the <code>&lt;body&gt;</code> scrollbar, <code>keep</code> to have a non scrollable scrollbar\\n                    to avoid shifting background, but will set <code>&lt;body&gt;</code> to position fixed, might break some layouts',\n        type: 'String',\n        values: '<code>clip</code>, <code>keep</code>',\n        default: '<code>clip</code>'\n    }, {\n        name: '<code>focusOn</code>',\n        description: 'Focus on confirm or cancel button (when dialog is not prompt)',\n        type: 'String',\n        values: '<code>confirm</code>, <code>cancel</code>',\n        default: '<code>confirm</code>'\n    }]\n}]);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/175.72dc6326b78a38a63177.js","export default [\n    {\n        props: [\n            {\n                name: '<code>type</code>',\n                description: 'Type (color) of the confirm button (and the icon if <code>hasIcon</code>)',\n                type: 'String',\n                values: `<code>is-white</code>, <code>is-black</code>, <code>is-light</code>,\n                    <code>is-dark</code>, <code>is-primary</code>, <code>is-info</code>, <code>is-success</code>,\n                    <code>is-warning</code>, <code>is-danger</code>,\n                    and any other colors you've set in the <code>$colors</code> list on Sass`,\n                default: '<code>is-primary</code>'\n            },\n            {\n                name: '<code>title</code>',\n                description: 'Dialog title',\n                type: 'String',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>message</code>',\n                description: 'Message text',\n                type: 'String',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>hasIcon</code>',\n                description: 'Adds an icon on the left side depending on the <code>type</code> or <code>icon</code>',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>icon</code>',\n                description: 'Icon name if <code>hasIcon</code>, optional',\n                type: 'String',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>iconPack</code>',\n                description: 'Icon pack to use if <code>hasIcon</code>, optional',\n                type: 'String',\n                values: '<code>mdi</code>, <code>fa</code>, <code>fas</code>, <code>far</code>, <code>fad</code>, <code>fal</code>',\n                default: '—'\n            },\n            {\n                name: '<code>size</code>',\n                description: 'Dialog\\'s size, optional',\n                type: 'String',\n                values: '<code>is-small</code>, <code>is-medium</code>, <code>is-large</code>',\n                default: '—'\n            },\n            {\n                name: '<code>animation</code>',\n                description: 'Custom animation (transition name)',\n                type: 'String',\n                values: '—',\n                default: '<code>zoom-out</code>'\n            },\n            {\n                name: '<code>confirmText</code>',\n                description: 'Text of the confirm button',\n                type: 'String',\n                values: '—',\n                default: '<code>OK</code>'\n            },\n            {\n                name: '<code>cancelText</code>',\n                description: 'Text of the cancel button',\n                type: 'String',\n                values: '—',\n                default: '<code>Cancel</code>'\n            },\n            {\n                name: '<code>canCancel</code>',\n                description: `Can close dialog by clicking cancel button, pressing escape or clicking outside`,\n                type: 'Boolean, Array',\n                values: '<code>escape</code>, <code>button</code>, <code>outside</code>',\n                default: `<code>true</code> for Confirm/Prompt, <code>false</code> for Alert`\n            },\n            {\n                name: '<code>inputAttrs</code>',\n                description: `Prompt only: input's attributes`,\n                type: 'Object',\n                values: 'Any HTML5 input attribute',\n                default: '—'\n            },\n            {\n                name: '<code>onConfirm</code>',\n                description: 'Callback function when the confirm button is clicked',\n                type: 'Function (value: String)',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>onCancel</code>',\n                description: 'Callback function when the dialog is canceled (cancel button is clicked / pressed escape / clicked outside)',\n                type: 'Function',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>scroll</code>',\n                description: `<code>clip</code> to remove the <code>&lt;body&gt;</code> scrollbar, <code>keep</code> to have a non scrollable scrollbar\n                    to avoid shifting background, but will set <code>&lt;body&gt;</code> to position fixed, might break some layouts`,\n                type: 'String',\n                values: '<code>clip</code>, <code>keep</code>',\n                default: '<code>clip</code>'\n            },\n            {\n                name: '<code>focusOn</code>',\n                description: 'Focus on confirm or cancel button (when dialog is not prompt)',\n                type: 'String',\n                values: '<code>confirm</code>, <code>cancel</code>',\n                default: '<code>confirm</code>'\n            }\n        ]\n    }\n]\n\n\n\n// WEBPACK FOOTER //\n// ./docs/pages/components/dialog/api/dialog.js"],"sourceRoot":""}