{"version":3,"sources":["webpack:///static/js/160.52fd114071eb580c1ee4.js","webpack:///./docs/pages/components/table/api/table.js?f8c0"],"names":["webpackJsonp","106","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","title","props","name","description","type","values","default","slots","events","parameters","methods"],"mappings":"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","file":"static/js/160.52fd114071eb580c1ee4.js","sourcesContent":["webpackJsonp([160],{\n\n/***/ 106:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony default export */ __webpack_exports__[\"default\"] = ([{\n    title: 'Table',\n    props: [{\n        name: '<code>data</code>',\n        description: 'Table data',\n        type: 'Array<Object>',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>columns</code>',\n        description: 'Table columns, you can also add <code>renderHtml: true</code> on each column object',\n        type: 'Array<Object> (same as TableColumns props)',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>default-sort</code>',\n        description: 'Sets the default sort column and order \\u2014 e.g. <code>[\\'first_name\\', \\'desc\\']</code>',\n        type: 'String, Array',\n        values: '—',\n        default: 'order: <code>default-sort-direction</code> prop'\n    }, {\n        name: '<code>default-sort-direction</code>',\n        description: 'Sets the default sort column direction on the first click',\n        type: 'String',\n        values: '<code>asc</code>, <code>desc</code>',\n        default: '<code>asc</code>'\n    }, {\n        name: '<code>bordered</code>',\n        description: 'Border to all cells',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>narrowed</code>',\n        description: 'Makes the cells narrower',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>selected</code>',\n        description: 'Set which row is selected, use the <code>.sync</code> modifier to make it two-way binding',\n        type: 'Object',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>focusable</code>',\n        description: 'Table can be focused and user can navigate with keyboard arrows (require <code>selected.sync</code>) and rows are highlighted when hovering',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>hoverable</code>',\n        description: 'Rows are highlighted when hovering',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>checkable</code>',\n        description: 'Rows can be checked (multiple), checked rows will have a <code>.is-checked</code> class if you want to style',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>checked-rows</code>',\n        description: 'Set which rows are checked, use the <code>.sync</code> modifier to make it two-way binding',\n        type: 'Array<Object>',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>mobile-cards</code>',\n        description: 'Rows appears as cards on mobile (collapse rows)',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>true</code>'\n    }, {\n        name: '<code>backend-sorting</code>',\n        description: 'Columns won\\'t be sorted with Javascript, use with <code>sort</code> event to sort in your backend',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>backend-pagination</code>',\n        description: 'Rows won\\'t be paginated with Javascript, use with <code>page-change</code> event to paginate in your backend',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>total</code>',\n        description: 'Total number of table data if <code>backend-pagination</code> is enabled',\n        type: 'Number',\n        values: '—',\n        default: '<code>0</code>'\n    }, {\n        name: '<code>current-page</code>',\n        description: 'Current page of table data (if <code>paginated</code>)',\n        type: 'Number',\n        values: '—',\n        default: '<code>1</code>'\n    }, {\n        name: '<code>loading</code>',\n        description: 'Loading state',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>paginated</code>',\n        description: 'Adds pagination to the table',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>pagination-simple</code>',\n        description: 'Simple pagination (if <code>paginated</code>)',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>pagination-size</code>',\n        description: 'Pagination size (if <code>paginated</code>)',\n        type: 'String',\n        values: '<code>is-small</code>, <code>is-medium</code>, <code>is-large</code>',\n        default: '—'\n    }, {\n        name: '<code>per-page</code>',\n        description: 'How many rows per page (if <code>paginated</code>)',\n        type: 'Number',\n        values: '—',\n        default: '<code>20</code>'\n    }, {\n        name: '<code>row-class</code>',\n        description: 'Add a class to row (<code>&lt;tr&gt;</code> element) based on the return',\n        type: 'Function (row: Object, index: Number)',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>detailed</code>',\n        description: 'Allow row details (check scoped slots documentation)',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>opened-detailed</code>',\n        description: 'Allow pre-defined opened details. Ideal to open details via vue-router. (An unique key is required; check detail-key prop)',\n        type: 'Array',\n        values: '—',\n        default: '<code>[]</code>'\n    }, {\n        name: '<code>has-detailed-visible</code>',\n        description: 'Controls the visibility of the trigger that toggles the detailed rows.',\n        type: 'Function (row: Object)',\n        values: '—',\n        default: '<code>true</code>'\n    }, {\n        name: '<code>detail-key</code>',\n        description: 'Use an unique key of your data Object when use detailed or opened detailed. (id recommended)',\n        type: 'String',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>custom-is-checked</code>',\n        description: 'Custom method to verify if row is checked, works when is <code>checkable</code>. Useful for backend pagination',\n        type: 'Function (a: Object, b: Object)',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>is-row-checkable</code>',\n        description: 'Custom method to verify if a row is disabled, works when is <code>checkable</code>. ',\n        type: 'Function (row: Object)',\n        values: '—',\n        default: 'true'\n    }],\n    slots: [{\n        name: 'default',\n        description: '<strong>Required</strong>, table body and header',\n        props: '<code>row: Object</code>, <code>index: Number</code>'\n    }, {\n        name: '<code>header</code>',\n        description: 'Table custom header',\n        props: '<code>column: Vue Object</code>, <code>index: Number</code>'\n    }, {\n        name: '<code>detail</code>',\n        description: 'Row detail (collapsible)',\n        props: '<code>row: Object</code>, <code>index: Number</code>'\n    }, {\n        name: '<code>empty</code>',\n        description: 'Replaces table body when <code>data</code> array prop is empty',\n        props: '—'\n    }, {\n        name: '<code>footer</code>',\n        description: 'Table custom footer',\n        props: '—'\n    }, {\n        name: '<code>bottom-left</code>',\n        description: 'Custom bottom-left (opposite side of pagination)',\n        props: '—'\n    }],\n    events: [{\n        name: '<code>click</code>',\n        description: 'Triggers when a row is clicked',\n        parameters: '<code>row: Object</code>'\n    }, {\n        name: '<code>dblclick</code>',\n        description: 'Triggers when a row is double clicked',\n        parameters: '<code>row: Object</code>'\n    }, {\n        name: '<code>sort</code>',\n        description: 'Triggers when a sortable column is clicked',\n        parameters: '<code>field: String</code>, <code>order: String</code>'\n    }, {\n        name: '<code>select</code>',\n        description: 'Triggers when a row is selected',\n        parameters: '<code>row: Object</code>, <code>oldRow: Object</code>'\n    }, {\n        name: '<code>check</code>',\n        description: 'Triggers when the checkbox in a row is clicked and/or when the header checkbox is clicked',\n        parameters: '<code>checkedList: Array</code>, <code>row: Object</code>'\n    }, {\n        name: '<code>check-all</code>',\n        description: 'Triggers when the header checkbox is clicked',\n        parameters: '<code>checkedList: Array</code>'\n    }, {\n        name: '<code>page-change</code>',\n        description: 'Triggers when pagination page is changed',\n        parameters: '<code>page: Number</code>'\n    }, {\n        name: '<code>details-open</code>',\n        description: 'Triggers when details is opened',\n        parameters: '<code>row: Object</code>'\n    }, {\n        name: '<code>details-close</code>',\n        description: 'Triggers when details is closed',\n        parameters: '<code>row: Object</code>'\n    }],\n    methods: [{\n        name: '<code>initSort</code>',\n        description: 'Sort using <code>default-sort</code> prop parameters'\n    }, {\n        name: '<code>focus</code>',\n        description: 'Focus table element if is <code>focusable</code>'\n    }]\n}, {\n    title: 'Column',\n    props: [{\n        name: '<code>label</code>',\n        description: 'Column header text, also used to identify column if <code>custom-key</code> prop is missing',\n        type: 'String',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>custom-key</code>',\n        description: 'Unique identifier, use when <code>label</code> is missing or there are duplicate <code>label</code> names',\n        type: 'String, Number',\n        values: '—',\n        default: '<code>this.label</code>'\n    }, {\n        name: '<code>field</code>',\n        description: 'Property of the object the column is attributed, used for sorting',\n        type: 'String',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>meta</code>',\n        description: 'Meta prop to add anything, useful when creating custom headers',\n        type: 'Any',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>width</code>',\n        description: 'Column fixed width in pixels',\n        type: 'Number',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>numeric</code>',\n        description: 'Align the cell content to the right, sort icon on left',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>centered</code>',\n        description: 'Align the cell content to the center',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>sortable</code>',\n        description: 'Whether the column can be sorted',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>visible</code>',\n        description: 'Whether the column is visible',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>true</code>'\n    }, {\n        name: '<code>custom-sort</code>',\n        description: 'Custom sort method, works when is <code>sortable</code>',\n        type: 'Function (a: Object, b: Object, isAsc: Boolean)',\n        values: '—',\n        default: '—'\n    }]\n}]);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/160.52fd114071eb580c1ee4.js","export default [\n    {\n        title: 'Table',\n        props: [\n            {\n                name: '<code>data</code>',\n                description: 'Table data',\n                type: 'Array<Object>',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>columns</code>',\n                description: 'Table columns, you can also add <code>renderHtml: true</code> on each column object',\n                type: 'Array<Object> (same as TableColumns props)',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>default-sort</code>',\n                description: `Sets the default sort column and order — e.g. <code>['first_name', 'desc']</code>`,\n                type: 'String, Array',\n                values: '—',\n                default: 'order: <code>default-sort-direction</code> prop'\n            },\n            {\n                name: '<code>default-sort-direction</code>',\n                description: `Sets the default sort column direction on the first click`,\n                type: 'String',\n                values: '<code>asc</code>, <code>desc</code>',\n                default: '<code>asc</code>'\n            },\n            {\n                name: '<code>bordered</code>',\n                description: 'Border to all cells',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>narrowed</code>',\n                description: 'Makes the cells narrower',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>selected</code>',\n                description: 'Set which row is selected, use the <code>.sync</code> modifier to make it two-way binding',\n                type: 'Object',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>focusable</code>',\n                description: 'Table can be focused and user can navigate with keyboard arrows (require <code>selected.sync</code>) and rows are highlighted when hovering',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>hoverable</code>',\n                description: 'Rows are highlighted when hovering',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>checkable</code>',\n                description: 'Rows can be checked (multiple), checked rows will have a <code>.is-checked</code> class if you want to style',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>checked-rows</code>',\n                description: 'Set which rows are checked, use the <code>.sync</code> modifier to make it two-way binding',\n                type: 'Array<Object>',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>mobile-cards</code>',\n                description: 'Rows appears as cards on mobile (collapse rows)',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>true</code>'\n            },\n            {\n                name: '<code>backend-sorting</code>',\n                description: `Columns won't be sorted with Javascript, use with <code>sort</code> event to sort in your backend`,\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>backend-pagination</code>',\n                description: `Rows won't be paginated with Javascript, use with <code>page-change</code> event to paginate in your backend`,\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>total</code>',\n                description: `Total number of table data if <code>backend-pagination</code> is enabled`,\n                type: 'Number',\n                values: '—',\n                default: '<code>0</code>'\n            },\n            {\n                name: '<code>current-page</code>',\n                description: `Current page of table data (if <code>paginated</code>)`,\n                type: 'Number',\n                values: '—',\n                default: '<code>1</code>'\n            },\n            {\n                name: '<code>loading</code>',\n                description: 'Loading state',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>paginated</code>',\n                description: 'Adds pagination to the table',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>pagination-simple</code>',\n                description: 'Simple pagination (if <code>paginated</code>)',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>pagination-size</code>',\n                description: 'Pagination size (if <code>paginated</code>)',\n                type: 'String',\n                values: '<code>is-small</code>, <code>is-medium</code>, <code>is-large</code>',\n                default: '—'\n            },\n            {\n                name: '<code>per-page</code>',\n                description: 'How many rows per page (if <code>paginated</code>)',\n                type: 'Number',\n                values: '—',\n                default: '<code>20</code>'\n            },\n            {\n                name: '<code>row-class</code>',\n                description: 'Add a class to row (<code>&lt;tr&gt;</code> element) based on the return',\n                type: 'Function (row: Object, index: Number)',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>detailed</code>',\n                description: 'Allow row details (check scoped slots documentation)',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>opened-detailed</code>',\n                description: 'Allow pre-defined opened details. Ideal to open details via vue-router. (An unique key is required; check detail-key prop)',\n                type: 'Array',\n                values: '—',\n                default: '<code>[]</code>'\n            },\n            {\n              name: '<code>has-detailed-visible</code>',\n              description: 'Controls the visibility of the trigger that toggles the detailed rows.',\n              type: 'Function (row: Object)',\n              values: '—',\n              default: '<code>true</code>'\n            },\n            {\n                name: '<code>detail-key</code>',\n                description: 'Use an unique key of your data Object when use detailed or opened detailed. (id recommended)',\n                type: 'String',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>custom-is-checked</code>',\n                description: 'Custom method to verify if row is checked, works when is <code>checkable</code>. Useful for backend pagination',\n                type: 'Function (a: Object, b: Object)',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>is-row-checkable</code>',\n                description: 'Custom method to verify if a row is disabled, works when is <code>checkable</code>. ',\n                type: 'Function (row: Object)',\n                values: '—',\n                default: 'true'\n            }\n\n        ],\n        slots: [\n            {\n                name: 'default',\n                description: '<strong>Required</strong>, table body and header',\n                props: '<code>row: Object</code>, <code>index: Number</code>'\n            },\n            {\n                name: '<code>header</code>',\n                description: 'Table custom header',\n                props: '<code>column: Vue Object</code>, <code>index: Number</code>'\n            },\n            {\n                name: '<code>detail</code>',\n                description: 'Row detail (collapsible)',\n                props: '<code>row: Object</code>, <code>index: Number</code>'\n            },\n            {\n                name: '<code>empty</code>',\n                description: 'Replaces table body when <code>data</code> array prop is empty',\n                props: '—'\n            },\n            {\n                name: '<code>footer</code>',\n                description: 'Table custom footer',\n                props: '—'\n            },\n            {\n                name: '<code>bottom-left</code>',\n                description: 'Custom bottom-left (opposite side of pagination)',\n                props: '—'\n            }\n        ],\n        events: [\n            {\n                name: '<code>click</code>',\n                description: 'Triggers when a row is clicked',\n                parameters: '<code>row: Object</code>'\n            },\n            {\n                name: '<code>dblclick</code>',\n                description: 'Triggers when a row is double clicked',\n                parameters: '<code>row: Object</code>'\n            },\n            {\n                name: '<code>sort</code>',\n                description: 'Triggers when a sortable column is clicked',\n                parameters: '<code>field: String</code>, <code>order: String</code>'\n            },\n            {\n                name: '<code>select</code>',\n                description: 'Triggers when a row is selected',\n                parameters: '<code>row: Object</code>, <code>oldRow: Object</code>'\n            },\n            {\n                name: '<code>check</code>',\n                description: 'Triggers when the checkbox in a row is clicked and/or when the header checkbox is clicked',\n                parameters: '<code>checkedList: Array</code>, <code>row: Object</code>'\n            },\n            {\n                name: '<code>check-all</code>',\n                description: 'Triggers when the header checkbox is clicked',\n                parameters: '<code>checkedList: Array</code>'\n            },\n            {\n                name: '<code>page-change</code>',\n                description: 'Triggers when pagination page is changed',\n                parameters: '<code>page: Number</code>'\n            },\n            {\n                name: '<code>details-open</code>',\n                description: 'Triggers when details is opened',\n                parameters: '<code>row: Object</code>'\n            },\n            {\n                name: '<code>details-close</code>',\n                description: 'Triggers when details is closed',\n                parameters: '<code>row: Object</code>'\n            }\n        ],\n        methods: [\n            {\n                name: '<code>initSort</code>',\n                description: 'Sort using <code>default-sort</code> prop parameters'\n            },\n            {\n                name: '<code>focus</code>',\n                description: 'Focus table element if is <code>focusable</code>'\n            }\n        ]\n    },\n    {\n        title: 'Column',\n        props: [\n            {\n                name: '<code>label</code>',\n                description: 'Column header text, also used to identify column if <code>custom-key</code> prop is missing',\n                type: 'String',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>custom-key</code>',\n                description: 'Unique identifier, use when <code>label</code> is missing or there are duplicate <code>label</code> names',\n                type: 'String, Number',\n                values: '—',\n                default: '<code>this.label</code>'\n            },\n            {\n                name: '<code>field</code>',\n                description: 'Property of the object the column is attributed, used for sorting',\n                type: 'String',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>meta</code>',\n                description: 'Meta prop to add anything, useful when creating custom headers',\n                type: 'Any',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>width</code>',\n                description: 'Column fixed width in pixels',\n                type: 'Number',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>numeric</code>',\n                description: 'Align the cell content to the right, sort icon on left',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>centered</code>',\n                description: 'Align the cell content to the center',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>sortable</code>',\n                description: 'Whether the column can be sorted',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>visible</code>',\n                description: 'Whether the column is visible',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>true</code>'\n            },\n            {\n                name: '<code>custom-sort</code>',\n                description: 'Custom sort method, works when is <code>sortable</code>',\n                type: 'Function (a: Object, b: Object, isAsc: Boolean)',\n                values: '—',\n                default: '—'\n            }\n        ]\n    }\n]\n\n\n\n// WEBPACK FOOTER //\n// ./docs/pages/components/table/api/table.js"],"sourceRoot":""}