{"version":3,"sources":["webpack:///static/js/162.d2386146601a8116ba1d.js","webpack:///./docs/pages/components/snackbar/api/snackbar.js?eee1"],"names":["webpackJsonp","104","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","props","name","description","type","values","default"],"mappings":"AAAAA,cAAc,MAERC,IACA,SAAUC,EAAQC,EAAqBC,GAE7C,YACAC,QAAOC,eAAeH,EAAqB,cAAgBI,OAAO,ICNlEJ,EAAA,UAEQK,QAEQC,KAAM,oBACNC,YAAa,gGACbC,KAAM,SACNC,qWAIAC,QAAS,4BAGTJ,KAAM,uBACNC,YAAa,eACbC,KAAM,SACNC,OAAQ,IACRC,QAAS,MAGTJ,KAAM,wBACNC,YAAa,0CACbC,KAAM,SACNC,OAAQ,8JACRC,QAAS,iCAGTJ,KAAM,wBACNC,YAAa,qCACbC,KAAM,SACNC,OAAQ,IACRC,QAAS,sBAGTJ,KAAM,qBACNC,YAAa,uDACbC,KAAM,UACNC,OAAQ,IACRC,QAAS,sBAGTJ,KAAM,0BACNC,YAAa,uDACbC,KAAM,UACNC,OAAQ,IACRC,QAAS,uBAGTJ,KAAM,yBACNC,YAAa,0NACbC,KAAM,SACNC,OAAQ,IACRC,QAAS,sBAGTJ,KAAM,0BACNC,2EACAC,KAAM,SACNC,OAAQ,IACRC,QAAS,oBAGTJ,KAAM,wBACNC,YAAa,+CACbC,KAAM,WACNC,OAAQ,IACRC,QAAS","file":"static/js/162.d2386146601a8116ba1d.js","sourcesContent":["webpackJsonp([162],{\n\n/***/ 104:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony default export */ __webpack_exports__[\"default\"] = ([{\n    props: [{\n        name: '<code>type</code>',\n        description: 'Type (color) of the action button. Please notice that it is the name of the parent class also',\n        type: 'String',\n        values: '<code>is-white</code>, <code>is-black</code>, <code>is-light</code>,\\n                    <code>is-dark</code>, <code>is-primary</code>, <code>is-info</code>, <code>is-success</code>,\\n                    <code>is-warning</code>, <code>is-danger</code>,\\n                    and any other colors you\\'ve set in the <code>$colors</code> list on Sass',\n        default: '<code>is-success</code>'\n    }, {\n        name: '<code>message</code>',\n        description: 'Message text',\n        type: 'String',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>position</code>',\n        description: 'Which position the snackbar will appear',\n        type: 'String',\n        values: '<code>is-top-right</code>, <code>is-top</code>, <code>is-top-left</code>, <code>is-bottom-right</code>, <code>is-bottom</code>, <code>is-bottom-left</code>',\n        default: '<code>is-bottom-right</code>'\n    }, {\n        name: '<code>duration</code>',\n        description: 'Visibility duration in miliseconds',\n        type: 'Number',\n        values: '—',\n        default: '<code>3500</code>'\n    }, {\n        name: '<code>queue</code>',\n        description: 'If should queue with others notices (snackbar/toast)',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>true</code>'\n    }, {\n        name: '<code>indefinite</code>',\n        description: 'Show the Snackbar indefinitely until it is dismissed',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>container</code>',\n        description: 'DOM element the toast will be created on. Note that this also changes the <code>position</code> of the toast from <code>fixed</code> to <code>absolute</code>. Meaning that the container should be <code>fixed</code>.',\n        type: 'String',\n        values: '—',\n        default: '<code>body</code>'\n    }, {\n        name: '<code>actionText</code>',\n        description: 'Snackbar\\'s button text, set <code>null</code> for buttonless',\n        type: 'String',\n        values: '—',\n        default: '<code>OK</code>'\n    }, {\n        name: '<code>onAction</code>',\n        description: 'Callback function when the button is clicked',\n        type: 'Function',\n        values: '—',\n        default: '—'\n    }]\n}]);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/162.d2386146601a8116ba1d.js","export default [\n    {\n        props: [\n            {\n                name: '<code>type</code>',\n                description: 'Type (color) of the action button. Please notice that it is the name of the parent class also',\n                type: 'String',\n                values: `<code>is-white</code>, <code>is-black</code>, <code>is-light</code>,\n                    <code>is-dark</code>, <code>is-primary</code>, <code>is-info</code>, <code>is-success</code>,\n                    <code>is-warning</code>, <code>is-danger</code>,\n                    and any other colors you've set in the <code>$colors</code> list on Sass`,\n                default: '<code>is-success</code>'\n            },\n            {\n                name: '<code>message</code>',\n                description: 'Message text',\n                type: 'String',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>position</code>',\n                description: 'Which position the snackbar will appear',\n                type: 'String',\n                values: '<code>is-top-right</code>, <code>is-top</code>, <code>is-top-left</code>, <code>is-bottom-right</code>, <code>is-bottom</code>, <code>is-bottom-left</code>',\n                default: '<code>is-bottom-right</code>'\n            },\n            {\n                name: '<code>duration</code>',\n                description: 'Visibility duration in miliseconds',\n                type: 'Number',\n                values: '—',\n                default: '<code>3500</code>'\n            },\n            {\n                name: '<code>queue</code>',\n                description: 'If should queue with others notices (snackbar/toast)',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>true</code>'\n            },\n            {\n                name: '<code>indefinite</code>',\n                description: 'Show the Snackbar indefinitely until it is dismissed',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>container</code>',\n                description: 'DOM element the toast will be created on. Note that this also changes the <code>position</code> of the toast from <code>fixed</code> to <code>absolute</code>. Meaning that the container should be <code>fixed</code>.',\n                type: 'String',\n                values: '—',\n                default: '<code>body</code>'\n            },\n            {\n                name: '<code>actionText</code>',\n                description: `Snackbar's button text, set <code>null</code> for buttonless`,\n                type: 'String',\n                values: '—',\n                default: '<code>OK</code>'\n            },\n            {\n                name: '<code>onAction</code>',\n                description: 'Callback function when the button is clicked',\n                type: 'Function',\n                values: '—',\n                default: '—'\n            }\n        ]\n    }\n]\n\n\n\n// WEBPACK FOOTER //\n// ./docs/pages/components/snackbar/api/snackbar.js"],"sourceRoot":""}