{"version":3,"sources":["webpack:///static/js/27.edfebb59c5e98c3e38f6.js","webpack:///./docs/pages/extensions/cleavejs/examples/ExFormat.vue","webpack:///./docs/pages/extensions/cleavejs/Cleavejs.vue?bde7","webpack:///./docs/pages/extensions/cleavejs/examples/ExFormat.vue?b21f","webpack:///./docs/pages/extensions/cleavejs/Cleavejs.vue","webpack:///ExFormat.vue","webpack:///./~/cleave.js/dist/cleave.js","webpack:///./docs/pages/extensions/cleavejs/examples/ExFormat.vue?dee8","webpack:///Cleavejs.vue"],"names":["webpackJsonp","1046","module","exports","1079","render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_m","attrs","component","ExFormat","code","ExFormatCode","vertical","type","expanded","staticRenderFns","href","target","231","__webpack_require__","Component","262","755","__webpack_exports__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_cleave_js__","__WEBPACK_IMPORTED_MODULE_0_cleave_js___default","n","cleave","name","bind","el","binding","input","querySelector","_vCleave","a","update","destroy","unbind","directives","data","rawValue","masks","creditCard","numeral","numeralThousandsGroupStyle","prefix","custom","delimiters","blocks","numericOnly","methods","getRawValue","event","758","root","factory","modules","moduleId","installedModules","id","loaded","call","m","c","p","global","Cleave","element","opts","owner","document","length","Error","initValue","properties","DefaultProperties","assign","init","prototype","pps","phone","date","blocksLength","onInput","maxLength","Util","getMaxLength","isAndroid","lastInputValue","onChangeListener","onChange","onKeyDownListener","onKeyDown","onCutListener","onCut","onCopyListener","onCopy","addEventListener","initPhoneFormatter","initDateFormatter","initNumeralFormatter","numeralFormatter","NumeralFormatter","numeralDecimalMark","numeralIntegerScale","numeralDecimalScale","numeralPositiveOnly","stripLeadingZeroes","delimiter","dateFormatter","DateFormatter","datePattern","getBlocks","phoneFormatter","PhoneFormatter","AsYouTypeFormatter","phoneRegionCode","ex","charCode","which","keyCode","currentValue","isAndroidBackspaceKeydown","isDelimiter","slice","delimiterLength","backspace","e","copyClipboardData","inputValue","textToCopy","copyDelimiter","stripDelimiters","clipboardData","setData","window","preventDefault","headStr","result","format","updateValueState","getValidatedDate","getPrefixStrippedValue","prefixLength","strip","uppercase","toUpperCase","lowercase","toLowerCase","updateCreditCardPropsByValue","getFormattedValue","creditCardInfo","CreditCardDetector","getInfo","creditCardStrictMode","creditCardType","onCreditCardTypeChanged","setCurrentSelection","endPos","oldValue","elem","createTextRange","range","move","select","setSelectionRange","selectionEnd","setTimeout","setPhoneRegionCode","setRawValue","undefined","toString","replace","rawValueTrimPrefix","removeEventListener","groupStyle","thousand","delimiterRE","RegExp","lakh","wan","parts","partInteger","partDecimal","indexOf","split","initBlocks","forEach","push","index","sub","sub0","rest","parseInt","getFixedDateString","day","month","year","dayIndex","monthIndex","yearIndex","dayStartIndex","monthStartIndex","yearStartIndex","getFixedDate","reduce","previous","current","addLeadingZero","Math","min","isLeapYear","number","formatter","setFormatter","phoneNumber","clear","validated","i","iMax","inputDigit","charAt","test","uatp","amex","diners","discover","mastercard","dankort","instapayment","jcb","maestro","visa","general","generalStrict","re","strictMode","noop","letter","some","getDelimiterREByDelimiter","str","diffIndex","getFirstDiffIndex","prev","currentDelimiter","multipleDelimiters","navigator","userAgent","currentInputValue","843","rawName","expression","placeholder","addons","nativeOn","$event","model","callback","$$v","_s","923","__WEBPACK_IMPORTED_MODULE_0__examples_ExFormat__","__WEBPACK_IMPORTED_MODULE_0__examples_ExFormat___default","__WEBPACK_IMPORTED_MODULE_1__raw_loader_examples_ExFormat__","__WEBPACK_IMPORTED_MODULE_1__raw_loader_examples_ExFormat___default"],"mappings":"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","file":"static/js/27.edfebb59c5e98c3e38f6.js","sourcesContent":["webpackJsonp([27,34],{\n\n/***/ 1046:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<template>\\n    <section>\\n        <b-field>\\n            <b-input\\n                placeholder=\\\"Credit Card\\\"\\n                v-cleave=\\\"masks.creditCard\\\">\\n            </b-input>\\n        </b-field>\\n\\n        <b-field>\\n            <b-input\\n                placeholder=\\\"Numeral\\\"\\n                v-cleave=\\\"masks.numeral\\\">\\n            </b-input>\\n        </b-field>\\n\\n        <b-field :addons=\\\"false\\\">\\n            <b-input\\n                placeholder=\\\"Custom\\\"\\n                v-model=\\\"value\\\"\\n                v-cleave=\\\"masks.custom\\\"\\n                @input.native=\\\"getRawValue\\\">\\n            </b-input>\\n            <p><b>Formatted value (v-model)</b>: {{ value }}</p>\\n            <p><b>Raw value</b>: {{ rawValue }}</p>\\n        </b-field>\\n    </section>\\n</template>\\n\\n<script>\\n    // You have to install cleave.js to use it:\\n    // 'npm install cleave.js'\\n    import Cleave from 'cleave.js'\\n\\n    /**\\n     * We add a new instance of Cleave when the element\\n     * is bound or updated, and destroy it when it's unbound.\\n     */\\n    const cleave = {\\n        name: 'cleave',\\n        bind(el, binding) {\\n            const input = el.querySelector('input')\\n            input._vCleave = new Cleave(input, binding.value)\\n        },\\n        update(el, binding) {\\n            const input = el.querySelector('input')\\n            input._vCleave.destroy()\\n            input._vCleave = new Cleave(input, binding.value)\\n        },\\n        unbind(el) {\\n            const input = el.querySelector('input')\\n            input._vCleave.destroy()\\n        }\\n    }\\n\\n    export default {\\n        directives: { cleave },\\n        data() {\\n            return {\\n                value: '',\\n                rawValue: '',\\n                masks: {\\n                    creditCard: { creditCard: true },\\n                    numeral: {\\n                        numeral: true,\\n                        numeralThousandsGroupStyle: 'thousand',\\n                        prefix: '$ '\\n                    },\\n                    custom: {\\n                        delimiters: ['.', '.', '-'],\\n                        blocks: [3, 3, 3, 2],\\n                        numericOnly: true\\n                    }\\n                }\\n            }\\n        },\\n        methods: {\\n            getRawValue(event) {\\n                this.rawValue = event.target._vCleave.getRawValue()\\n            }\\n        }\\n    }\\n</script>\\n\"\n\n/***/ }),\n\n/***/ 1079:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"default-container\"\n  }, [_c('h1', {\n    staticClass: \"title is-spaced\"\n  }, [_vm._v(\"Cleave.js \")]), _vm._v(\" \"), _c('h2', {\n    staticClass: \"subtitle\"\n  }, [_vm._v(\"Format input text while you type — as a Vue directive\")]), _vm._v(\" \"), _vm._m(0), _vm._v(\" \"), _c('Example', {\n    attrs: {\n      \"component\": _vm.ExFormat,\n      \"code\": _vm.ExFormatCode,\n      \"vertical\": \"\"\n    }\n  }, [_c('b-message', {\n    attrs: {\n      \"type\": \"is-info\"\n    }\n  }, [_c('p', [_c('strong', [_vm._v(\"Cleave.js is not included in Buefy\")]), _vm._v(\", you have to install it:\")]), _vm._v(\" \"), _c('CodeView', {\n    attrs: {\n      \"code\": \"npm install cleave.js\",\n      \"expanded\": \"\"\n    }\n  })], 1)], 1)], 1)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"buttons\"\n  }, [_c('a', {\n    staticClass: \"button\",\n    attrs: {\n      \"href\": \"https://nosir.github.io/cleave.js\",\n      \"target\": \"_blank\"\n    }\n  }, [_vm._v(\"\\n            Website\\n        \")]), _vm._v(\" \"), _c('a', {\n    staticClass: \"button\",\n    attrs: {\n      \"href\": \"https://github.com/nosir/cleave.js/blob/master/doc/options.md\",\n      \"target\": \"_blank\"\n    }\n  }, [_vm._v(\"\\n            Docs\\n        \")])])\n}]}\n\n/***/ }),\n\n/***/ 231:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(755),\n  /* template */\n  __webpack_require__(843),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 262:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(923),\n  /* template */\n  __webpack_require__(1079),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 755:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_cleave_js__ = __webpack_require__(758);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_cleave_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_cleave_js__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// You have to install cleave.js to use it:\n// 'npm install cleave.js'\n\n\n/**\n * We add a new instance of Cleave when the element\n * is bound or updated, and destroy it when it's unbound.\n */\nvar cleave = {\n    name: 'cleave',\n    bind: function bind(el, binding) {\n        var input = el.querySelector('input');\n        input._vCleave = new __WEBPACK_IMPORTED_MODULE_0_cleave_js___default.a(input, binding.value);\n    },\n    update: function update(el, binding) {\n        var input = el.querySelector('input');\n        input._vCleave.destroy();\n        input._vCleave = new __WEBPACK_IMPORTED_MODULE_0_cleave_js___default.a(input, binding.value);\n    },\n    unbind: function unbind(el) {\n        var input = el.querySelector('input');\n        input._vCleave.destroy();\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    directives: { cleave: cleave },\n    data: function data() {\n        return {\n            value: '',\n            rawValue: '',\n            masks: {\n                creditCard: { creditCard: true },\n                numeral: {\n                    numeral: true,\n                    numeralThousandsGroupStyle: 'thousand',\n                    prefix: '$ '\n                },\n                custom: {\n                    delimiters: ['.', '.', '-'],\n                    blocks: [3, 3, 3, 2],\n                    numericOnly: true\n                }\n            }\n        };\n    },\n\n    methods: {\n        getRawValue: function getRawValue(event) {\n            this.rawValue = event.target._vCleave.getRawValue();\n        }\n    }\n});\n\n/***/ }),\n\n/***/ 758:\n/***/ (function(module, exports, __webpack_require__) {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Cleave\"] = factory();\n\telse\n\t\troot[\"Cleave\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\n\t/**\n\t * Construct a new Cleave instance by passing the configuration object\n\t *\n\t * @param {String / HTMLElement} element\n\t * @param {Object} opts\n\t */\n\tvar Cleave = function (element, opts) {\n\t    var owner = this;\n\n\t    if (typeof element === 'string') {\n\t        owner.element = document.querySelector(element);\n\t    } else {\n\t        owner.element = ((typeof element.length !== 'undefined') && element.length > 0) ? element[0] : element;\n\t    }\n\n\t    if (!owner.element) {\n\t        throw new Error('[cleave.js] Please check the element');\n\t    }\n\n\t    opts.initValue = owner.element.value;\n\n\t    owner.properties = Cleave.DefaultProperties.assign({}, opts);\n\n\t    owner.init();\n\t};\n\n\tCleave.prototype = {\n\t    init: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        // no need to use this lib\n\t        if (!pps.numeral && !pps.phone && !pps.creditCard && !pps.date && (pps.blocksLength === 0 && !pps.prefix)) {\n\t            owner.onInput(pps.initValue);\n\n\t            return;\n\t        }\n\n\t        pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);\n\n\t        owner.isAndroid = Cleave.Util.isAndroid();\n\t        owner.lastInputValue = '';\n\n\t        owner.onChangeListener = owner.onChange.bind(owner);\n\t        owner.onKeyDownListener = owner.onKeyDown.bind(owner);\n\t        owner.onCutListener = owner.onCut.bind(owner);\n\t        owner.onCopyListener = owner.onCopy.bind(owner);\n\n\t        owner.element.addEventListener('input', owner.onChangeListener);\n\t        owner.element.addEventListener('keydown', owner.onKeyDownListener);\n\t        owner.element.addEventListener('cut', owner.onCutListener);\n\t        owner.element.addEventListener('copy', owner.onCopyListener);\n\n\n\t        owner.initPhoneFormatter();\n\t        owner.initDateFormatter();\n\t        owner.initNumeralFormatter();\n\n\t        owner.onInput(pps.initValue);\n\t    },\n\n\t    initNumeralFormatter: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        if (!pps.numeral) {\n\t            return;\n\t        }\n\n\t        pps.numeralFormatter = new Cleave.NumeralFormatter(\n\t            pps.numeralDecimalMark,\n\t            pps.numeralIntegerScale,\n\t            pps.numeralDecimalScale,\n\t            pps.numeralThousandsGroupStyle,\n\t            pps.numeralPositiveOnly,\n\t            pps.stripLeadingZeroes,\n\t            pps.delimiter\n\t        );\n\t    },\n\n\t    initDateFormatter: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        if (!pps.date) {\n\t            return;\n\t        }\n\n\t        pps.dateFormatter = new Cleave.DateFormatter(pps.datePattern);\n\t        pps.blocks = pps.dateFormatter.getBlocks();\n\t        pps.blocksLength = pps.blocks.length;\n\t        pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);\n\t    },\n\n\t    initPhoneFormatter: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        if (!pps.phone) {\n\t            return;\n\t        }\n\n\t        // Cleave.AsYouTypeFormatter should be provided by\n\t        // external google closure lib\n\t        try {\n\t            pps.phoneFormatter = new Cleave.PhoneFormatter(\n\t                new pps.root.Cleave.AsYouTypeFormatter(pps.phoneRegionCode),\n\t                pps.delimiter\n\t            );\n\t        } catch (ex) {\n\t            throw new Error('[cleave.js] Please include phone-type-formatter.{country}.js lib');\n\t        }\n\t    },\n\n\t    onKeyDown: function (event) {\n\t        var owner = this, pps = owner.properties,\n\t            charCode = event.which || event.keyCode,\n\t            Util = Cleave.Util,\n\t            currentValue = owner.element.value;\n\n\t        if (Util.isAndroidBackspaceKeydown(owner.lastInputValue, currentValue)) {\n\t            charCode = 8;\n\t        }\n\n\t        owner.lastInputValue = currentValue;\n\n\t        // hit backspace when last character is delimiter\n\t        if (charCode === 8 && Util.isDelimiter(currentValue.slice(-pps.delimiterLength), pps.delimiter, pps.delimiters)) {\n\t            pps.backspace = true;\n\n\t            return;\n\t        }\n\n\t        pps.backspace = false;\n\t    },\n\n\t    onChange: function () {\n\t        this.onInput(this.element.value);\n\t    },\n\n\t    onCut: function (e) {\n\t        this.copyClipboardData(e);\n\t        this.onInput('');\n\t    },\n\n\t    onCopy: function (e) {\n\t        this.copyClipboardData(e);\n\t    },\n\n\t    copyClipboardData: function (e) {\n\t        var owner = this,\n\t            pps = owner.properties,\n\t            Util = Cleave.Util,\n\t            inputValue = owner.element.value,\n\t            textToCopy = '';\n\n\t        if (!pps.copyDelimiter) {\n\t            textToCopy = Util.stripDelimiters(inputValue, pps.delimiter, pps.delimiters);\n\t        } else {\n\t            textToCopy = inputValue;\n\t        }\n\n\t        try {\n\t            if (e.clipboardData) {\n\t                e.clipboardData.setData('Text', textToCopy);\n\t            } else {\n\t                window.clipboardData.setData('Text', textToCopy);\n\t            }\n\n\t            e.preventDefault();\n\t        } catch (ex) {\n\t            //  empty\n\t        }\n\t    },\n\n\t    onInput: function (value) {\n\t        var owner = this, pps = owner.properties,\n\t            Util = Cleave.Util;\n\n\t        // case 1: delete one more character \"4\"\n\t        // 1234*| -> hit backspace -> 123|\n\t        // case 2: last character is not delimiter which is:\n\t        // 12|34* -> hit backspace -> 1|34*\n\t        // note: no need to apply this for numeral mode\n\t        if (!pps.numeral && pps.backspace && !Util.isDelimiter(value.slice(-pps.delimiterLength), pps.delimiter, pps.delimiters)) {\n\t            value = Util.headStr(value, value.length - pps.delimiterLength);\n\t        }\n\n\t        // phone formatter\n\t        if (pps.phone) {\n\t            pps.result = pps.phoneFormatter.format(value);\n\t            owner.updateValueState();\n\n\t            return;\n\t        }\n\n\t        // numeral formatter\n\t        if (pps.numeral) {\n\t            pps.result = pps.prefix + pps.numeralFormatter.format(value);\n\t            owner.updateValueState();\n\n\t            return;\n\t        }\n\n\t        // date\n\t        if (pps.date) {\n\t            value = pps.dateFormatter.getValidatedDate(value);\n\t        }\n\n\t        // strip delimiters\n\t        value = Util.stripDelimiters(value, pps.delimiter, pps.delimiters);\n\n\t        // strip prefix\n\t        value = Util.getPrefixStrippedValue(value, pps.prefix, pps.prefixLength);\n\n\t        // strip non-numeric characters\n\t        value = pps.numericOnly ? Util.strip(value, /[^\\d]/g) : value;\n\n\t        // convert case\n\t        value = pps.uppercase ? value.toUpperCase() : value;\n\t        value = pps.lowercase ? value.toLowerCase() : value;\n\n\t        // prefix\n\t        if (pps.prefix) {\n\t            value = pps.prefix + value;\n\n\t            // no blocks specified, no need to do formatting\n\t            if (pps.blocksLength === 0) {\n\t                pps.result = value;\n\t                owner.updateValueState();\n\n\t                return;\n\t            }\n\t        }\n\n\t        // update credit card props\n\t        if (pps.creditCard) {\n\t            owner.updateCreditCardPropsByValue(value);\n\t        }\n\n\t        // strip over length characters\n\t        value = Util.headStr(value, pps.maxLength);\n\n\t        // apply blocks\n\t        pps.result = Util.getFormattedValue(value, pps.blocks, pps.blocksLength, pps.delimiter, pps.delimiters);\n\n\t        owner.updateValueState();\n\t    },\n\n\t    updateCreditCardPropsByValue: function (value) {\n\t        var owner = this, pps = owner.properties,\n\t            Util = Cleave.Util,\n\t            creditCardInfo;\n\n\t        // At least one of the first 4 characters has changed\n\t        if (Util.headStr(pps.result, 4) === Util.headStr(value, 4)) {\n\t            return;\n\t        }\n\n\t        creditCardInfo = Cleave.CreditCardDetector.getInfo(value, pps.creditCardStrictMode);\n\n\t        pps.blocks = creditCardInfo.blocks;\n\t        pps.blocksLength = pps.blocks.length;\n\t        pps.maxLength = Util.getMaxLength(pps.blocks);\n\n\t        // credit card type changed\n\t        if (pps.creditCardType !== creditCardInfo.type) {\n\t            pps.creditCardType = creditCardInfo.type;\n\n\t            pps.onCreditCardTypeChanged.call(owner, pps.creditCardType);\n\t        }\n\t    },\n\n\t    setCurrentSelection: function (endPos, oldValue) {\n\t        var elem = this.element;\n\n\t        // If cursor was at the end of value, just place it back.\n\t        // Because new value could contain additional chars.\n\t        if (oldValue.length === endPos) {\n\t            return;\n\t        }\n\n\t        if (elem.createTextRange) {\n\t            var range = elem.createTextRange();\n\n\t            range.move('character', endPos);\n\t            range.select();\n\t        } else {\n\t            elem.setSelectionRange(endPos, endPos);\n\t        }\n\t    },\n\n\t    updateValueState: function () {\n\t        var owner = this;\n\t        var endPos = owner.element.selectionEnd;\n\t        var oldValue = owner.element.value;\n\n\t        // fix Android browser type=\"text\" input field\n\t        // cursor not jumping issue\n\t        if (owner.isAndroid) {\n\t            window.setTimeout(function () {\n\t                owner.element.value = owner.properties.result;\n\t                owner.setCurrentSelection(endPos, oldValue);\n\t            }, 1);\n\n\t            return;\n\t        }\n\n\t        owner.element.value = owner.properties.result;\n\t        owner.setCurrentSelection(endPos, oldValue);\n\t    },\n\n\t    setPhoneRegionCode: function (phoneRegionCode) {\n\t        var owner = this, pps = owner.properties;\n\n\t        pps.phoneRegionCode = phoneRegionCode;\n\t        owner.initPhoneFormatter();\n\t        owner.onChange();\n\t    },\n\n\t    setRawValue: function (value) {\n\t        var owner = this, pps = owner.properties;\n\n\t        value = value !== undefined && value !== null ? value.toString() : '';\n\n\t        if (pps.numeral) {\n\t            value = value.replace('.', pps.numeralDecimalMark);\n\t        }\n\n\t        owner.element.value = value;\n\t        owner.onInput(value);\n\t    },\n\n\t    getRawValue: function () {\n\t        var owner = this,\n\t            pps = owner.properties,\n\t            Util = Cleave.Util,\n\t            rawValue = owner.element.value;\n\n\t        if (pps.rawValueTrimPrefix) {\n\t            rawValue = Util.getPrefixStrippedValue(rawValue, pps.prefix, pps.prefixLength);\n\t        }\n\n\t        if (pps.numeral) {\n\t            rawValue = pps.numeralFormatter.getRawValue(rawValue);\n\t        } else {\n\t            rawValue = Util.stripDelimiters(rawValue, pps.delimiter, pps.delimiters);\n\t        }\n\n\t        return rawValue;\n\t    },\n\n\t    getFormattedValue: function () {\n\t        return this.element.value;\n\t    },\n\n\t    destroy: function () {\n\t        var owner = this;\n\n\t        owner.element.removeEventListener('input', owner.onChangeListener);\n\t        owner.element.removeEventListener('keydown', owner.onKeyDownListener);\n\t        owner.element.removeEventListener('cut', owner.onCutListener);\n\t        owner.element.removeEventListener('copy', owner.onCopyListener);\n\t    },\n\n\t    toString: function () {\n\t        return '[Cleave Object]';\n\t    }\n\t};\n\n\tCleave.NumeralFormatter = __webpack_require__(1);\n\tCleave.DateFormatter = __webpack_require__(2);\n\tCleave.PhoneFormatter = __webpack_require__(3);\n\tCleave.CreditCardDetector = __webpack_require__(4);\n\tCleave.Util = __webpack_require__(5);\n\tCleave.DefaultProperties = __webpack_require__(6);\n\n\t// for angular directive\n\t((typeof global === 'object' && global) ? global : window)['Cleave'] = Cleave;\n\n\t// CommonJS\n\tmodule.exports = Cleave;\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tvar NumeralFormatter = function (numeralDecimalMark,\n\t                                 numeralIntegerScale,\n\t                                 numeralDecimalScale,\n\t                                 numeralThousandsGroupStyle,\n\t                                 numeralPositiveOnly,\n\t                                 stripLeadingZeroes,\n\t                                 delimiter) {\n\t    var owner = this;\n\n\t    owner.numeralDecimalMark = numeralDecimalMark || '.';\n\t    owner.numeralIntegerScale = numeralIntegerScale > 0 ? numeralIntegerScale : 0;\n\t    owner.numeralDecimalScale = numeralDecimalScale >= 0 ? numeralDecimalScale : 2;\n\t    owner.numeralThousandsGroupStyle = numeralThousandsGroupStyle || NumeralFormatter.groupStyle.thousand;\n\t    owner.numeralPositiveOnly = !!numeralPositiveOnly;\n\t    owner.stripLeadingZeroes = (undefined == stripLeadingZeroes) ? true : stripLeadingZeroes;\n\t    owner.delimiter = (delimiter || delimiter === '') ? delimiter : ',';\n\t    owner.delimiterRE = delimiter ? new RegExp('\\\\' + delimiter, 'g') : '';\n\t};\n\n\tNumeralFormatter.groupStyle = {\n\t    thousand: 'thousand',\n\t    lakh:     'lakh',\n\t    wan:      'wan'\n\t};\n\n\tNumeralFormatter.prototype = {\n\t    getRawValue: function (value) {\n\t        return value.replace(this.delimiterRE, '').replace(this.numeralDecimalMark, '.');\n\t    },\n\n\t    format: function (value) {\n\t        var owner = this, parts, partInteger, partDecimal = '';\n\n\t        // strip alphabet letters\n\t        value = value.replace(/[A-Za-z]/g, '')\n\t            // replace the first decimal mark with reserved placeholder\n\t            .replace(owner.numeralDecimalMark, 'M')\n\n\t            // strip non numeric letters except minus and \"M\"\n\t            // this is to ensure prefix has been stripped\n\t            .replace(/[^\\dM-]/g, '')\n\n\t            // replace the leading minus with reserved placeholder\n\t            .replace(/^\\-/, 'N')\n\n\t            // strip the other minus sign (if present)\n\t            .replace(/\\-/g, '')\n\n\t            // replace the minus sign (if present)\n\t            .replace('N', owner.numeralPositiveOnly ? '' : '-')\n\n\t            // replace decimal mark\n\t            .replace('M', owner.numeralDecimalMark);\n\n\t        // strip any leading zeros\n\t        if (owner.stripLeadingZeroes) {\n\t            value = value.replace(/^(-)?0+(?=\\d)/, '$1');\n\t        }\n\n\t        partInteger = value;\n\n\t        if (value.indexOf(owner.numeralDecimalMark) >= 0) {\n\t            parts = value.split(owner.numeralDecimalMark);\n\t            partInteger = parts[0];\n\t            partDecimal = owner.numeralDecimalMark + parts[1].slice(0, owner.numeralDecimalScale);\n\t        }\n\n\t        if (owner.numeralIntegerScale > 0) {\n\t          partInteger = partInteger.slice(0, owner.numeralIntegerScale + (value.slice(0, 1) === '-' ? 1 : 0));\n\t        }\n\n\t        switch (owner.numeralThousandsGroupStyle) {\n\t        case NumeralFormatter.groupStyle.lakh:\n\t            partInteger = partInteger.replace(/(\\d)(?=(\\d\\d)+\\d$)/g, '$1' + owner.delimiter);\n\n\t            break;\n\n\t        case NumeralFormatter.groupStyle.wan:\n\t            partInteger = partInteger.replace(/(\\d)(?=(\\d{4})+$)/g, '$1' + owner.delimiter);\n\n\t            break;\n\n\t        default:\n\t            partInteger = partInteger.replace(/(\\d)(?=(\\d{3})+$)/g, '$1' + owner.delimiter);\n\t        }\n\n\t        return partInteger.toString() + (owner.numeralDecimalScale > 0 ? partDecimal.toString() : '');\n\t    }\n\t};\n\n\tmodule.exports = NumeralFormatter;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tvar DateFormatter = function (datePattern) {\n\t    var owner = this;\n\n\t    owner.blocks = [];\n\t    owner.datePattern = datePattern;\n\t    owner.initBlocks();\n\t};\n\n\tDateFormatter.prototype = {\n\t    initBlocks: function () {\n\t        var owner = this;\n\t        owner.datePattern.forEach(function (value) {\n\t            if (value === 'Y') {\n\t                owner.blocks.push(4);\n\t            } else {\n\t                owner.blocks.push(2);\n\t            }\n\t        });\n\t    },\n\n\t    getBlocks: function () {\n\t        return this.blocks;\n\t    },\n\n\t    getValidatedDate: function (value) {\n\t        var owner = this, result = '';\n\n\t        value = value.replace(/[^\\d]/g, '');\n\n\t        owner.blocks.forEach(function (length, index) {\n\t            if (value.length > 0) {\n\t                var sub = value.slice(0, length),\n\t                    sub0 = sub.slice(0, 1),\n\t                    rest = value.slice(length);\n\n\t                switch (owner.datePattern[index]) {\n\t                case 'd':\n\t                    if (sub === '00') {\n\t                        sub = '01';\n\t                    } else if (parseInt(sub0, 10) > 3) {\n\t                        sub = '0' + sub0;\n\t                    } else if (parseInt(sub, 10) > 31) {\n\t                        sub = '31';\n\t                    }\n\n\t                    break;\n\n\t                case 'm':\n\t                    if (sub === '00') {\n\t                        sub = '01';\n\t                    } else if (parseInt(sub0, 10) > 1) {\n\t                        sub = '0' + sub0;\n\t                    } else if (parseInt(sub, 10) > 12) {\n\t                        sub = '12';\n\t                    }\n\n\t                    break;\n\t                }\n\n\t                result += sub;\n\n\t                // update remaining string\n\t                value = rest;\n\t            }\n\t        });\n\n\t        return this.getFixedDateString(result);\n\t    },\n\n\t    getFixedDateString: function (value) {\n\t        var owner = this, datePattern = owner.datePattern, date = [],\n\t            dayIndex = 0, monthIndex = 0, yearIndex = 0,\n\t            dayStartIndex = 0, monthStartIndex = 0, yearStartIndex = 0,\n\t            day, month, year;\n\n\t        // mm-dd || dd-mm\n\t        if (value.length === 4 && datePattern[0].toLowerCase() !== 'y' && datePattern[1].toLowerCase() !== 'y') {\n\t            dayStartIndex = datePattern[0] === 'd' ? 0 : 2;\n\t            monthStartIndex = 2 - dayStartIndex;\n\t            day = parseInt(value.slice(dayStartIndex, dayStartIndex + 2), 10);\n\t            month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);\n\n\t            date = this.getFixedDate(day, month, 0);\n\t        }\n\n\t        // yyyy-mm-dd || yyyy-dd-mm || mm-dd-yyyy || dd-mm-yyyy || dd-yyyy-mm || mm-yyyy-dd\n\t        if (value.length === 8) {\n\t            datePattern.forEach(function (type, index) {\n\t                switch (type) {\n\t                case 'd':\n\t                    dayIndex = index;\n\t                    break;\n\t                case 'm':\n\t                    monthIndex = index;\n\t                    break;\n\t                default:\n\t                    yearIndex = index;\n\t                    break;\n\t                }\n\t            });\n\n\t            yearStartIndex = yearIndex * 2;\n\t            dayStartIndex = (dayIndex <= yearIndex) ? dayIndex * 2 : (dayIndex * 2 + 2);\n\t            monthStartIndex = (monthIndex <= yearIndex) ? monthIndex * 2 : (monthIndex * 2 + 2);\n\n\t            day = parseInt(value.slice(dayStartIndex, dayStartIndex + 2), 10);\n\t            month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);\n\t            year = parseInt(value.slice(yearStartIndex, yearStartIndex + 4), 10);\n\n\t            date = this.getFixedDate(day, month, year);\n\t        }\n\n\t        return date.length === 0 ? value : datePattern.reduce(function (previous, current) {\n\t            switch (current) {\n\t            case 'd':\n\t                return previous + owner.addLeadingZero(date[0]);\n\t            case 'm':\n\t                return previous + owner.addLeadingZero(date[1]);\n\t            default:\n\t                return previous + '' + (date[2] || '');\n\t            }\n\t        }, '');\n\t    },\n\n\t    getFixedDate: function (day, month, year) {\n\t        day = Math.min(day, 31);\n\t        month = Math.min(month, 12);\n\t        year = parseInt((year || 0), 10);\n\n\t        if ((month < 7 && month % 2 === 0) || (month > 8 && month % 2 === 1)) {\n\t            day = Math.min(day, month === 2 ? (this.isLeapYear(year) ? 29 : 28) : 30);\n\t        }\n\n\t        return [day, month, year];\n\t    },\n\n\t    isLeapYear: function (year) {\n\t        return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n\t    },\n\n\t    addLeadingZero: function (number) {\n\t        return (number < 10 ? '0' : '') + number;\n\t    }\n\t};\n\n\tmodule.exports = DateFormatter;\n\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tvar PhoneFormatter = function (formatter, delimiter) {\n\t    var owner = this;\n\n\t    owner.delimiter = (delimiter || delimiter === '') ? delimiter : ' ';\n\t    owner.delimiterRE = delimiter ? new RegExp('\\\\' + delimiter, 'g') : '';\n\n\t    owner.formatter = formatter;\n\t};\n\n\tPhoneFormatter.prototype = {\n\t    setFormatter: function (formatter) {\n\t        this.formatter = formatter;\n\t    },\n\n\t    format: function (phoneNumber) {\n\t        var owner = this;\n\n\t        owner.formatter.clear();\n\n\t        // only keep number and +\n\t        phoneNumber = phoneNumber.replace(/[^\\d+]/g, '');\n\n\t        // strip delimiter\n\t        phoneNumber = phoneNumber.replace(owner.delimiterRE, '');\n\n\t        var result = '', current, validated = false;\n\n\t        for (var i = 0, iMax = phoneNumber.length; i < iMax; i++) {\n\t            current = owner.formatter.inputDigit(phoneNumber.charAt(i));\n\n\t            // has ()- or space inside\n\t            if (/[\\s()-]/g.test(current)) {\n\t                result = current;\n\n\t                validated = true;\n\t            } else {\n\t                if (!validated) {\n\t                    result = current;\n\t                }\n\t                // else: over length input\n\t                // it turns to invalid number again\n\t            }\n\t        }\n\n\t        // strip ()\n\t        // e.g. US: 7161234567 returns (716) 123-4567\n\t        result = result.replace(/[()]/g, '');\n\t        // replace library delimiter with user customized delimiter\n\t        result = result.replace(/[\\s-]/g, owner.delimiter);\n\n\t        return result;\n\t    }\n\t};\n\n\tmodule.exports = PhoneFormatter;\n\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tvar CreditCardDetector = {\n\t    blocks: {\n\t        uatp:          [4, 5, 6],\n\t        amex:          [4, 6, 5],\n\t        diners:        [4, 6, 4],\n\t        discover:      [4, 4, 4, 4],\n\t        mastercard:    [4, 4, 4, 4],\n\t        dankort:       [4, 4, 4, 4],\n\t        instapayment:  [4, 4, 4, 4],\n\t        jcb:           [4, 4, 4, 4],\n\t        maestro:       [4, 4, 4, 4],\n\t        visa:          [4, 4, 4, 4],\n\t        general:       [4, 4, 4, 4],\n\t        generalStrict: [4, 4, 4, 7]\n\t    },\n\n\t    re: {\n\t        // starts with 1; 15 digits, not starts with 1800 (jcb card)\n\t        uatp: /^(?!1800)1\\d{0,14}/,\n\n\t        // starts with 34/37; 15 digits\n\t        amex: /^3[47]\\d{0,13}/,\n\n\t        // starts with 6011/65/644-649; 16 digits\n\t        discover: /^(?:6011|65\\d{0,2}|64[4-9]\\d?)\\d{0,12}/,\n\n\t        // starts with 300-305/309 or 36/38/39; 14 digits\n\t        diners: /^3(?:0([0-5]|9)|[689]\\d?)\\d{0,11}/,\n\n\t        // starts with 51-55/22-27; 16 digits\n\t        mastercard: /^(5[1-5]|2[2-7])\\d{0,14}/,\n\n\t        // starts with 5019/4175/4571; 16 digits\n\t        dankort: /^(5019|4175|4571)\\d{0,12}/,\n\n\t        // starts with 637-639; 16 digits\n\t        instapayment: /^63[7-9]\\d{0,13}/,\n\n\t        // starts with 2131/1800/35; 16 digits\n\t        jcb: /^(?:2131|1800|35\\d{0,2})\\d{0,12}/,\n\n\t        // starts with 50/56-58/6304/67; 16 digits\n\t        maestro: /^(?:5[0678]\\d{0,2}|6304|67\\d{0,2})\\d{0,12}/,\n\n\t        // starts with 4; 16 digits\n\t        visa: /^4\\d{0,15}/\n\t    },\n\n\t    getInfo: function (value, strictMode) {\n\t        var blocks = CreditCardDetector.blocks,\n\t            re = CreditCardDetector.re;\n\n\t        // In theory, visa credit card can have up to 19 digits number.\n\t        // Set strictMode to true will remove the 16 max-length restrain,\n\t        // however, I never found any website validate card number like\n\t        // this, hence probably you don't need to enable this option.\n\t        strictMode = !!strictMode;\n\n\t        if (re.amex.test(value)) {\n\t            return {\n\t                type:   'amex',\n\t                blocks: blocks.amex\n\t            };\n\t        } else if (re.uatp.test(value)) {\n\t            return {\n\t                type:   'uatp',\n\t                blocks: blocks.uatp\n\t            };\n\t        } else if (re.diners.test(value)) {\n\t            return {\n\t                type:   'diners',\n\t                blocks: blocks.diners\n\t            };\n\t        } else if (re.discover.test(value)) {\n\t            return {\n\t                type:   'discover',\n\t                blocks: strictMode ? blocks.generalStrict : blocks.discover\n\t            };\n\t        } else if (re.mastercard.test(value)) {\n\t            return {\n\t                type:   'mastercard',\n\t                blocks: blocks.mastercard\n\t            };\n\t        } else if (re.dankort.test(value)) {\n\t            return {\n\t                type:   'dankort',\n\t                blocks: blocks.dankort\n\t            };\n\t        } else if (re.instapayment.test(value)) {\n\t            return {\n\t                type:   'instapayment',\n\t                blocks: blocks.instapayment\n\t            };\n\t        } else if (re.jcb.test(value)) {\n\t            return {\n\t                type:   'jcb',\n\t                blocks: blocks.jcb\n\t            };\n\t        } else if (re.maestro.test(value)) {\n\t            return {\n\t                type:   'maestro',\n\t                blocks: strictMode ? blocks.generalStrict : blocks.maestro\n\t            };\n\t        } else if (re.visa.test(value)) {\n\t            return {\n\t                type:   'visa',\n\t                blocks: strictMode ? blocks.generalStrict : blocks.visa\n\t            };\n\t        } else {\n\t            return {\n\t                type:   'unknown',\n\t                blocks: strictMode ? blocks.generalStrict : blocks.general\n\t            };\n\t        }\n\t    }\n\t};\n\n\tmodule.exports = CreditCardDetector;\n\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tvar Util = {\n\t    noop: function () {\n\t    },\n\n\t    strip: function (value, re) {\n\t        return value.replace(re, '');\n\t    },\n\n\t    isDelimiter: function (letter, delimiter, delimiters) {\n\t        // single delimiter\n\t        if (delimiters.length === 0) {\n\t            return letter === delimiter;\n\t        }\n\n\t        // multiple delimiters\n\t        return delimiters.some(function (current) {\n\t            if (letter === current) {\n\t                return true;\n\t            }\n\t        });\n\t    },\n\n\t    getDelimiterREByDelimiter: function (delimiter) {\n\t        return new RegExp(delimiter.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1'), 'g');\n\t    },\n\n\t    stripDelimiters: function (value, delimiter, delimiters) {\n\t        var owner = this;\n\n\t        // single delimiter\n\t        if (delimiters.length === 0) {\n\t            var delimiterRE = delimiter ? owner.getDelimiterREByDelimiter(delimiter) : '';\n\n\t            return value.replace(delimiterRE, '');\n\t        }\n\n\t        // multiple delimiters\n\t        delimiters.forEach(function (current) {\n\t            value = value.replace(owner.getDelimiterREByDelimiter(current), '');\n\t        });\n\n\t        return value;\n\t    },\n\n\t    headStr: function (str, length) {\n\t        return str.slice(0, length);\n\t    },\n\n\t    getMaxLength: function (blocks) {\n\t        return blocks.reduce(function (previous, current) {\n\t            return previous + current;\n\t        }, 0);\n\t    },\n\n\t    // strip value by prefix length\n\t    // for prefix: PRE\n\t    // (PRE123, 3) -> 123\n\t    // (PR123, 3) -> 23 this happens when user hits backspace in front of \"PRE\"\n\t    getPrefixStrippedValue: function (value, prefix, prefixLength) {\n\t        if (value.slice(0, prefixLength) !== prefix) {\n\t            var diffIndex = this.getFirstDiffIndex(prefix, value.slice(0, prefixLength));\n\n\t            value = prefix + value.slice(diffIndex, diffIndex + 1) + value.slice(prefixLength + 1);\n\t        }\n\n\t        return value.slice(prefixLength);\n\t    },\n\n\t    getFirstDiffIndex: function (prev, current) {\n\t        var index = 0;\n\n\t        while (prev.charAt(index) === current.charAt(index))\n\t            if (prev.charAt(index++) === '')\n\t                return -1;\n\n\t        return index;\n\t    },\n\n\t    getFormattedValue: function (value, blocks, blocksLength, delimiter, delimiters) {\n\t        var result = '',\n\t            multipleDelimiters = delimiters.length > 0,\n\t            currentDelimiter;\n\n\t        // no options, normal input\n\t        if (blocksLength === 0) {\n\t            return value;\n\t        }\n\n\t        blocks.forEach(function (length, index) {\n\t            if (value.length > 0) {\n\t                var sub = value.slice(0, length),\n\t                    rest = value.slice(length);\n\n\t                result += sub;\n\n\t                currentDelimiter = multipleDelimiters ? (delimiters[index] || currentDelimiter) : delimiter;\n\n\t                if (sub.length === length && index < blocksLength - 1) {\n\t                    result += currentDelimiter;\n\t                }\n\n\t                // update remaining string\n\t                value = rest;\n\t            }\n\t        });\n\n\t        return result;\n\t    },\n\n\t    isAndroid: function () {\n\t        if (navigator && /android/i.test(navigator.userAgent)) {\n\t            return true;\n\t        }\n\n\t        return false;\n\t    },\n\n\t    // On Android chrome, the keyup and keydown events\n\t    // always return key code 229 as a composition that\n\t    // buffers the user’s keystrokes\n\t    // see https://github.com/nosir/cleave.js/issues/147\n\t    isAndroidBackspaceKeydown: function (lastInputValue, currentInputValue) {\n\t        if (!this.isAndroid()) {\n\t            return false;\n\t        }\n\n\t        return currentInputValue === lastInputValue.slice(0, -1);\n\t    }\n\t};\n\n\tmodule.exports = Util;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\n\t/**\n\t * Props Assignment\n\t *\n\t * Separate this, so react module can share the usage\n\t */\n\tvar DefaultProperties = {\n\t    // Maybe change to object-assign\n\t    // for now just keep it as simple\n\t    assign: function (target, opts) {\n\t        target = target || {};\n\t        opts = opts || {};\n\n\t        // credit card\n\t        target.creditCard = !!opts.creditCard;\n\t        target.creditCardStrictMode = !!opts.creditCardStrictMode;\n\t        target.creditCardType = '';\n\t        target.onCreditCardTypeChanged = opts.onCreditCardTypeChanged || (function () {});\n\n\t        // phone\n\t        target.phone = !!opts.phone;\n\t        target.phoneRegionCode = opts.phoneRegionCode || 'AU';\n\t        target.phoneFormatter = {};\n\n\t        // date\n\t        target.date = !!opts.date;\n\t        target.datePattern = opts.datePattern || ['d', 'm', 'Y'];\n\t        target.dateFormatter = {};\n\n\t        // numeral\n\t        target.numeral = !!opts.numeral;\n\t        target.numeralIntegerScale = opts.numeralIntegerScale > 0 ? opts.numeralIntegerScale : 0;\n\t        target.numeralDecimalScale = opts.numeralDecimalScale >= 0 ? opts.numeralDecimalScale : 2;\n\t        target.numeralDecimalMark = opts.numeralDecimalMark || '.';\n\t        target.numeralThousandsGroupStyle = opts.numeralThousandsGroupStyle || 'thousand';\n\t        target.numeralPositiveOnly = !!opts.numeralPositiveOnly;\n\t        target.stripLeadingZeroes = (undefined == opts.stripLeadingZeroes) ? true : opts.stripLeadingZeroes;\n\n\t        // others\n\t        target.numericOnly = target.creditCard || target.date || !!opts.numericOnly;\n\n\t        target.uppercase = !!opts.uppercase;\n\t        target.lowercase = !!opts.lowercase;\n\n\t        target.prefix = (target.creditCard || target.phone || target.date) ? '' : (opts.prefix || '');\n\t        target.prefixLength = target.prefix.length;\n\t        target.rawValueTrimPrefix = !!opts.rawValueTrimPrefix;\n\t        target.copyDelimiter = !!opts.copyDelimiter;\n\n\t        target.initValue = (opts.initValue !== undefined && opts.initValue !== null) ? opts.initValue.toString() : '';\n\n\t        target.delimiter =\n\t            (opts.delimiter || opts.delimiter === '') ? opts.delimiter :\n\t                (opts.date ? '/' :\n\t                    (opts.numeral ? ',' :\n\t                        (opts.phone ? ' ' :\n\t                            ' ')));\n\t        target.delimiterLength = target.delimiter.length;\n\t        target.delimiters = opts.delimiters || [];\n\n\t        target.blocks = opts.blocks || [];\n\t        target.blocksLength = target.blocks.length;\n\n\t        target.root = (typeof global === 'object' && global) ? global : window;\n\n\t        target.maxLength = 0;\n\n\t        target.backspace = false;\n\t        target.result = '';\n\n\t        return target;\n\t    }\n\t};\n\n\tmodule.exports = DefaultProperties;\n\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }\n/******/ ])\n});\n;\n\n/***/ }),\n\n/***/ 843:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('b-field', [_c('b-input', {\n    directives: [{\n      name: \"cleave\",\n      rawName: \"v-cleave\",\n      value: (_vm.masks.creditCard),\n      expression: \"masks.creditCard\"\n    }],\n    attrs: {\n      \"placeholder\": \"Credit Card\"\n    }\n  })], 1), _vm._v(\" \"), _c('b-field', [_c('b-input', {\n    directives: [{\n      name: \"cleave\",\n      rawName: \"v-cleave\",\n      value: (_vm.masks.numeral),\n      expression: \"masks.numeral\"\n    }],\n    attrs: {\n      \"placeholder\": \"Numeral\"\n    }\n  })], 1), _vm._v(\" \"), _c('b-field', {\n    attrs: {\n      \"addons\": false\n    }\n  }, [_c('b-input', {\n    directives: [{\n      name: \"cleave\",\n      rawName: \"v-cleave\",\n      value: (_vm.masks.custom),\n      expression: \"masks.custom\"\n    }],\n    attrs: {\n      \"placeholder\": \"Custom\"\n    },\n    nativeOn: {\n      \"input\": function($event) {\n        _vm.getRawValue($event)\n      }\n    },\n    model: {\n      value: (_vm.value),\n      callback: function($$v) {\n        _vm.value = $$v\n      },\n      expression: \"value\"\n    }\n  }), _vm._v(\" \"), _c('p', [_c('b', [_vm._v(\"Formatted value (v-model)\")]), _vm._v(\": \" + _vm._s(_vm.value))]), _vm._v(\" \"), _c('p', [_c('b', [_vm._v(\"Raw value\")]), _vm._v(\": \" + _vm._s(_vm.rawValue))])], 1)], 1)\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 923:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__examples_ExFormat__ = __webpack_require__(231);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__examples_ExFormat___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__examples_ExFormat__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__raw_loader_examples_ExFormat__ = __webpack_require__(1046);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__raw_loader_examples_ExFormat___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__raw_loader_examples_ExFormat__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    data: function data() {\n        return {\n            ExFormat: __WEBPACK_IMPORTED_MODULE_0__examples_ExFormat___default.a,\n            ExFormatCode: __WEBPACK_IMPORTED_MODULE_1__raw_loader_examples_ExFormat___default.a\n        };\n    }\n});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/27.edfebb59c5e98c3e38f6.js","module.exports = \"<template>\\n    <section>\\n        <b-field>\\n            <b-input\\n                placeholder=\\\"Credit Card\\\"\\n                v-cleave=\\\"masks.creditCard\\\">\\n            </b-input>\\n        </b-field>\\n\\n        <b-field>\\n            <b-input\\n                placeholder=\\\"Numeral\\\"\\n                v-cleave=\\\"masks.numeral\\\">\\n            </b-input>\\n        </b-field>\\n\\n        <b-field :addons=\\\"false\\\">\\n            <b-input\\n                placeholder=\\\"Custom\\\"\\n                v-model=\\\"value\\\"\\n                v-cleave=\\\"masks.custom\\\"\\n                @input.native=\\\"getRawValue\\\">\\n            </b-input>\\n            <p><b>Formatted value (v-model)</b>: {{ value }}</p>\\n            <p><b>Raw value</b>: {{ rawValue }}</p>\\n        </b-field>\\n    </section>\\n</template>\\n\\n<script>\\n    // You have to install cleave.js to use it:\\n    // 'npm install cleave.js'\\n    import Cleave from 'cleave.js'\\n\\n    /**\\n     * We add a new instance of Cleave when the element\\n     * is bound or updated, and destroy it when it's unbound.\\n     */\\n    const cleave = {\\n        name: 'cleave',\\n        bind(el, binding) {\\n            const input = el.querySelector('input')\\n            input._vCleave = new Cleave(input, binding.value)\\n        },\\n        update(el, binding) {\\n            const input = el.querySelector('input')\\n            input._vCleave.destroy()\\n            input._vCleave = new Cleave(input, binding.value)\\n        },\\n        unbind(el) {\\n            const input = el.querySelector('input')\\n            input._vCleave.destroy()\\n        }\\n    }\\n\\n    export default {\\n        directives: { cleave },\\n        data() {\\n            return {\\n                value: '',\\n                rawValue: '',\\n                masks: {\\n                    creditCard: { creditCard: true },\\n                    numeral: {\\n                        numeral: true,\\n                        numeralThousandsGroupStyle: 'thousand',\\n                        prefix: '$ '\\n                    },\\n                    custom: {\\n                        delimiters: ['.', '.', '-'],\\n                        blocks: [3, 3, 3, 2],\\n                        numericOnly: true\\n                    }\\n                }\\n            }\\n        },\\n        methods: {\\n            getRawValue(event) {\\n                this.rawValue = event.target._vCleave.getRawValue()\\n            }\\n        }\\n    }\\n</script>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./docs/pages/extensions/cleavejs/examples/ExFormat.vue\n// module id = 1046\n// module chunks = 27","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"default-container\"\n  }, [_c('h1', {\n    staticClass: \"title is-spaced\"\n  }, [_vm._v(\"Cleave.js \")]), _vm._v(\" \"), _c('h2', {\n    staticClass: \"subtitle\"\n  }, [_vm._v(\"Format input text while you type — as a Vue directive\")]), _vm._v(\" \"), _vm._m(0), _vm._v(\" \"), _c('Example', {\n    attrs: {\n      \"component\": _vm.ExFormat,\n      \"code\": _vm.ExFormatCode,\n      \"vertical\": \"\"\n    }\n  }, [_c('b-message', {\n    attrs: {\n      \"type\": \"is-info\"\n    }\n  }, [_c('p', [_c('strong', [_vm._v(\"Cleave.js is not included in Buefy\")]), _vm._v(\", you have to install it:\")]), _vm._v(\" \"), _c('CodeView', {\n    attrs: {\n      \"code\": \"npm install cleave.js\",\n      \"expanded\": \"\"\n    }\n  })], 1)], 1)], 1)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"buttons\"\n  }, [_c('a', {\n    staticClass: \"button\",\n    attrs: {\n      \"href\": \"https://nosir.github.io/cleave.js\",\n      \"target\": \"_blank\"\n    }\n  }, [_vm._v(\"\\n            Website\\n        \")]), _vm._v(\" \"), _c('a', {\n    staticClass: \"button\",\n    attrs: {\n      \"href\": \"https://github.com/nosir/cleave.js/blob/master/doc/options.md\",\n      \"target\": \"_blank\"\n    }\n  }, [_vm._v(\"\\n            Docs\\n        \")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-bb86b9ea\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./docs/pages/extensions/cleavejs/Cleavejs.vue\n// module id = 1079\n// module chunks = 27","var Component = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ExFormat.vue\"),\n  /* template */\n  require(\"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-62f8b29c\\\"}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ExFormat.vue\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/pages/extensions/cleavejs/examples/ExFormat.vue\n// module id = 231\n// module chunks = 27 34","var Component = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Cleavejs.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-bb86b9ea\\\"}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Cleavejs.vue\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/pages/extensions/cleavejs/Cleavejs.vue\n// module id = 262\n// module chunks = 27","<template>\n    <section>\n        <b-field>\n            <b-input\n                placeholder=\"Credit Card\"\n                v-cleave=\"masks.creditCard\">\n            </b-input>\n        </b-field>\n\n        <b-field>\n            <b-input\n                placeholder=\"Numeral\"\n                v-cleave=\"masks.numeral\">\n            </b-input>\n        </b-field>\n\n        <b-field :addons=\"false\">\n            <b-input\n                placeholder=\"Custom\"\n                v-model=\"value\"\n                v-cleave=\"masks.custom\"\n                @input.native=\"getRawValue\">\n            </b-input>\n            <p><b>Formatted value (v-model)</b>: {{ value }}</p>\n            <p><b>Raw value</b>: {{ rawValue }}</p>\n        </b-field>\n    </section>\n</template>\n\n<script>\n    // You have to install cleave.js to use it:\n    // 'npm install cleave.js'\n    import Cleave from 'cleave.js'\n\n    /**\n     * We add a new instance of Cleave when the element\n     * is bound or updated, and destroy it when it's unbound.\n     */\n    const cleave = {\n        name: 'cleave',\n        bind(el, binding) {\n            const input = el.querySelector('input')\n            input._vCleave = new Cleave(input, binding.value)\n        },\n        update(el, binding) {\n            const input = el.querySelector('input')\n            input._vCleave.destroy()\n            input._vCleave = new Cleave(input, binding.value)\n        },\n        unbind(el) {\n            const input = el.querySelector('input')\n            input._vCleave.destroy()\n        }\n    }\n\n    export default {\n        directives: { cleave },\n        data() {\n            return {\n                value: '',\n                rawValue: '',\n                masks: {\n                    creditCard: { creditCard: true },\n                    numeral: {\n                        numeral: true,\n                        numeralThousandsGroupStyle: 'thousand',\n                        prefix: '$ '\n                    },\n                    custom: {\n                        delimiters: ['.', '.', '-'],\n                        blocks: [3, 3, 3, 2],\n                        numericOnly: true\n                    }\n                }\n            }\n        },\n        methods: {\n            getRawValue(event) {\n                this.rawValue = event.target._vCleave.getRawValue()\n            }\n        }\n    }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ExFormat.vue?f71eb308","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Cleave\"] = factory();\n\telse\n\t\troot[\"Cleave\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\n\t/**\n\t * Construct a new Cleave instance by passing the configuration object\n\t *\n\t * @param {String / HTMLElement} element\n\t * @param {Object} opts\n\t */\n\tvar Cleave = function (element, opts) {\n\t    var owner = this;\n\n\t    if (typeof element === 'string') {\n\t        owner.element = document.querySelector(element);\n\t    } else {\n\t        owner.element = ((typeof element.length !== 'undefined') && element.length > 0) ? element[0] : element;\n\t    }\n\n\t    if (!owner.element) {\n\t        throw new Error('[cleave.js] Please check the element');\n\t    }\n\n\t    opts.initValue = owner.element.value;\n\n\t    owner.properties = Cleave.DefaultProperties.assign({}, opts);\n\n\t    owner.init();\n\t};\n\n\tCleave.prototype = {\n\t    init: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        // no need to use this lib\n\t        if (!pps.numeral && !pps.phone && !pps.creditCard && !pps.date && (pps.blocksLength === 0 && !pps.prefix)) {\n\t            owner.onInput(pps.initValue);\n\n\t            return;\n\t        }\n\n\t        pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);\n\n\t        owner.isAndroid = Cleave.Util.isAndroid();\n\t        owner.lastInputValue = '';\n\n\t        owner.onChangeListener = owner.onChange.bind(owner);\n\t        owner.onKeyDownListener = owner.onKeyDown.bind(owner);\n\t        owner.onCutListener = owner.onCut.bind(owner);\n\t        owner.onCopyListener = owner.onCopy.bind(owner);\n\n\t        owner.element.addEventListener('input', owner.onChangeListener);\n\t        owner.element.addEventListener('keydown', owner.onKeyDownListener);\n\t        owner.element.addEventListener('cut', owner.onCutListener);\n\t        owner.element.addEventListener('copy', owner.onCopyListener);\n\n\n\t        owner.initPhoneFormatter();\n\t        owner.initDateFormatter();\n\t        owner.initNumeralFormatter();\n\n\t        owner.onInput(pps.initValue);\n\t    },\n\n\t    initNumeralFormatter: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        if (!pps.numeral) {\n\t            return;\n\t        }\n\n\t        pps.numeralFormatter = new Cleave.NumeralFormatter(\n\t            pps.numeralDecimalMark,\n\t            pps.numeralIntegerScale,\n\t            pps.numeralDecimalScale,\n\t            pps.numeralThousandsGroupStyle,\n\t            pps.numeralPositiveOnly,\n\t            pps.stripLeadingZeroes,\n\t            pps.delimiter\n\t        );\n\t    },\n\n\t    initDateFormatter: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        if (!pps.date) {\n\t            return;\n\t        }\n\n\t        pps.dateFormatter = new Cleave.DateFormatter(pps.datePattern);\n\t        pps.blocks = pps.dateFormatter.getBlocks();\n\t        pps.blocksLength = pps.blocks.length;\n\t        pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);\n\t    },\n\n\t    initPhoneFormatter: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        if (!pps.phone) {\n\t            return;\n\t        }\n\n\t        // Cleave.AsYouTypeFormatter should be provided by\n\t        // external google closure lib\n\t        try {\n\t            pps.phoneFormatter = new Cleave.PhoneFormatter(\n\t                new pps.root.Cleave.AsYouTypeFormatter(pps.phoneRegionCode),\n\t                pps.delimiter\n\t            );\n\t        } catch (ex) {\n\t            throw new Error('[cleave.js] Please include phone-type-formatter.{country}.js lib');\n\t        }\n\t    },\n\n\t    onKeyDown: function (event) {\n\t        var owner = this, pps = owner.properties,\n\t            charCode = event.which || event.keyCode,\n\t            Util = Cleave.Util,\n\t            currentValue = owner.element.value;\n\n\t        if (Util.isAndroidBackspaceKeydown(owner.lastInputValue, currentValue)) {\n\t            charCode = 8;\n\t        }\n\n\t        owner.lastInputValue = currentValue;\n\n\t        // hit backspace when last character is delimiter\n\t        if (charCode === 8 && Util.isDelimiter(currentValue.slice(-pps.delimiterLength), pps.delimiter, pps.delimiters)) {\n\t            pps.backspace = true;\n\n\t            return;\n\t        }\n\n\t        pps.backspace = false;\n\t    },\n\n\t    onChange: function () {\n\t        this.onInput(this.element.value);\n\t    },\n\n\t    onCut: function (e) {\n\t        this.copyClipboardData(e);\n\t        this.onInput('');\n\t    },\n\n\t    onCopy: function (e) {\n\t        this.copyClipboardData(e);\n\t    },\n\n\t    copyClipboardData: function (e) {\n\t        var owner = this,\n\t            pps = owner.properties,\n\t            Util = Cleave.Util,\n\t            inputValue = owner.element.value,\n\t            textToCopy = '';\n\n\t        if (!pps.copyDelimiter) {\n\t            textToCopy = Util.stripDelimiters(inputValue, pps.delimiter, pps.delimiters);\n\t        } else {\n\t            textToCopy = inputValue;\n\t        }\n\n\t        try {\n\t            if (e.clipboardData) {\n\t                e.clipboardData.setData('Text', textToCopy);\n\t            } else {\n\t                window.clipboardData.setData('Text', textToCopy);\n\t            }\n\n\t            e.preventDefault();\n\t        } catch (ex) {\n\t            //  empty\n\t        }\n\t    },\n\n\t    onInput: function (value) {\n\t        var owner = this, pps = owner.properties,\n\t            Util = Cleave.Util;\n\n\t        // case 1: delete one more character \"4\"\n\t        // 1234*| -> hit backspace -> 123|\n\t        // case 2: last character is not delimiter which is:\n\t        // 12|34* -> hit backspace -> 1|34*\n\t        // note: no need to apply this for numeral mode\n\t        if (!pps.numeral && pps.backspace && !Util.isDelimiter(value.slice(-pps.delimiterLength), pps.delimiter, pps.delimiters)) {\n\t            value = Util.headStr(value, value.length - pps.delimiterLength);\n\t        }\n\n\t        // phone formatter\n\t        if (pps.phone) {\n\t            pps.result = pps.phoneFormatter.format(value);\n\t            owner.updateValueState();\n\n\t            return;\n\t        }\n\n\t        // numeral formatter\n\t        if (pps.numeral) {\n\t            pps.result = pps.prefix + pps.numeralFormatter.format(value);\n\t            owner.updateValueState();\n\n\t            return;\n\t        }\n\n\t        // date\n\t        if (pps.date) {\n\t            value = pps.dateFormatter.getValidatedDate(value);\n\t        }\n\n\t        // strip delimiters\n\t        value = Util.stripDelimiters(value, pps.delimiter, pps.delimiters);\n\n\t        // strip prefix\n\t        value = Util.getPrefixStrippedValue(value, pps.prefix, pps.prefixLength);\n\n\t        // strip non-numeric characters\n\t        value = pps.numericOnly ? Util.strip(value, /[^\\d]/g) : value;\n\n\t        // convert case\n\t        value = pps.uppercase ? value.toUpperCase() : value;\n\t        value = pps.lowercase ? value.toLowerCase() : value;\n\n\t        // prefix\n\t        if (pps.prefix) {\n\t            value = pps.prefix + value;\n\n\t            // no blocks specified, no need to do formatting\n\t            if (pps.blocksLength === 0) {\n\t                pps.result = value;\n\t                owner.updateValueState();\n\n\t                return;\n\t            }\n\t        }\n\n\t        // update credit card props\n\t        if (pps.creditCard) {\n\t            owner.updateCreditCardPropsByValue(value);\n\t        }\n\n\t        // strip over length characters\n\t        value = Util.headStr(value, pps.maxLength);\n\n\t        // apply blocks\n\t        pps.result = Util.getFormattedValue(value, pps.blocks, pps.blocksLength, pps.delimiter, pps.delimiters);\n\n\t        owner.updateValueState();\n\t    },\n\n\t    updateCreditCardPropsByValue: function (value) {\n\t        var owner = this, pps = owner.properties,\n\t            Util = Cleave.Util,\n\t            creditCardInfo;\n\n\t        // At least one of the first 4 characters has changed\n\t        if (Util.headStr(pps.result, 4) === Util.headStr(value, 4)) {\n\t            return;\n\t        }\n\n\t        creditCardInfo = Cleave.CreditCardDetector.getInfo(value, pps.creditCardStrictMode);\n\n\t        pps.blocks = creditCardInfo.blocks;\n\t        pps.blocksLength = pps.blocks.length;\n\t        pps.maxLength = Util.getMaxLength(pps.blocks);\n\n\t        // credit card type changed\n\t        if (pps.creditCardType !== creditCardInfo.type) {\n\t            pps.creditCardType = creditCardInfo.type;\n\n\t            pps.onCreditCardTypeChanged.call(owner, pps.creditCardType);\n\t        }\n\t    },\n\n\t    setCurrentSelection: function (endPos, oldValue) {\n\t        var elem = this.element;\n\n\t        // If cursor was at the end of value, just place it back.\n\t        // Because new value could contain additional chars.\n\t        if (oldValue.length === endPos) {\n\t            return;\n\t        }\n\n\t        if (elem.createTextRange) {\n\t            var range = elem.createTextRange();\n\n\t            range.move('character', endPos);\n\t            range.select();\n\t        } else {\n\t            elem.setSelectionRange(endPos, endPos);\n\t        }\n\t    },\n\n\t    updateValueState: function () {\n\t        var owner = this;\n\t        var endPos = owner.element.selectionEnd;\n\t        var oldValue = owner.element.value;\n\n\t        // fix Android browser type=\"text\" input field\n\t        // cursor not jumping issue\n\t        if (owner.isAndroid) {\n\t            window.setTimeout(function () {\n\t                owner.element.value = owner.properties.result;\n\t                owner.setCurrentSelection(endPos, oldValue);\n\t            }, 1);\n\n\t            return;\n\t        }\n\n\t        owner.element.value = owner.properties.result;\n\t        owner.setCurrentSelection(endPos, oldValue);\n\t    },\n\n\t    setPhoneRegionCode: function (phoneRegionCode) {\n\t        var owner = this, pps = owner.properties;\n\n\t        pps.phoneRegionCode = phoneRegionCode;\n\t        owner.initPhoneFormatter();\n\t        owner.onChange();\n\t    },\n\n\t    setRawValue: function (value) {\n\t        var owner = this, pps = owner.properties;\n\n\t        value = value !== undefined && value !== null ? value.toString() : '';\n\n\t        if (pps.numeral) {\n\t            value = value.replace('.', pps.numeralDecimalMark);\n\t        }\n\n\t        owner.element.value = value;\n\t        owner.onInput(value);\n\t    },\n\n\t    getRawValue: function () {\n\t        var owner = this,\n\t            pps = owner.properties,\n\t            Util = Cleave.Util,\n\t            rawValue = owner.element.value;\n\n\t        if (pps.rawValueTrimPrefix) {\n\t            rawValue = Util.getPrefixStrippedValue(rawValue, pps.prefix, pps.prefixLength);\n\t        }\n\n\t        if (pps.numeral) {\n\t            rawValue = pps.numeralFormatter.getRawValue(rawValue);\n\t        } else {\n\t            rawValue = Util.stripDelimiters(rawValue, pps.delimiter, pps.delimiters);\n\t        }\n\n\t        return rawValue;\n\t    },\n\n\t    getFormattedValue: function () {\n\t        return this.element.value;\n\t    },\n\n\t    destroy: function () {\n\t        var owner = this;\n\n\t        owner.element.removeEventListener('input', owner.onChangeListener);\n\t        owner.element.removeEventListener('keydown', owner.onKeyDownListener);\n\t        owner.element.removeEventListener('cut', owner.onCutListener);\n\t        owner.element.removeEventListener('copy', owner.onCopyListener);\n\t    },\n\n\t    toString: function () {\n\t        return '[Cleave Object]';\n\t    }\n\t};\n\n\tCleave.NumeralFormatter = __webpack_require__(1);\n\tCleave.DateFormatter = __webpack_require__(2);\n\tCleave.PhoneFormatter = __webpack_require__(3);\n\tCleave.CreditCardDetector = __webpack_require__(4);\n\tCleave.Util = __webpack_require__(5);\n\tCleave.DefaultProperties = __webpack_require__(6);\n\n\t// for angular directive\n\t((typeof global === 'object' && global) ? global : window)['Cleave'] = Cleave;\n\n\t// CommonJS\n\tmodule.exports = Cleave;\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tvar NumeralFormatter = function (numeralDecimalMark,\n\t                                 numeralIntegerScale,\n\t                                 numeralDecimalScale,\n\t                                 numeralThousandsGroupStyle,\n\t                                 numeralPositiveOnly,\n\t                                 stripLeadingZeroes,\n\t                                 delimiter) {\n\t    var owner = this;\n\n\t    owner.numeralDecimalMark = numeralDecimalMark || '.';\n\t    owner.numeralIntegerScale = numeralIntegerScale > 0 ? numeralIntegerScale : 0;\n\t    owner.numeralDecimalScale = numeralDecimalScale >= 0 ? numeralDecimalScale : 2;\n\t    owner.numeralThousandsGroupStyle = numeralThousandsGroupStyle || NumeralFormatter.groupStyle.thousand;\n\t    owner.numeralPositiveOnly = !!numeralPositiveOnly;\n\t    owner.stripLeadingZeroes = (undefined == stripLeadingZeroes) ? true : stripLeadingZeroes;\n\t    owner.delimiter = (delimiter || delimiter === '') ? delimiter : ',';\n\t    owner.delimiterRE = delimiter ? new RegExp('\\\\' + delimiter, 'g') : '';\n\t};\n\n\tNumeralFormatter.groupStyle = {\n\t    thousand: 'thousand',\n\t    lakh:     'lakh',\n\t    wan:      'wan'\n\t};\n\n\tNumeralFormatter.prototype = {\n\t    getRawValue: function (value) {\n\t        return value.replace(this.delimiterRE, '').replace(this.numeralDecimalMark, '.');\n\t    },\n\n\t    format: function (value) {\n\t        var owner = this, parts, partInteger, partDecimal = '';\n\n\t        // strip alphabet letters\n\t        value = value.replace(/[A-Za-z]/g, '')\n\t            // replace the first decimal mark with reserved placeholder\n\t            .replace(owner.numeralDecimalMark, 'M')\n\n\t            // strip non numeric letters except minus and \"M\"\n\t            // this is to ensure prefix has been stripped\n\t            .replace(/[^\\dM-]/g, '')\n\n\t            // replace the leading minus with reserved placeholder\n\t            .replace(/^\\-/, 'N')\n\n\t            // strip the other minus sign (if present)\n\t            .replace(/\\-/g, '')\n\n\t            // replace the minus sign (if present)\n\t            .replace('N', owner.numeralPositiveOnly ? '' : '-')\n\n\t            // replace decimal mark\n\t            .replace('M', owner.numeralDecimalMark);\n\n\t        // strip any leading zeros\n\t        if (owner.stripLeadingZeroes) {\n\t            value = value.replace(/^(-)?0+(?=\\d)/, '$1');\n\t        }\n\n\t        partInteger = value;\n\n\t        if (value.indexOf(owner.numeralDecimalMark) >= 0) {\n\t            parts = value.split(owner.numeralDecimalMark);\n\t            partInteger = parts[0];\n\t            partDecimal = owner.numeralDecimalMark + parts[1].slice(0, owner.numeralDecimalScale);\n\t        }\n\n\t        if (owner.numeralIntegerScale > 0) {\n\t          partInteger = partInteger.slice(0, owner.numeralIntegerScale + (value.slice(0, 1) === '-' ? 1 : 0));\n\t        }\n\n\t        switch (owner.numeralThousandsGroupStyle) {\n\t        case NumeralFormatter.groupStyle.lakh:\n\t            partInteger = partInteger.replace(/(\\d)(?=(\\d\\d)+\\d$)/g, '$1' + owner.delimiter);\n\n\t            break;\n\n\t        case NumeralFormatter.groupStyle.wan:\n\t            partInteger = partInteger.replace(/(\\d)(?=(\\d{4})+$)/g, '$1' + owner.delimiter);\n\n\t            break;\n\n\t        default:\n\t            partInteger = partInteger.replace(/(\\d)(?=(\\d{3})+$)/g, '$1' + owner.delimiter);\n\t        }\n\n\t        return partInteger.toString() + (owner.numeralDecimalScale > 0 ? partDecimal.toString() : '');\n\t    }\n\t};\n\n\tmodule.exports = NumeralFormatter;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tvar DateFormatter = function (datePattern) {\n\t    var owner = this;\n\n\t    owner.blocks = [];\n\t    owner.datePattern = datePattern;\n\t    owner.initBlocks();\n\t};\n\n\tDateFormatter.prototype = {\n\t    initBlocks: function () {\n\t        var owner = this;\n\t        owner.datePattern.forEach(function (value) {\n\t            if (value === 'Y') {\n\t                owner.blocks.push(4);\n\t            } else {\n\t                owner.blocks.push(2);\n\t            }\n\t        });\n\t    },\n\n\t    getBlocks: function () {\n\t        return this.blocks;\n\t    },\n\n\t    getValidatedDate: function (value) {\n\t        var owner = this, result = '';\n\n\t        value = value.replace(/[^\\d]/g, '');\n\n\t        owner.blocks.forEach(function (length, index) {\n\t            if (value.length > 0) {\n\t                var sub = value.slice(0, length),\n\t                    sub0 = sub.slice(0, 1),\n\t                    rest = value.slice(length);\n\n\t                switch (owner.datePattern[index]) {\n\t                case 'd':\n\t                    if (sub === '00') {\n\t                        sub = '01';\n\t                    } else if (parseInt(sub0, 10) > 3) {\n\t                        sub = '0' + sub0;\n\t                    } else if (parseInt(sub, 10) > 31) {\n\t                        sub = '31';\n\t                    }\n\n\t                    break;\n\n\t                case 'm':\n\t                    if (sub === '00') {\n\t                        sub = '01';\n\t                    } else if (parseInt(sub0, 10) > 1) {\n\t                        sub = '0' + sub0;\n\t                    } else if (parseInt(sub, 10) > 12) {\n\t                        sub = '12';\n\t                    }\n\n\t                    break;\n\t                }\n\n\t                result += sub;\n\n\t                // update remaining string\n\t                value = rest;\n\t            }\n\t        });\n\n\t        return this.getFixedDateString(result);\n\t    },\n\n\t    getFixedDateString: function (value) {\n\t        var owner = this, datePattern = owner.datePattern, date = [],\n\t            dayIndex = 0, monthIndex = 0, yearIndex = 0,\n\t            dayStartIndex = 0, monthStartIndex = 0, yearStartIndex = 0,\n\t            day, month, year;\n\n\t        // mm-dd || dd-mm\n\t        if (value.length === 4 && datePattern[0].toLowerCase() !== 'y' && datePattern[1].toLowerCase() !== 'y') {\n\t            dayStartIndex = datePattern[0] === 'd' ? 0 : 2;\n\t            monthStartIndex = 2 - dayStartIndex;\n\t            day = parseInt(value.slice(dayStartIndex, dayStartIndex + 2), 10);\n\t            month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);\n\n\t            date = this.getFixedDate(day, month, 0);\n\t        }\n\n\t        // yyyy-mm-dd || yyyy-dd-mm || mm-dd-yyyy || dd-mm-yyyy || dd-yyyy-mm || mm-yyyy-dd\n\t        if (value.length === 8) {\n\t            datePattern.forEach(function (type, index) {\n\t                switch (type) {\n\t                case 'd':\n\t                    dayIndex = index;\n\t                    break;\n\t                case 'm':\n\t                    monthIndex = index;\n\t                    break;\n\t                default:\n\t                    yearIndex = index;\n\t                    break;\n\t                }\n\t            });\n\n\t            yearStartIndex = yearIndex * 2;\n\t            dayStartIndex = (dayIndex <= yearIndex) ? dayIndex * 2 : (dayIndex * 2 + 2);\n\t            monthStartIndex = (monthIndex <= yearIndex) ? monthIndex * 2 : (monthIndex * 2 + 2);\n\n\t            day = parseInt(value.slice(dayStartIndex, dayStartIndex + 2), 10);\n\t            month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);\n\t            year = parseInt(value.slice(yearStartIndex, yearStartIndex + 4), 10);\n\n\t            date = this.getFixedDate(day, month, year);\n\t        }\n\n\t        return date.length === 0 ? value : datePattern.reduce(function (previous, current) {\n\t            switch (current) {\n\t            case 'd':\n\t                return previous + owner.addLeadingZero(date[0]);\n\t            case 'm':\n\t                return previous + owner.addLeadingZero(date[1]);\n\t            default:\n\t                return previous + '' + (date[2] || '');\n\t            }\n\t        }, '');\n\t    },\n\n\t    getFixedDate: function (day, month, year) {\n\t        day = Math.min(day, 31);\n\t        month = Math.min(month, 12);\n\t        year = parseInt((year || 0), 10);\n\n\t        if ((month < 7 && month % 2 === 0) || (month > 8 && month % 2 === 1)) {\n\t            day = Math.min(day, month === 2 ? (this.isLeapYear(year) ? 29 : 28) : 30);\n\t        }\n\n\t        return [day, month, year];\n\t    },\n\n\t    isLeapYear: function (year) {\n\t        return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n\t    },\n\n\t    addLeadingZero: function (number) {\n\t        return (number < 10 ? '0' : '') + number;\n\t    }\n\t};\n\n\tmodule.exports = DateFormatter;\n\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tvar PhoneFormatter = function (formatter, delimiter) {\n\t    var owner = this;\n\n\t    owner.delimiter = (delimiter || delimiter === '') ? delimiter : ' ';\n\t    owner.delimiterRE = delimiter ? new RegExp('\\\\' + delimiter, 'g') : '';\n\n\t    owner.formatter = formatter;\n\t};\n\n\tPhoneFormatter.prototype = {\n\t    setFormatter: function (formatter) {\n\t        this.formatter = formatter;\n\t    },\n\n\t    format: function (phoneNumber) {\n\t        var owner = this;\n\n\t        owner.formatter.clear();\n\n\t        // only keep number and +\n\t        phoneNumber = phoneNumber.replace(/[^\\d+]/g, '');\n\n\t        // strip delimiter\n\t        phoneNumber = phoneNumber.replace(owner.delimiterRE, '');\n\n\t        var result = '', current, validated = false;\n\n\t        for (var i = 0, iMax = phoneNumber.length; i < iMax; i++) {\n\t            current = owner.formatter.inputDigit(phoneNumber.charAt(i));\n\n\t            // has ()- or space inside\n\t            if (/[\\s()-]/g.test(current)) {\n\t                result = current;\n\n\t                validated = true;\n\t            } else {\n\t                if (!validated) {\n\t                    result = current;\n\t                }\n\t                // else: over length input\n\t                // it turns to invalid number again\n\t            }\n\t        }\n\n\t        // strip ()\n\t        // e.g. US: 7161234567 returns (716) 123-4567\n\t        result = result.replace(/[()]/g, '');\n\t        // replace library delimiter with user customized delimiter\n\t        result = result.replace(/[\\s-]/g, owner.delimiter);\n\n\t        return result;\n\t    }\n\t};\n\n\tmodule.exports = PhoneFormatter;\n\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tvar CreditCardDetector = {\n\t    blocks: {\n\t        uatp:          [4, 5, 6],\n\t        amex:          [4, 6, 5],\n\t        diners:        [4, 6, 4],\n\t        discover:      [4, 4, 4, 4],\n\t        mastercard:    [4, 4, 4, 4],\n\t        dankort:       [4, 4, 4, 4],\n\t        instapayment:  [4, 4, 4, 4],\n\t        jcb:           [4, 4, 4, 4],\n\t        maestro:       [4, 4, 4, 4],\n\t        visa:          [4, 4, 4, 4],\n\t        general:       [4, 4, 4, 4],\n\t        generalStrict: [4, 4, 4, 7]\n\t    },\n\n\t    re: {\n\t        // starts with 1; 15 digits, not starts with 1800 (jcb card)\n\t        uatp: /^(?!1800)1\\d{0,14}/,\n\n\t        // starts with 34/37; 15 digits\n\t        amex: /^3[47]\\d{0,13}/,\n\n\t        // starts with 6011/65/644-649; 16 digits\n\t        discover: /^(?:6011|65\\d{0,2}|64[4-9]\\d?)\\d{0,12}/,\n\n\t        // starts with 300-305/309 or 36/38/39; 14 digits\n\t        diners: /^3(?:0([0-5]|9)|[689]\\d?)\\d{0,11}/,\n\n\t        // starts with 51-55/22-27; 16 digits\n\t        mastercard: /^(5[1-5]|2[2-7])\\d{0,14}/,\n\n\t        // starts with 5019/4175/4571; 16 digits\n\t        dankort: /^(5019|4175|4571)\\d{0,12}/,\n\n\t        // starts with 637-639; 16 digits\n\t        instapayment: /^63[7-9]\\d{0,13}/,\n\n\t        // starts with 2131/1800/35; 16 digits\n\t        jcb: /^(?:2131|1800|35\\d{0,2})\\d{0,12}/,\n\n\t        // starts with 50/56-58/6304/67; 16 digits\n\t        maestro: /^(?:5[0678]\\d{0,2}|6304|67\\d{0,2})\\d{0,12}/,\n\n\t        // starts with 4; 16 digits\n\t        visa: /^4\\d{0,15}/\n\t    },\n\n\t    getInfo: function (value, strictMode) {\n\t        var blocks = CreditCardDetector.blocks,\n\t            re = CreditCardDetector.re;\n\n\t        // In theory, visa credit card can have up to 19 digits number.\n\t        // Set strictMode to true will remove the 16 max-length restrain,\n\t        // however, I never found any website validate card number like\n\t        // this, hence probably you don't need to enable this option.\n\t        strictMode = !!strictMode;\n\n\t        if (re.amex.test(value)) {\n\t            return {\n\t                type:   'amex',\n\t                blocks: blocks.amex\n\t            };\n\t        } else if (re.uatp.test(value)) {\n\t            return {\n\t                type:   'uatp',\n\t                blocks: blocks.uatp\n\t            };\n\t        } else if (re.diners.test(value)) {\n\t            return {\n\t                type:   'diners',\n\t                blocks: blocks.diners\n\t            };\n\t        } else if (re.discover.test(value)) {\n\t            return {\n\t                type:   'discover',\n\t                blocks: strictMode ? blocks.generalStrict : blocks.discover\n\t            };\n\t        } else if (re.mastercard.test(value)) {\n\t            return {\n\t                type:   'mastercard',\n\t                blocks: blocks.mastercard\n\t            };\n\t        } else if (re.dankort.test(value)) {\n\t            return {\n\t                type:   'dankort',\n\t                blocks: blocks.dankort\n\t            };\n\t        } else if (re.instapayment.test(value)) {\n\t            return {\n\t                type:   'instapayment',\n\t                blocks: blocks.instapayment\n\t            };\n\t        } else if (re.jcb.test(value)) {\n\t            return {\n\t                type:   'jcb',\n\t                blocks: blocks.jcb\n\t            };\n\t        } else if (re.maestro.test(value)) {\n\t            return {\n\t                type:   'maestro',\n\t                blocks: strictMode ? blocks.generalStrict : blocks.maestro\n\t            };\n\t        } else if (re.visa.test(value)) {\n\t            return {\n\t                type:   'visa',\n\t                blocks: strictMode ? blocks.generalStrict : blocks.visa\n\t            };\n\t        } else {\n\t            return {\n\t                type:   'unknown',\n\t                blocks: strictMode ? blocks.generalStrict : blocks.general\n\t            };\n\t        }\n\t    }\n\t};\n\n\tmodule.exports = CreditCardDetector;\n\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tvar Util = {\n\t    noop: function () {\n\t    },\n\n\t    strip: function (value, re) {\n\t        return value.replace(re, '');\n\t    },\n\n\t    isDelimiter: function (letter, delimiter, delimiters) {\n\t        // single delimiter\n\t        if (delimiters.length === 0) {\n\t            return letter === delimiter;\n\t        }\n\n\t        // multiple delimiters\n\t        return delimiters.some(function (current) {\n\t            if (letter === current) {\n\t                return true;\n\t            }\n\t        });\n\t    },\n\n\t    getDelimiterREByDelimiter: function (delimiter) {\n\t        return new RegExp(delimiter.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1'), 'g');\n\t    },\n\n\t    stripDelimiters: function (value, delimiter, delimiters) {\n\t        var owner = this;\n\n\t        // single delimiter\n\t        if (delimiters.length === 0) {\n\t            var delimiterRE = delimiter ? owner.getDelimiterREByDelimiter(delimiter) : '';\n\n\t            return value.replace(delimiterRE, '');\n\t        }\n\n\t        // multiple delimiters\n\t        delimiters.forEach(function (current) {\n\t            value = value.replace(owner.getDelimiterREByDelimiter(current), '');\n\t        });\n\n\t        return value;\n\t    },\n\n\t    headStr: function (str, length) {\n\t        return str.slice(0, length);\n\t    },\n\n\t    getMaxLength: function (blocks) {\n\t        return blocks.reduce(function (previous, current) {\n\t            return previous + current;\n\t        }, 0);\n\t    },\n\n\t    // strip value by prefix length\n\t    // for prefix: PRE\n\t    // (PRE123, 3) -> 123\n\t    // (PR123, 3) -> 23 this happens when user hits backspace in front of \"PRE\"\n\t    getPrefixStrippedValue: function (value, prefix, prefixLength) {\n\t        if (value.slice(0, prefixLength) !== prefix) {\n\t            var diffIndex = this.getFirstDiffIndex(prefix, value.slice(0, prefixLength));\n\n\t            value = prefix + value.slice(diffIndex, diffIndex + 1) + value.slice(prefixLength + 1);\n\t        }\n\n\t        return value.slice(prefixLength);\n\t    },\n\n\t    getFirstDiffIndex: function (prev, current) {\n\t        var index = 0;\n\n\t        while (prev.charAt(index) === current.charAt(index))\n\t            if (prev.charAt(index++) === '')\n\t                return -1;\n\n\t        return index;\n\t    },\n\n\t    getFormattedValue: function (value, blocks, blocksLength, delimiter, delimiters) {\n\t        var result = '',\n\t            multipleDelimiters = delimiters.length > 0,\n\t            currentDelimiter;\n\n\t        // no options, normal input\n\t        if (blocksLength === 0) {\n\t            return value;\n\t        }\n\n\t        blocks.forEach(function (length, index) {\n\t            if (value.length > 0) {\n\t                var sub = value.slice(0, length),\n\t                    rest = value.slice(length);\n\n\t                result += sub;\n\n\t                currentDelimiter = multipleDelimiters ? (delimiters[index] || currentDelimiter) : delimiter;\n\n\t                if (sub.length === length && index < blocksLength - 1) {\n\t                    result += currentDelimiter;\n\t                }\n\n\t                // update remaining string\n\t                value = rest;\n\t            }\n\t        });\n\n\t        return result;\n\t    },\n\n\t    isAndroid: function () {\n\t        if (navigator && /android/i.test(navigator.userAgent)) {\n\t            return true;\n\t        }\n\n\t        return false;\n\t    },\n\n\t    // On Android chrome, the keyup and keydown events\n\t    // always return key code 229 as a composition that\n\t    // buffers the user’s keystrokes\n\t    // see https://github.com/nosir/cleave.js/issues/147\n\t    isAndroidBackspaceKeydown: function (lastInputValue, currentInputValue) {\n\t        if (!this.isAndroid()) {\n\t            return false;\n\t        }\n\n\t        return currentInputValue === lastInputValue.slice(0, -1);\n\t    }\n\t};\n\n\tmodule.exports = Util;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\n\t/**\n\t * Props Assignment\n\t *\n\t * Separate this, so react module can share the usage\n\t */\n\tvar DefaultProperties = {\n\t    // Maybe change to object-assign\n\t    // for now just keep it as simple\n\t    assign: function (target, opts) {\n\t        target = target || {};\n\t        opts = opts || {};\n\n\t        // credit card\n\t        target.creditCard = !!opts.creditCard;\n\t        target.creditCardStrictMode = !!opts.creditCardStrictMode;\n\t        target.creditCardType = '';\n\t        target.onCreditCardTypeChanged = opts.onCreditCardTypeChanged || (function () {});\n\n\t        // phone\n\t        target.phone = !!opts.phone;\n\t        target.phoneRegionCode = opts.phoneRegionCode || 'AU';\n\t        target.phoneFormatter = {};\n\n\t        // date\n\t        target.date = !!opts.date;\n\t        target.datePattern = opts.datePattern || ['d', 'm', 'Y'];\n\t        target.dateFormatter = {};\n\n\t        // numeral\n\t        target.numeral = !!opts.numeral;\n\t        target.numeralIntegerScale = opts.numeralIntegerScale > 0 ? opts.numeralIntegerScale : 0;\n\t        target.numeralDecimalScale = opts.numeralDecimalScale >= 0 ? opts.numeralDecimalScale : 2;\n\t        target.numeralDecimalMark = opts.numeralDecimalMark || '.';\n\t        target.numeralThousandsGroupStyle = opts.numeralThousandsGroupStyle || 'thousand';\n\t        target.numeralPositiveOnly = !!opts.numeralPositiveOnly;\n\t        target.stripLeadingZeroes = (undefined == opts.stripLeadingZeroes) ? true : opts.stripLeadingZeroes;\n\n\t        // others\n\t        target.numericOnly = target.creditCard || target.date || !!opts.numericOnly;\n\n\t        target.uppercase = !!opts.uppercase;\n\t        target.lowercase = !!opts.lowercase;\n\n\t        target.prefix = (target.creditCard || target.phone || target.date) ? '' : (opts.prefix || '');\n\t        target.prefixLength = target.prefix.length;\n\t        target.rawValueTrimPrefix = !!opts.rawValueTrimPrefix;\n\t        target.copyDelimiter = !!opts.copyDelimiter;\n\n\t        target.initValue = (opts.initValue !== undefined && opts.initValue !== null) ? opts.initValue.toString() : '';\n\n\t        target.delimiter =\n\t            (opts.delimiter || opts.delimiter === '') ? opts.delimiter :\n\t                (opts.date ? '/' :\n\t                    (opts.numeral ? ',' :\n\t                        (opts.phone ? ' ' :\n\t                            ' ')));\n\t        target.delimiterLength = target.delimiter.length;\n\t        target.delimiters = opts.delimiters || [];\n\n\t        target.blocks = opts.blocks || [];\n\t        target.blocksLength = target.blocks.length;\n\n\t        target.root = (typeof global === 'object' && global) ? global : window;\n\n\t        target.maxLength = 0;\n\n\t        target.backspace = false;\n\t        target.result = '';\n\n\t        return target;\n\t    }\n\t};\n\n\tmodule.exports = DefaultProperties;\n\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }\n/******/ ])\n});\n;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/cleave.js/dist/cleave.js\n// module id = 758\n// module chunks = 27 34","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('b-field', [_c('b-input', {\n    directives: [{\n      name: \"cleave\",\n      rawName: \"v-cleave\",\n      value: (_vm.masks.creditCard),\n      expression: \"masks.creditCard\"\n    }],\n    attrs: {\n      \"placeholder\": \"Credit Card\"\n    }\n  })], 1), _vm._v(\" \"), _c('b-field', [_c('b-input', {\n    directives: [{\n      name: \"cleave\",\n      rawName: \"v-cleave\",\n      value: (_vm.masks.numeral),\n      expression: \"masks.numeral\"\n    }],\n    attrs: {\n      \"placeholder\": \"Numeral\"\n    }\n  })], 1), _vm._v(\" \"), _c('b-field', {\n    attrs: {\n      \"addons\": false\n    }\n  }, [_c('b-input', {\n    directives: [{\n      name: \"cleave\",\n      rawName: \"v-cleave\",\n      value: (_vm.masks.custom),\n      expression: \"masks.custom\"\n    }],\n    attrs: {\n      \"placeholder\": \"Custom\"\n    },\n    nativeOn: {\n      \"input\": function($event) {\n        _vm.getRawValue($event)\n      }\n    },\n    model: {\n      value: (_vm.value),\n      callback: function($$v) {\n        _vm.value = $$v\n      },\n      expression: \"value\"\n    }\n  }), _vm._v(\" \"), _c('p', [_c('b', [_vm._v(\"Formatted value (v-model)\")]), _vm._v(\": \" + _vm._s(_vm.value))]), _vm._v(\" \"), _c('p', [_c('b', [_vm._v(\"Raw value\")]), _vm._v(\": \" + _vm._s(_vm.rawValue))])], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-62f8b29c\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./docs/pages/extensions/cleavejs/examples/ExFormat.vue\n// module id = 843\n// module chunks = 27 34","<template>\n    <div class=\"default-container\">\n        <h1 class=\"title is-spaced\">Cleave.js </h1>\n        <h2 class=\"subtitle\">Format input text while you type — as a Vue directive</h2>\n        <div class=\"buttons\">\n            <a\n                class=\"button\"\n                href=\"https://nosir.github.io/cleave.js\"\n                target=\"_blank\">\n                Website\n            </a>\n            <a\n                class=\"button\"\n                href=\"https://github.com/nosir/cleave.js/blob/master/doc/options.md\"\n                target=\"_blank\">\n                Docs\n            </a>\n        </div>\n\n        <Example :component=\"ExFormat\" :code=\"ExFormatCode\" vertical>\n            <b-message type=\"is-info\">\n                <p><strong>Cleave.js is not included in Buefy</strong>, you have to install it:</p>\n                <CodeView code=\"npm install cleave.js\" expanded/>\n            </b-message>\n        </Example>\n    </div>\n</template>\n\n<script>\n    import ExFormat from './examples/ExFormat'\n    import ExFormatCode from '!!raw-loader!./examples/ExFormat'\n\n    export default {\n        data() {\n            return {\n                ExFormat,\n                ExFormatCode\n            }\n        }\n    }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// Cleavejs.vue?488bee78"],"sourceRoot":""}