{"version":3,"sources":["webpack:///static/js/168.cfce4f83a860180c0fa2.js","webpack:///./docs/pages/components/modal/api/modal.js?9084"],"names":["webpackJsonp","98","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","props","name","description","type","values","default","events","parameters"],"mappings":"AAAAA,cAAc,MAERC,GACA,SAAUC,EAAQC,EAAqBC,GAE7C,YACAC,QAAOC,eAAeH,EAAqB,cAAgBI,OAAO,ICNlEJ,EAAA,UAEQK,QAEQC,KAAM,sBACNC,YAAa,iGACbC,KAAM,UACNC,OAAQ,IACRC,QAAS,uBAGTJ,KAAM,yBACNC,8MAEAC,KAAM,mBACNC,OAAQ,IACRC,QAAS,MAGTJ,KAAM,sBACNC,uGACAC,KAAM,MACNC,OAAQ,IACRC,QAAS,MAGTJ,KAAM,qBACNC,YAAa,+CACbC,KAAM,SACNC,OAAQ,IACRC,QAAS,MAGTJ,KAAM,sBACNC,YAAa,gDACbC,KAAM,SACNC,OAAQ,IACRC,QAAS,MAGTJ,KAAM,uBACNC,YAAa,eACbC,KAAM,SACNC,OAAQ,IACRC,QAAS,MAGTJ,KAAM,qBACNC,YAAa,kDACbC,KAAM,iBACNC,OAAQ,IACRC,QAAS,qBAGTJ,KAAM,8BACNC,4HACAC,KAAM,UACNC,OAAQ,IACRC,QAAS,uBAGTJ,KAAM,yBACNC,YAAa,qCACbC,KAAM,SACNC,OAAQ,IACRC,QAAS,0BAGTJ,KAAM,yBACNC,mFACAC,KAAM,iBACNC,OAAQ,4DACRC,oDAGAJ,KAAM,wBACNC,6GACAC,KAAM,WACNC,OAAQ,IACRC,QAAS,MAGTJ,KAAM,sBACNC,8QAEAC,KAAM,SACNC,OAAQ,uCACRC,QAAS,sBAGjBC,SAEQL,KAAM,qBACNC,YAAa,4FACbK,WAAY","file":"static/js/168.cfce4f83a860180c0fa2.js","sourcesContent":["webpackJsonp([168],{\n\n/***/ 98:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony default export */ __webpack_exports__[\"default\"] = ([{\n    props: [{\n        name: '<code>active</code>',\n        description: 'Whether modal is active or not, use the <code>.sync</code> modifier to make it two-way binding',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>component</code>',\n        description: 'Component to be injected, used to open a component modal programmatically.\\n                    Close modal within the component by emitting a \\'close\\' event \\u2014 <code>this.$emit(\\'close\\')</code>',\n        type: 'Object, Function',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>parent</code>',\n        description: 'Parent component of the modal, <strong>required</strong> if using <code>component</code>',\n        type: 'Vue',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>props</code>',\n        description: 'Props to be binded to the injected component',\n        type: 'Object',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>events</code>',\n        description: 'Events to be binded to the injected component',\n        type: 'Object',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>content</code>',\n        description: 'HTML content',\n        type: 'String',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>width</code>',\n        description: 'Width of the Modal, maximum of <code>960</code>',\n        type: 'Number, String',\n        values: '—',\n        default: '<code>960</code>'\n    }, {\n        name: '<code>has-modal-card</code>',\n        description: 'If your modal content has a <code>.modal-card</code> as root, add this prop or the card might break on mobile',\n        type: 'Boolean',\n        values: '—',\n        default: '<code>false</code>'\n    }, {\n        name: '<code>animation</code>',\n        description: 'Custom animation (transition name)',\n        type: 'String',\n        values: '—',\n        default: '<code>zoom-out</code>'\n    }, {\n        name: '<code>canCancel</code>',\n        description: 'Can close Modal by clicking \\'X\\', pressing escape or clicking outside',\n        type: 'Boolean, Array',\n        values: '<code>escape</code>, <code>x</code>, <code>outside</code>',\n        default: '<code>[\\'escape\\', \\'x\\', \\'outside\\']</code>'\n    }, {\n        name: '<code>onCancel</code>',\n        description: 'Callback function to call after user canceled (clicked \\'X\\' / pressed escape / clicked outside)',\n        type: 'Function',\n        values: '—',\n        default: '—'\n    }, {\n        name: '<code>scroll</code>',\n        description: '<code>clip</code> to remove the <code>&lt;body&gt;</code> scrollbar, <code>keep</code> to have a non scrollable scrollbar\\n                    to avoid shifting background, but will set <code>&lt;body&gt;</code> to position fixed, might break some layouts',\n        type: 'String',\n        values: '<code>clip</code>, <code>keep</code>',\n        default: '<code>clip</code>'\n    }],\n    events: [{\n        name: '<code>close</code>',\n        description: 'Triggers when user closed/canceled or called programmatically from the injected component',\n        parameters: '—'\n    }]\n}]);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/168.cfce4f83a860180c0fa2.js","export default [\n    {\n        props: [\n            {\n                name: '<code>active</code>',\n                description: 'Whether modal is active or not, use the <code>.sync</code> modifier to make it two-way binding',\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>component</code>',\n                description: `Component to be injected, used to open a component modal programmatically.\n                    Close modal within the component by emitting a 'close' event — <code>this.$emit('close')</code>`,\n                type: 'Object, Function',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>parent</code>',\n                description: `Parent component of the modal, <strong>required</strong> if using <code>component</code>`,\n                type: 'Vue',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>props</code>',\n                description: 'Props to be binded to the injected component',\n                type: 'Object',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>events</code>',\n                description: 'Events to be binded to the injected component',\n                type: 'Object',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>content</code>',\n                description: 'HTML content',\n                type: 'String',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>width</code>',\n                description: 'Width of the Modal, maximum of <code>960</code>',\n                type: 'Number, String',\n                values: '—',\n                default: '<code>960</code>'\n            },\n            {\n                name: '<code>has-modal-card</code>',\n                description: `If your modal content has a <code>.modal-card</code> as root, add this prop or the card might break on mobile`,\n                type: 'Boolean',\n                values: '—',\n                default: '<code>false</code>'\n            },\n            {\n                name: '<code>animation</code>',\n                description: 'Custom animation (transition name)',\n                type: 'String',\n                values: '—',\n                default: '<code>zoom-out</code>'\n            },\n            {\n                name: '<code>canCancel</code>',\n                description: `Can close Modal by clicking 'X', pressing escape or clicking outside`,\n                type: 'Boolean, Array',\n                values: '<code>escape</code>, <code>x</code>, <code>outside</code>',\n                default: `<code>['escape', 'x', 'outside']</code>`\n            },\n            {\n                name: '<code>onCancel</code>',\n                description: `Callback function to call after user canceled (clicked 'X' / pressed escape / clicked outside)`,\n                type: 'Function',\n                values: '—',\n                default: '—'\n            },\n            {\n                name: '<code>scroll</code>',\n                description: `<code>clip</code> to remove the <code>&lt;body&gt;</code> scrollbar, <code>keep</code> to have a non scrollable scrollbar\n                    to avoid shifting background, but will set <code>&lt;body&gt;</code> to position fixed, might break some layouts`,\n                type: 'String',\n                values: '<code>clip</code>, <code>keep</code>',\n                default: '<code>clip</code>'\n            }\n        ],\n        events: [\n            {\n                name: '<code>close</code>',\n                description: 'Triggers when user closed/canceled or called programmatically from the injected component',\n                parameters: '—'\n            }\n        ]\n    }\n]\n\n\n\n// WEBPACK FOOTER //\n// ./docs/pages/components/modal/api/modal.js"],"sourceRoot":""}