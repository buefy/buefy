@use "bulma/sass/utilities/css-variables" as cv;
@use "bulma/sass/utilities/initial-variables" as iv;
@use "bulma/sass/utilities/mixins" as mixins;


$carousel-min-height: 120px !default;

$carousel-arrow-background: cv.getVar('scheme-main') !default;
$carousel-arrow-color: cv.getVar('primary') !default;
$carousel-arrow-icon-spaced: 1.5rem !default;
$carousel-arrow-top: 50% !default;

$carousel-indicator-background: rgba(cv.getVar('scheme-invert'), 0.50) !default;
$carousel-indicator-border: cv.getVar('scheme-main') !default;
$carousel-indicator-color: cv.getVar('primary') !default;
$carousel-indicator-spaced: .5rem !default;

$carousel-overlay-background: rgba(cv.getVar('scheme-invert'), 0.86) !default;
$carousel-overlay-z: 40 !default;

.#{iv.$class-prefix}carousel {
    @include cv.register-vars(
    (
        "carousel-min-height": #{$carousel-min-height},
        "carousel-arrow-background": #{$carousel-arrow-background},
        "carousel-arrow-color": #{$carousel-arrow-color},
        "carousel-arrow-icon-spaced": #{$carousel-arrow-icon-spaced},
        "carousel-arrow-top": #{$carousel-arrow-top},
        "carousel-indicator-background": #{$carousel-indicator-background},
        "carousel-indicator-border": #{$carousel-indicator-border},
        "carousel-indicator-color": #{$carousel-indicator-color},
        "carousel-indicator-spaced": #{$carousel-indicator-spaced},
        "carousel-overlay-background": #{$carousel-overlay-background},
        "carousel-overlay-z": #{$carousel-overlay-z}
    )
    );
}

.#{iv.$class-prefix}carousel {
    @include mixins.unselectable;
    min-height: cv.getVar('carousel-min-height');
    position: relative;
    &.is-overlay {
        background-color: cv.getVar('carousel-overlay-background');
        align-items: center;
        flex-direction: column;
        justify-content: center;
        display: flex;
        max-height: 100vh;
        position: fixed;
        z-index: cv.getVar('carousel-overlay-z');
        .carousel-item img {
            cursor: default;
        }
        .carousel-indicator.has-background {
            background: transparent;
        }
    }
    .progress {
        border-radius: cv.getVar('radius-small');
        height: 0.25rem;
        margin-bottom: 0;
    }
    .carousel-items {
        position: relative;
        display: flex;
        overflow: hidden;
        width: 100%;
        &:hover .carousel-arrow.is-hovered {
            @include mixins.tablet {
                opacity: 1;
            }
        }
        .carousel-item {
            flex-shrink: 0;
            width: 100%;
        }
    }
    .carousel-pause {
        pointer-events: none;
        position: absolute;
        top: 0;
        right: 0.15rem;
        z-index: 1;
    }
    .carousel-indicator {
        width: 100%;
        padding: cv.getVar('carousel-indicator-spaced');
        display: flex;
        align-items: center;
        justify-content: center;
        &.has-background {
            background: cv.getVar('carousel-indicator-background');
        }
        &.has-custom {
            flex-wrap: nowrap;
            justify-content: flex-start;
            @include mixins.overflow-touch;
            overflow: hidden;
            overflow-x: auto;
            &.is-small .indicator-item {
                flex: 1 0 10%;
            }
            &.is-medium .indicator-item {
                flex: 1 0 16.66667%;
            }
        }
        &.is-inside {
            position: absolute;
            &.is-bottom {
                bottom: 0;
            }
            &.is-top {
                top: 0;
            }
        }
        .indicator-item {
            &:not(:last-child) {
                margin-right: cv.getVar('carousel-indicator-spaced');
            }
            &.is-active .indicator-style,
            .indicator-style:hover {
                background: cv.getVar('carousel-indicator-color');
                border: 1px solid cv.getVar('carousel-indicator-border');
            }
            .indicator-style {
                display: block;
                border: 1px solid cv.getVar('carousel-indicator-color');
                background: cv.getVar('carousel-indicator-border');
                outline: none;
                transition: cv.getVar('speed-slow') cv.getVar('easing');
                &.is-boxes {
                    height: 10px;
                    width: 10px;
                }
                &.is-dots {
                    border-radius: cv.getVar('radius-rounded');
                    height: 10px;
                    width: 10px;
                }
                &.is-lines {
                    height: 5px;
                    width: 25px;
                }
            }
        }
    }
}

.carousel-list {
    @include mixins.unselectable;
    position: relative;
    overflow: hidden;
    width: 100%;
    &.has-shadow {
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.25);
    }
    &:hover .carousel-arrow.is-hovered {
        @include mixins.tablet {
            opacity: 1;
        }
    }
    .carousel-slides {
        position: relative;
        display: flex;
        width: 100%;
        &:not(.is-dragging) {
            transition: all cv.getVar('speed-slower') ease-out 0s;
        }
        &.has-grayscale {
            .carousel-slide {
                img {
                    filter: grayscale(100%);
                }
                &.is-active img {
                    filter: grayscale(0%);
                }
            }
        }
        &.has-opacity {
            .carousel-slide {
                img {
                    opacity: 0.25
                }
                &.is-active img {
                    opacity: 1
                }
            }
        }
        .carousel-slide {
            border: 2px solid transparent;
            flex-shrink: 0;
        }
    }
}

.carousel-arrow {
    transition: cv.getVar('speed-slow') cv.getVar('easing');
    &.is-hovered {
        opacity: 0;
    }
    .icon {
        background: cv.getVar('carousel-arrow-background');
        color: cv.getVar('carousel-arrow-color');
        cursor: pointer;
        border: 1px solid cv.getVar('carousel-arrow-background');
        border-radius: cv.getVar('radius-rounded');
        outline: 0;
        &:hover {
            border: 1px solid cv.getVar('carousel-arrow-color');
            opacity: 1;
        }
        &.has-icons-left,
        &.has-icons-right {
            position: absolute;
            top: cv.getVar('carousel-arrow-top');
            transform: translateY(-50%);
            z-index: 1;
        }
        &.has-icons-left {
            left: cv.getVar('carousel-arrow-icon-spaced');
        }
        &.has-icons-right {
            right: cv.getVar('carousel-arrow-icon-spaced');
        }
    }
}